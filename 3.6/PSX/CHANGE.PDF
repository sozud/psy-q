%PDF-1.2 
%‚„œ”
 
7 0 obj
<<
/Length 8 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf0  Tc 0.0299  Tw ($PSDocId: Document Release 1.0 for Runtime Library Release 3.6$) Tj0 -23.52  TD 0.0343  Tc -0.0043  Tw (                                                                96.Sep.) TjT* 0.0037  Tc 0.0263  Tw (                                         PlayStation\(R\) Programmer Tool) Tj0 -11.76  TD -0.0162  Tc 0.0462  Tw (                                           Run-time Library Release 3.6) Tj0 -23.52  TD -0.0159  Tc 0.0459  Tw (                                     Changes from ver.3.5, Enhancements,) Tj0 -11.76  TD -0.0299  Tc 0.0599  Tw (                                                          and Known bugs) Tj0 -23.52  TD -0.0105  Tc 0.0405  Tw (                     Copyright \(C\) 1996 Sony Computer Entertainment Inc.) Tj0 -11.76  TD -0.0164  Tc 0.0464  Tw (                                                    All Rights Reserved.) Tj0 -35.28  TD -0.024  Tc 0.054  Tw (Known Bugs and Cautions) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=========================================================================) TjT* -0.0126  Tc 0.0426  Tw (  In libsnd, where a noise sound source such as SEQ is used , a noise may) TjT* -0.002  Tc 0.032  Tw (  be produced at an unexpected place.  Thus if you want to use a noise,) TjT* -0.0093  Tc 0.0393  Tw (  please use libspu/libsnd functions directly on the programmer) TjT* -0.0088  Tc 0.0388  Tw (  tool\(PC\) or use sampled noise and treat it as the same way) TjT* -0.0325  Tc 0.0625  Tw (  as the waveform.) Tj0 -23.52  TD -0.0068  Tc 0.0368  Tw (  In libgs, dividing GsSortObject4J lower functions using GsA4div) Tj0 -11.76  TD -0.0043  Tc 0.0343  Tw (  will not reflect the TMD translucent information set in "attribute".) TjT* -0.0161  Tc 0.0461  Tw (  If you want to use the translucent attribute, the translucent) TjT* -0.004  Tc 0.034  Tw (  flag of the TMD data must be set ON.) Tj0 -23.52  TD -0.0035  Tc 0.0335  Tw (  In libcd, CdlSetloc must be issued to determine the reading) Tj0 -11.76  TD -0.0021  Tc 0.0321  Tw (  position before issuing CdRead\(\).  Without setting the reading) TjT* -0.0046  Tc 0.0346  Tw (  position, repeating the CdRead\(\)may fail to read in the right) TjT* -0.0108  Tc 0.0408  Tw (  amount of data.) Tj0 -23.52  TD 0.0037  Tc 0.0263  Tw (  In libspu SpuSetVoiceAttr\(\)/SpuGetVoiceAttr\(\), the correct pitch value cannot be) Tj0 -11.76  TD -0.0068  Tc 0.0368  Tw (  set/obtained by using sample_note or note.  The value will contain considerably) TjT* 0.0127  Tc 0.0173  Tw (  large errors.  In order to set/obtain the correct pitch, use the "pitch" attribute.) Tj0 -23.52  TD -0.0093  Tc 0.0393  Tw (  In libgun, the vertical direction counter value stored into the buffer is the system clock value) Tj0 -11.76  TD -0.0016  Tc 0.0316  Tw (  and is cleared at every H-BLANK.  Thus correct the value to reflect the  screen size) TjT* 0.0032  Tc 0.0268  Tw (  before actual use.) Tj0 -82.32  TD 0.0034  Tc 0.0266  Tw (Samples Modified and Added) Tj0 -11.76  TD 0.0226  Tc 0  Tw (==========================================================================) TjT* -0.0172  Tc (CD) TjT* 0.0226  Tc (======) TjT* -0.0203  Tc 0.0503  Tw (  \\PSX\\SAMPLE\\CD\\TUTO\\TUTO1.C now complies with the new CD swapping) TjT* 0.0043  Tc 0.0257  Tw (  specification. Please refer to the document "Imperative Steps for Title) TjT* -0  Tc 0.0307  Tw (   Consisting of Multiple CDs",  BBS released from SCEI and) Tj0 -23.52  TD -0.0133  Tc 0.0433  Tw (                psx\\doc\\jp\\word\\overview\\cd.doc) TjETendstream
endobj
8 0 obj
3572
endobj
4 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 7 0 R
>>
endobj
10 0 obj
<<
/Length 11 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0276  Tc 0  Tw (SCEA\\CNTRL) Tj0 -11.76  TD 0.0226  Tc (=========) TjT* -0.0106  Tc 0.0406  Tw (  SCEA\\CNTRL: Demonstrates usage of the various controller) TjT* -0.0146  Tc 0.0446  Tw (  API's.  This was shown at the autumn SCEA developer's conference in 1996.) TjT* -0.0036  Tc 0.0336  Tw (  The program automatically recognizes what controllers are attached to) TjT* -0.0089  Tc 0.0389  Tw (  the controller ports -- pads, light guns, steering wheels, and) TjT* -0.0264  Tc 0.0564  Tw (  mice.) Tj0 -35.28  TD 0.0056  Tc 0  Tw (Graphics) Tj0 -11.76  TD 0.0226  Tc (============) TjT* -0.0078  Tc 0.0378  Tw (\\PSX\\SAMPLE\\GRAPHICS\\ROTATE\\AXESMIME : Axis Interpolation MIME sample) Tj0 -23.52  TD -0.0098  Tc 0.0398  Tw (\\PSX\\SAMPLE\\GRAPHICS\\CLUTFOG\\TUTO3 : Texture Depth Queuing by DR_LOAD) Tj216 -11.76  TD -0.0228  Tc 0  Tw (sample) Tj-216 -23.52  TD -0.0036  Tc (Sound) Tj0 -11.76  TD 0.0226  Tc (=========) TjT* -0.0082  Tc 0.0382  Tw (\\PSX\\SAMPLE\\SOUND\\SIMPLE\\JUMP: FSEQ Play by Jump Table sample) Tj0 -35.28  TD -0.0072  Tc 0.0372  Tw (Document: Directory Structure, Modifications, and Changes) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=======================================================================) TjT* 0.0062  Tc 0.0238  Tw (\(For Japanese only\)) TjT* -0.009  Tc 0.039  Tw (For this version, the new document in HTML format is added.) TjT* 0.0181  Tc 0.0119  Tw (Please use Netscape 3.0 or later, Internet Explorer 3.0 or later to) TjT* -0.008  Tc 0.038  Tw (browse it.) Tj0 -23.52  TD -0.0157  Tc 0.0457  Tw (Note, with this change, document directory structure was changed as) Tj0 -11.76  TD -0.0311  Tc 0  Tw (follows;) Tj36 -23.52  TD -0.0095  Tc (PSX--DOC--JP---HTML-LIBREF) Tj-36 -11.76  TD -0.192  Tc 0.222  Tw (                     |   |) Tj0 -11.76  TD -0.0207  Tc 0.0507  Tw (                     |   ---OVERVIEW) TjT* -0.192  Tc 0.222  Tw (                     |) TjT* 0.01  Tc 0.02  Tw (                     --TEXT-LIBREF) TjT* -0.192  Tc 0.222  Tw (                     |   |) TjT* -0.0207  Tc 0.0507  Tw (                     |   ---OVERVIEW) TjT* -0.192  Tc 0.222  Tw (                     |) TjT* -0.0131  Tc 0.0431  Tw (                     --WORD-LIBREF) TjT* -0.192  Tc 0.222  Tw (                         |) TjT* -0.0052  Tc 0.0352  Tw (                         ---OVERVIEW) Tj0 -23.52  TD 0.0093  Tc 0.0207  Tw (The documents, "abstract.txt" & "appendix.txt" and "function.txt" & "struct.txt") Tj0 -11.76  TD 0.011  Tc 0.019  Tw (that were previously under "TEXT" were merged into "OVERVIEW" and "LIBREF") TjT* -0.0074  Tc 0  Tw (respectively.) Tj0 -35.28  TD 0.0372  Tc -0.0072  Tw (   \(e.g.\)..TEXT\\GPU\\ABSTRACT.TXT, APPENDIX.TXT\201\250..TEXT\\OVERVIEW\\GPU.TXT) Tj0 -11.76  TD 0.0412  Tc -0.0112  Tw (       ..TEXT\\GPU\\FUNCTION.TXT, STRUCT.TXT\201\250..TEXT\\LIBREF\\GPU.TXT) Tj0 -35.28  TD -0.0018  Tc 0.0318  Tw (The size of the argument, "result"\(8 bytes\) was added to the CdReadSync \(\) explanation.) Tj0 -23.52  TD 0.0026  Tc 0.0274  Tw (An incorrect specification of CdGetSector\(\) was corrected in the "Library Reference".) TjETendstream
endobj
11 0 obj
3181
endobj
9 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 10 0 R
>>
endobj
13 0 obj
<<
/Length 14 0 R
>>
stream
BT90 698.88  TD0 0 0 rg /F0 9.96  Tf0.0038  Tc 0.0262  Tw (The bit explanation of GsSPRITE member, "attribute", was enhanced.) Tj0 -23.52  TD -0.0026  Tc 0.0326  Tw (Type 2 instruction mapping table for C header files\(inlin_c.h, inline_o.h\)) Tj0 -11.76  TD -0.0087  Tc 0.0387  Tw (  and Assemble header file\(inline_a.h\) and explanation of Type 2 instruction with) TjT* -0.0013  Tc 0.0313  Tw (  and without "nop" was added to dmpsx abstract.txt ) Tj0 -23.52  TD -0.0115  Tc 0.0415  Tw (  GsDefDispBuff \(\) explanation was modified.) Tj0 -11.76  TD -0  Tc 0.0302  Tw (   Wrong default values for the double buffer \(0,0\), \(0, y_res\) was) TjT* 0.0371  Tc -0.0071  Tw (   corrected to \(0,0\), \(0,0\).) Tj0 -35.28  TD -0  Tc 0.0307  Tw (Serial Input/Output Library \(libsio\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (======================================================================) Tj0 -23.52  TD -0.0096  Tc 0.0396  Tw (This is a newly available library from this release 3.6.) Tj0 -11.76  TD -0.0083  Tc 0.0383  Tw (This is a library to perform standard I/O between PC and PS using the communication) TjT* 0.0256  Tc 0.0044  Tw (cable DTL-H3050.) TjT* -0.0104  Tc 0.0404  Tw (Since the standard I/O of the debugging station is set to NULL normally, no debug) TjT* -0  Tc 0.0304  Tw (information can be obtained.) TjT* -0.0015  Tc 0.0315  Tw (By using this library, libsio, standard I/O can be allocated to the PS communication port, and) TjT* -0.0021  Tc 0.0321  Tw (by connecting the communication cable DTL-H3050, RS232C I/O is enabled.) Tj0 -23.52  TD -0.0143  Tc 0.0443  Tw (Available Functions) TjT* 0.0072  Tc 0.0228  Tw (        AddSIO            ) Tj108 0  TD -0.0018  Tc 0.0318  Tw (Registers SIO Driver) Tj-108 -11.76  TD 0.0087  Tc 0.0213  Tw (        DelSIO  ) Tj108 0  TD 0.0082  Tc 0.0218  Tw (Delete SIO Driver) Tj-108 -11.76  TD 0.02  Tc 0.01  Tw (        _sio_control) Tj72 0  TD 0.0091  Tc 0.0209  Tw (BIOS Interface for SIO Driver) Tj-72 -35.28  TD 0.0051  Tc 0.0249  Tw (Kernel Library\(libapi\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=========================================================) Tj0 -23.52  TD -0.0211  Tc 0.0511  Tw (Renamed Function) Tj0 -11.76  TD 0.0226  Tc 0  Tw (==================) TjT* -0.0093  Tc 0.0393  Tw (In C++, the function "delete" releases memory that was allocated by) TjT* -0.012  Tc 0.042  Tw (the "new" function.  Unfortunately, this "delete" conflicts with the) TjT* 0.0149  Tc 0.0151  Tw (libapi function, "delete\(\)", and causes compiler errors.  To avoid) TjT* 0.0055  Tc 0.0245  Tw (these compiler errors, the libapi function "delete\(\)" has been changed) TjT* 0.0419  Tc -0.0119  Tw (to "erase\(\)".) Tj0 -47.04  TD 0.0306  Tc -0  Tw (Malloc.obj deleted) Tj0 -11.76  TD 0.0226  Tc 0  Tw (========================) Tj0 -23.52  TD -0.0009  Tc 0.0309  Tw (The functions included in the "malloc.obj" file have been moved into) Tj0 -11.76  TD -0.0086  Tc 0.0386  Tw (libapi.lib, and the names of those functions have been changed) TjT* 0.0215  Tc 0.0085  Tw (to malloc2\(\), free2\(\), realloc2\(\), InitHeap2\(\), calloc2\(\), free2\(\).) TjT* 0.0087  Tc 0.0213  Tw ("malloc.obj" has been deleted from this release.) Tj0 -47.04  TD -0.0061  Tc 0.0361  Tw (Functions Added) Tj0 -11.76  TD 0.0226  Tc 0  Tw (==================) TjETendstream
endobj
14 0 obj
3338
endobj
12 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 13 0 R
>>
endobj
16 0 obj
<<
/Length 17 0 R
>>
stream
BT90 698.88  TD0 0 0 rg /F0 9.96  Tf0.0144  Tc 0.0156  Tw (InitHeap2       ) Tj72 0  TD 0.0016  Tc 0.0284  Tw (Initializes Heap Area) Tj-72 -11.76  TD -0.0515  Tc 0.0815  Tw (      Syntax  ) Tj72 0  TD 0.0139  Tc 0.0161  Tw (void InitHeap2) Tj60.24 0  TD 0.0131  Tc 0.0169  Tw (\( head, size \)) Tj-132.24 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.0102  Tc 0.0402  Tw (void *head;) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.0095  Tc 0.0395  Tw (long size;) Tj-72 -11.76  TD -0.0514  Tc 0.0814  Tw (      Arguments ) Tj72 -11.76  TD 0.0139  Tc 0.0161  Tw (head           Heap start address) Tj-72 -11.76  TD -0.0052  Tc 0.0352  Tw (            size            Heap size \( multiple of 4, in bytes\)) Tj0 -11.76  TD 0  Tc 0.03  Tw (        ) Tj36 -11.76  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0061  Tc 0.0361  Tw (This function initializes a group of standard function library) Tj0 -11.76  TD -0.0175  Tc 0.0475  Tw (memory control functions.  After using this function, malloc2\(\), etc.) TjT* 0.0101  Tc 0.0199  Tw (are usable.) Tj0 -23.52  TD 0.005  Tc 0.025  Tw (There is an overhead so the entire "size" in bytes cannot be used.) TjT* -0.005  Tc 0.035  Tw (This is the bug fix version of InitHeap\(\) but causes a) Tj209.76 0  TD 0.0012  Tc 0.0288  Tw ( larger program size) Tj-209.76 -11.76  TD -0.0224  Tc 0.0524  Tw (since this is a memory resident function.   ) Tj-72 -11.76  TD -0.0123  Tc 0.0423  Tw (      Return Value) Tj72 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD -0.0354  Tc 0.0654  Tw (      Remarks    ) Tj72 -11.76  TD -0.0124  Tc 0.0424  Tw (If several executions of this function overlap, the memory control) Tj0 -11.76  TD -0.0149  Tc 0.0449  Tw (information previously held will be lost.) Tj-72 -11.76  TD -0.0075  Tc 0.0375  Tw (      Related Functions) Tj72 -11.76  TD 0.0202  Tc 0  Tw (InitHeap\(\),malloc2\(\),realloc2\(\),calloc2\(\),free2\(\)) Tj-72 -35.28  TD -0.0303  Tc 0.0603  Tw (malloc2         Allocates main memory) Tj0 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0515  Tc 0.0815  Tw (Syntax ) Tj36 0  TD 0.0051  Tc 0.0249  Tw (#include <stdlib.h>) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.004  Tc 0.034  Tw (void *malloc2\(size_t s\)) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0087  Tc 0.0387  Tw (This function allocates "s" bytes of memory block) Tj199.68 0  TD -0.0406  Tc 0.0706  Tw ( from) Tj-199.68 -11.76  TD -0.0302  Tc 0.0602  Tw (the heap memory.) Tj0 -23.52  TD 0.0188  Tc 0.0112  Tw (Corresponds to InitHeap2\(\).) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD -0.0039  Tc 0.0339  Tw (Returns a pointer to allocated memory block.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (          ) Tj36 0  TD -0.0048  Tc 0.0348  Tw (If failed, NULL is returned.) Tj-36 -11.76  TD 0  Tc 0.03  Tw (           ) Tj36 0  TD -0.0241  Tc 0.0541  Tw (*Heap memory is defined as below;) Tj-36 -23.52  TD 0  Tc 0.03  Tw (           ) Tj36 0  TD -0.007  Tc 0.037  Tw (Low Address            Module Highest Address + 4) Tj-36 -11.76  TD 0  Tc 0.03  Tw (           ) Tj36 0  TD -0.0104  Tc 0.0404  Tw (High Address           On-board memory - 64KB) Tj-36 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0263  Tc 0  Tw (calloc2\(\),realloc2\(\),free2\(\)) Tj-72 -35.28  TD 0.0249  Tc 0.0051  Tw (realloc2        ) Tj72 0  TD -0.0199  Tc 0.0499  Tw (Changes the heap memory allocation) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0515  Tc 0.0815  Tw (Syntax     ) Tj72 0  TD 0.0051  Tc 0.0249  Tw (#include <stdlib.h>) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj108 0  TD 0.0041  Tc 0.0259  Tw (void *realloc2\(void *block, size_t s\)) TjETendstream
endobj
17 0 obj
3904
endobj
15 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 16 0 R
>>
endobj
19 0 obj
<<
/Length 20 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0102  Tc 0.0402  Tw (This function increases/decreases the size of the memory block) Tj0 -11.76  TD 0.0056  Tc 0.0244  Tw (previously allocated to "s" bytes.) TjT* -0.0231  Tc 0.0531  Tw (Same as malloc2 when block is NULL.) TjT* 0.0188  Tc 0.0112  Tw (Corresponds to InitHeap2\(\).) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD -0.0032  Tc 0.0332  Tw (Returns a pointer to the reallocated memory block.) Tj0 -11.76  TD -0.0156  Tc 0.0456  Tw (The new pointer may have different address from the) TjT* 0  Tc 0  Tw (original.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (           ) Tj36 0  TD -0.005  Tc 0.035  Tw (If reallocation fails, NULL will be returned, and) Tj36 -11.76  TD -0.0059  Tc 0.0359  Tw (the original block will not be r) Tj121.2 0  TD 0.0147  Tc 0  Tw (eleased.) Tj-193.2 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.018  Tc 0  Tw (calloc2\(\),malloc2\(\),free2\(\)) Tj-72 -35.28  TD 0.0222  Tc 0.0078  Tw (calloc2         ) Tj72 0  TD -0.0387  Tc 0.0687  Tw (Allocates main memory) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0515  Tc 0.0815  Tw (Syntax ) Tj36 0  TD 0.0051  Tc 0.0249  Tw (#include <stdlib.h>) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0047  Tc 0.0253  Tw (void *calloc2\( size_t n, size_t s \)) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0535  Tc 0.0835  Tw (Argument    ) Tj72 0  TD -0.06  Tc 0.09  Tw (n      ) Tj36 0  TD -0.0047  Tc 0.0347  Tw (Number of partitions) Tj-144 -11.76  TD 0  Tc 0.03  Tw (                ) Tj108 0  TD -0.0344  Tc 0.0644  Tw (s       ) Tj36 0  TD 0.0053  Tc 0.0247  Tw (Size of one partition) Tj-144 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0015  Tc 0.0315  Tw (Explanation   ) Tj36 -11.76  TD -0.0104  Tc 0.0404  Tw (This function allocates a block of n*s bytes.) Tj-72 -11.76  TD 0.0188  Tc 0.0112  Tw (            Corresponds to InitHeap2\(\).) Tj0 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD -0.0048  Tc 0.0348  Tw (Returns a pointer to the allocated memory block.) Tj0 -11.76  TD 0  Tc 0.0298  Tw (If the allocat) Tj50.4 0  TD -0.0121  Tc 0.0421  Tw (ion fails, NULL will be returned.) Tj-122.4 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0189  Tc 0  Tw (malloc2\(\),realloc2\(\),free2\(\)) Tj-72 -47.04  TD 0.0124  Tc 0.0176  Tw (free2           ) Tj72 0  TD -0.0081  Tc 0.0381  Tw (Frees allocated memory blocks) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0515  Tc 0.0815  Tw (Syntax ) Tj36 0  TD 0.0051  Tc 0.0249  Tw (#include <stdlib.h>) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0067  Tc 0.0233  Tw (void free2\(void *block\)) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0015  Tc 0.0315  Tw (Explanation ) Tj36 -11.76  TD -0.0144  Tc 0.0444  Tw (This function releases a memory block that was allocated by) Tj0 -11.76  TD 0.0147  Tc 0.0153  Tw (calloc2,malloc2, and realloc2.) Tj-72 -11.76  TD 0.0188  Tc 0.0112  Tw (            Corresponds to InitHeap2\(\).) Tj0 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function  ) Tj36 -11.76  TD 0.0208  Tc 0  Tw (calloc2\(\),malloc2\(\),realloc2\(\)) TjETendstream
endobj
20 0 obj
3634
endobj
18 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 19 0 R
>>
endobj
22 0 obj
<<
/Length 23 0 R
>>
stream
BT90 687.12  TD0 0 0 rg /F0 9.96  Tf0.0256  Tc 0  Tw (DMPSX) Tj0 -11.76  TD 0.0226  Tc (===========================================================) Tj0 -23.52  TD 0.0036  Tc 0.0264  Tw (Library Version Update) Tj0 -11.76  TD 0.0226  Tc 0  Tw (============================) TjT* 0.0103  Tc 0.0197  Tw (DMPSX has been upgraded for GTE specification disclosure.) Tj36 -23.52  TD 0.0141  Tc 0.0159  Tw (DMPSX version 2.06 -> version 3.01) Tj-36 -23.52  TD -0.0038  Tc 0.0338  Tw (Please read "psx\\doc\\jp\\text\\overview\\dmpsx.txt" for detail.) Tj0 -35.28  TD -0.0044  Tc 0.0344  Tw (Header File Changes) Tj0 -11.76  TD 0.0226  Tc 0  Tw (============================) TjT* 0.0078  Tc 0.0222  Tw (Type 2 instruction without "nop" have been added to "inline_c.h".) TjT* 0.0109  Tc 0.0191  Tw (This instruction has the name "gte_rtps_b", "_b" added to the original) TjT* 0.0096  Tc 0.0204  Tw (type 2 instruction name "gte_rtps", and "nop" is deleted.) Tj36 -23.52  TD -0.0046  Tc 0  Tw (\(Example\)) Tj36 -11.76  TD 0.0157  Tc 0.0143  Tw (gte_rtps\(\)  ->  gte_rtps_b\(\)) Tj-72 -23.52  TD -0.0048  Tc 0.0348  Tw (DMPSX gives errors and will not convert when there are cop2 instructions) Tj0 -11.76  TD -0.012  Tc 0.042  Tw (in 2 slots prior to the type 2 instructions.  Thus when using type 2 instructions) TjT* -0.008  Tc 0.038  Tw (without nop in the program, make sure to place instruction \(e.g. CPU instruction\)) TjT* 0.0121  Tc 0.0179  Tw (other than cop2.) Tj0 -35.28  TD -0.011  Tc 0.041  Tw (CD-ROM Library/Streaming Library \(libcd\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (======================================================) Tj0 -23.52  TD -0.0044  Tc 0.0344  Tw (Header File Changes) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=====================) TjT* 0.0112  Tc 0.0188  Tw (The prototype declaration for CdReset\(\) has been added to "libcd.h" as follows;) Tj72 -23.52  TD -0.0082  Tc 0.0382  Tw (int CdReset\(int mode\);) Tj-72 -23.52  TD 0  Tc 0.03  Tw (A duplication of the StFreeRing\(\) prototype declaration has been fixed.) Tj0 -35.28  TD -0.0022  Tc 0.0322  Tw (Function Deleted) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=====================) TjT* -0.0055  Tc 0.0355  Tw (The primitive command CdlReset has been deleted.) Tj0 -23.52  TD -0.0205  Tc 0.0505  Tw (When resetting CD subsystem, be sure to use the following function;) Tj36 -23.52  TD -0.0081  Tc 0.0381  Tw (int CdReset\(int mode\)) Tj-36 -23.52  TD -0.0096  Tc 0.0396  Tw (When using the above function, internal variables used in the library) Tj0 -11.76  TD -0.0158  Tc 0.0458  Tw (will not be updated.  For this reason,  any function that follows may not be) TjT* -0.017  Tc 0.047  Tw (invoked correctly.    Affected functions currently known are as below;) Tj36 -23.52  TD 0.0333  Tc 0  Tw (CdMode\(\)) Tj0 -11.76  TD -0.0164  Tc (CdLastCom\(\)) TjETendstream
endobj
23 0 obj
2860
endobj
21 0 obj
<<
/Type /Page
/Parent 5 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 22 0 R
>>
endobj
26 0 obj
<<
/Length 27 0 R
>>
stream
BT90 698.88  TD0 0 0 rg /F0 9.96  Tf-0.0067  Tc 0.0367  Tw (Although CdGetSector\(\) was remarked as a NON-BLOCKING in the earlier ) Tj0 -11.76  TD -0.0101  Tc 0.0401  Tw (version of library reference manual, it actually is a BLOCKING) TjT* -0.0108  Tc 0.0408  Tw (function.  Since the data transfer completes upon returning from a) TjT* -0  Tc 0.0307  Tw (function, you do not need to use CdDataSync\(\) or CdDataCallback\(\) to) TjT* -0.0021  Tc 0.0321  Tw (determine transfer of data has been completed.) Tj0 -35.28  TD -0.0214  Tc 0.0514  Tw (Command Added) Tj0 -11.76  TD 0.0226  Tc 0  Tw (===================) TjT* -0.0023  Tc 0.0323  Tw (The following commands are added to libcd;) Tj36 -23.52  TD 0.0236  Tc 0.0064  Tw (CdlGetTN      ) Tj72 0  TD -0.0107  Tc 0.0407  Tw (Obtains n) Tj38.4 0  TD -0.0034  Tc 0.0334  Tw (umber of TOC entries) Tj-146.4 -11.76  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD 0.0236  Tc 0.0064  Tw (CdlGetTD        ) Tj72 0  TD 0.0094  Tc 0.0206  Tw (Obtains TOC) Tj-108 -23.52  TD -0.002  Tc 0.032  Tw (Refer to the document "overview/cd.doc" for command details.) Tj0 -35.28  TD -0.0025  Tc 0.0325  Tw (Functions Modified) Tj0 -11.76  TD 0.0226  Tc 0  Tw (===================) TjT* -0.0191  Tc 0.0491  Tw (CdGetDiskType\(\) now complies with the new CD swapping specification.) Tj0 -23.52  TD 0.0011  Tc 0.0289  Tw (  Please refer to the document "Imperative Steps for Title Consisting of Multiple CDs",) Tj0 -11.76  TD 0.0076  Tc 0.0224  Tw (  BBS released from SCEI,) TjT* -0.012  Tc 0.042  Tw (                psx\\doc\\jp\\word\\overview\\cd.doc,) TjT* -0.0082  Tc 0.0382  Tw (  and the sample program,) TjT* -0.016  Tc 0.046  Tw (                psx\\sample\\cd\\tuto\\tuto11.c.) Tj0 -23.52  TD -0.0034  Tc 0.0334  Tw (Combat Cable Library\(libcomb\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=========================================================) Tj0 -35.28  TD -0.0073  Tc 0.0373  Tw (Official Version) Tj0 -11.76  TD 0.0226  Tc 0  Tw (===================) TjT* -0.0097  Tc 0.0397  Tw ("libcomb", which was located in the Runtime Library Release 3.5 beta version as \\beta\\comb.lzh, is) TjT* -0.0162  Tc 0.0462  Tw (now officially released in this version.) Tj0 -58.8  TD 0.0053  Tc 0.0247  Tw (Basic Graphics library\(libgpu\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (==============================) Tj0 -23.52  TD -0.0192  Tc 0.0492  Tw (Bug Fixes in Library) Tj0 -11.76  TD 0.0226  Tc 0  Tw (===========================) TjT* 0.0017  Tc 0.0283  Tw (- The bug that all characters specified in KanjiFntOpen\(\) are not displayed) TjT* -0.0146  Tc 0.0446  Tw (   in KanjiFntPrint\(\) when attempting to display many characters has been fixed.) Tj0 -23.52  TD 0.0062  Tc 0.0238  Tw (- The bug that ResetGraph\(3\) did not operate has been fixed.) Tj0 -11.76  TD -0.003  Tc 0.033  Tw (  \(Already fixed in Release 3.5\)) Tj0 -23.52  TD -0.0078  Tc 0.0378  Tw (- The bug that ClearImage\(\) for texture pages \(other than Drawing Area\)) Tj0 -11.76  TD -0.0025  Tc 0.0325  Tw (  only clears either odd or even lines has been fixed.) Tj0 -23.52  TD -0.0286  Tc 0.0586  Tw (- Although the drawing environment was reset within the library upon) TjETendstream
endobj
27 0 obj
3214
endobj
24 0 obj
<<
/Type /Page
/Parent 25 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 26 0 R
>>
endobj
29 0 obj
<<
/Length 30 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0147  Tc 0.0447  Tw (  restarting drawing by ContinueDraw in the previous releases,) Tj0 -11.76  TD -0.0133  Tc 0.0433  Tw (  it now does not reset due to the following bug:) TjT* -0.007  Tc 0.037  Tw (  Upon execution of drawing setting related primitive\(such as DR_ENV\),) TjT* -0.0179  Tc 0.0479  Tw (  suspending the drawing by BreakDraw and then restart by ContinueDraw fails to) TjT* -0.0101  Tc 0.0401  Tw (  set the correct drawing settings.) Tj0 -23.52  TD -0.0136  Tc 0.0436  Tw (  If the drawing environment for the primitives to be inserted and the primitive) Tj0 -11.76  TD -0.0053  Tc 0.0353  Tw (  to be continued are different, add the primitive that resets the drawing) TjT* -0.0082  Tc 0.0382  Tw (  environment at the end of the primitive to be inserted.) Tj0 -23.52  TD -0.0153  Tc 0.0453  Tw (  Although the drawing is suspended by BreakDraw, GPU will not stop) Tj0 -11.76  TD -0.0157  Tc 0.0457  Tw (  until the drawing is completed.) Tj0 -23.52  TD -0.01  Tc 0.04  Tw (  The new function, IsIdleGPU was added to check if the drawing) Tj0 -11.76  TD -0.0012  Tc 0.0312  Tw (  suspended by BreakDraw has been completed or not.) Tj0 -23.52  TD -0.018  Tc 0.048  Tw (- In MargePrim\(\) for checking the maximum packet size, the tag that) Tj0 -11.76  TD -0.011  Tc 0.041  Tw (  the error return value -1 was not returned even when the packet size) TjT* -0.0095  Tc 0.0395  Tw (  exceeds its max, 16-word\(including the tag\), has been fixed.) Tj0 -35.28  TD -0.0039  Tc 0.0339  Tw (Function Added) Tj0 -11.76  TD 0.0226  Tc 0  Tw (======================) TjT* -0.0082  Tc 0.0382  Tw (IsIdleGPU   Checks if the drawing once suspended by BreakDraw) Tj72 -11.76  TD -0.0184  Tc 0.0484  Tw (was completed) Tj-72 -23.52  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0515  Tc 0.0815  Tw (Syntax  ) Tj72 0  TD -0.0044  Tc 0.0344  Tw (int IsIdleGPU\(int maxcount\)) Tj-108 -23.52  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0535  Tc 0.0835  Tw (Argument    ) Tj36 -11.76  TD -0.0271  Tc 0.0571  Tw (maxcount        Count value) Tj-72 -23.52  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0152  Tc 0.0452  Tw ( Although drawing is suspended by BreakDraw, GPU will not stop) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0157  Tc 0.0457  Tw (until the drawing is completed.) Tj0 -23.52  TD -0.0175  Tc 0.0475  Tw (Thus this function checks if the drawing suspended by BreakDraw) Tj0 -11.76  TD -0.007  Tc 0.037  Tw (has been completed or not.  If GPU will not be an idle state within) TjT* -0.0224  Tc 0.0524  Tw (the time given by maxcount, -1 will be returned.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0256  Tc 0.0044  Tw ( 0:      ) Tj36 0  TD 0.0032  Tc 0.0268  Tw (GPU is in idle state) Tj-108 -11.76  TD 0  Tc 0.03  Tw (           ) Tj36 0  TD -0.0085  Tc 0.0385  Tw (-1:     ) Tj36 0  TD -0.013  Tc 0.043  Tw (GPU is in drawing state) Tj-72 -35.28  TD -0.0061  Tc 0.0361  Tw (Functions Added) Tj0 -11.76  TD 0.0226  Tc 0  Tw (====================) TjT* 0.0105  Tc 0.0195  Tw (- Mode for GPU initializing has been added to GsInitGraph\(\) called "intl".) TjT* 0.0081  Tc 0.0219  Tw (  \(Please see the description of the "GsInitGraph" in the "Header File Changes") TjT* -0.0009  Tc 0.0309  Tw (   section below -- [Ed.] \)) Tj0 -23.52  TD 0.001  Tc 0.029  Tw (Extended Graphics Library\(libgs\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=======================================) Tj0 -23.52  TD -0.0192  Tc 0.0492  Tw (Bug Fixes in Library) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=================) TjETendstream
endobj
30 0 obj
3712
endobj
28 0 obj
<<
/Type /Page
/Parent 25 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 29 0 R
>>
endobj
32 0 obj
<<
/Length 33 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf0.003  Tc 0.027  Tw (- In GsLinkObject4 and GsSortObject4, the bug that the gradation square) Tj0 -11.76  TD -0.015  Tc 0.045  Tw (  polygon with light source calculation was not displayed has been fixed. ) TjT* -0.0136  Tc 0.0436  Tw (  With this fix, two new members are added to "_GsFCALL" structure in) TjT* -0.0025  Tc 0.0325  Tw (  "libgs.h".  Please be careful when initializing a jump table.) Tj0 -23.52  TD 0.003  Tc 0.027  Tw (- In GsLinkObject4 and GsSortObject4,  the bug that the gradation square) Tj0 -11.76  TD -0.013  Tc 0.043  Tw (  translucent polygon with light source calculation was displayed as opaque) TjT* -0.0061  Tc 0.0361  Tw (  has been fixed.) Tj0 -35.28  TD -0.0044  Tc 0.0344  Tw (Header File Changes) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=======================) TjT* 0.0086  Tc 0.0214  Tw (In GsSortClear\(\), a prototype declaration duplication had been removed.) Tj0 -47.04  TD -0.0061  Tc 0.0361  Tw (Functions Added) Tj0 -11.76  TD 0.0226  Tc 0  Tw (===================) TjT* 0.0009  Tc (GsInitGraph) Tj72 0  TD -0.014  Tc 0.044  Tw (Graphics System Initialization) Tj-36 -23.52  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD -0.0008  Tc 0.0308  Tw (void GsInitGraph\(ix_res, y_res, intl, dither, vram\)) Tj0 -11.76  TD -0.0067  Tc 0.0367  Tw (int x_res;) TjT* -0.02  Tc 0.05  Tw (int y_res;) TjT* -0.0217  Tc 0.0517  Tw (int intl;) TjT* -0.0043  Tc 0.0343  Tw (int dither;) TjT* -0.0343  Tc 0.0643  Tw (int vram;) Tj-36 -23.52  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD 0.0053  Tc (x_res) Tj36 0  TD 0.024  Tc 0.006  Tw (Horizontal Resolution \(256/320/384/512/640\)) Tj-36 -11.76  TD -0.0187  Tc 0  Tw (y_res) Tj36 0  TD 0.0159  Tc 0.0141  Tw (Vertical Resolution \(240/480\)) Tj-36 -11.76  TD -0.0217  Tc 0  Tw (intl) Tj36 0  TD 0.0021  Tc 0.0279  Tw (Interlace Display Flag\(bit 0\)) Tj36 -11.76  TD 0  Tc 0.0293  Tw (0: Non-interlace) Tj72 0  TD 0.0199  Tc 0  Tw (GsNONINTER) Tj-108 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD 0.0119  Tc 0.0181  Tw (1: Interlace) Tj72 0  TD 0.027  Tc 0  Tw (GSINTER) Tj-108 -23.52  TD 0  Tc 0.0298  Tw (Double buffer offset mode\(bit 2\)) Tj0 -11.76  TD 0.0072  Tc 0.0228  Tw (    0:  GTE Offset) Tj108 0  TD 0.0182  Tc 0  Tw (GsOFSGTE) Tj-108 -11.76  TD 0  Tc 0.0299  Tw (    1:  GPU Offset) Tj108 0  TD 0.0085  Tc 0  Tw (GsOFSGPU) Tj-108 -23.52  TD 0.0116  Tc 0.0184  Tw (GPU Initialize Parameter\(bit 4-5\)) Tj0 -11.76  TD 0.0144  Tc 0.0156  Tw (    0:  ResetGraph\(0\)) Tj144 0  TD 0.0246  Tc 0  Tw (GsRESET0) Tj-144 -11.76  TD 0.0144  Tc 0.0156  Tw (    3:  ResetGraph\(3\)  ) Tj144 0  TD 0.0246  Tc 0  Tw (GsRESET3) Tj-180 -11.76  TD 0.0072  Tc (dither) Tj36 0  TD -0.0092  Tc 0.0392  Tw (Dithering processing fla) Tj96.12 0  TD -0.06  Tc 0  Tw (g) Tj-96.12 -11.76  TD 0.0049  Tc 0.0251  Tw (0: OFF) Tj0 -11.76  TD 0.0172  Tc 0.0128  Tw (1: ON) Tj-36 -11.76  TD -0.0393  Tc 0  Tw (vram:) Tj36 0  TD -0.0214  Tc 0.0514  Tw (VRAM mode) Tj0 -11.76  TD 0.0305  Tc -0  Tw (0: 16bit) TjT* (1: 24bit) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0015  Tc 0.0315  Tw (Resets "libgpu" and initializes "libgs" graphic system.) Tj0 -11.76  TD 0.0078  Tc 0.0222  Tw ("libgpu" settings are accessed by a global variables, GsDISPENV, and) TjT* -0.0151  Tc 0.0451  Tw (GsDRAWENV.  Thus the programmer can verify and/or modify) TjT* 0.0009  Tc 0.0291  Tw ("libgpu" by referencing these variables.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) TjETendstream
endobj
33 0 obj
3529
endobj
31 0 obj
<<
/Type /Page
/Parent 25 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 32 0 R
>>
endobj
35 0 obj
<<
/Length 36 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0129  Tc 0.0429  Tw (Vertical 480 line non-interlace mode is effective only when a) Tj0 -11.76  TD -0.0067  Tc 0.0367  Tw (VGA monitor is connected.) Tj0 -23.52  TD -0  Tc 0.0307  Tw (WARNING: The top and bottom 8 lines are  almost invisible on) Tj0 -11.76  TD -0.0344  Tc 0  Tw (typi) Tj15.36 0  TD -0.018  Tc 0.048  Tw (cal home-use TV monitors when the vertical) Tj-15.36 -11.76  TD 0.0028  Tc 0.0272  Tw (resolution line mode is set to 240.) Tj0 -23.52  TD -0.0069  Tc 0.0369  Tw (For PAL mode, display position should be shifted down by 24 lines.) TjT* -0.0156  Tc 0.0456  Tw (Double buffer offset mode determines whether) Tj0 -11.76  TD 0.0045  Tc 0.0255  Tw (GTE or GPU offset mode is used .  When the GPU is used, the packet) TjT* -0  Tc 0.0302  Tw (does not include offset values,  and thus is easier to be process.) Tj0 -23.52  TD -0.0155  Tc 0.0455  Tw (For 24 bit mode, only the memory image display is available ;) Tj0 -11.76  TD -0.0041  Tc 0.0341  Tw (therefore, polygon drawing cannot be performed.) Tj0 -23.52  TD -0.018  Tc 0.048  Tw (Since initializing the graphic syst) Tj132.36 0  TD -0.0162  Tc 0.0462  Tw (em involves initialization of) Tj-132.36 -11.76  TD 0.0008  Tc 0.0292  Tw (GsIDMATRIX and GsIDMATRIX2 as well, GsInitGraph\(\) must be called) Tj0 -11.76  TD 0.0083  Tc 0.0217  Tw (prior to all other Gs library functions for correct operation.) Tj-36 -23.52  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -35.28  TD -0.0206  Tc 0.0506  Tw (Mip-mapping functions) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=======================) TjT* -0.0066  Tc 0.0366  Tw (\(Editor's note: The following mipmapping functions have been added.  A description) TjT* -0.019  Tc 0.049  Tw (of the exact syntax follows.  Please refer to the \\samples\\graphics\\mipmap for an) TjT* -0.0191  Tc 0.0491  Tw (example implementation.\)) TjT* 0.0141  Tc 0.0159  Tw (GsTMDfastTF4LM        ) Tj108 0  TD -0.0085  Tc 0.0385  Tw (mip-map Flat Texture Square \(Light Source Cal) Tj191.28 0  TD 0.0304  Tc 0  Tw (c.\)) Tj-299.28 -11.76  TD 0.0118  Tc 0.0182  Tw (GsTMDfastTF4LFGM      ) Tj108 0  TD -0.0038  Tc 0.0338  Tw (mip-map Flat Texture Square \(Light Source Calc.\) {FOG\)) Tj-108 -11.76  TD 0.0138  Tc 0.0162  Tw (GsTMDfastTF4NLM       ) Tj108 0  TD -0.0051  Tc 0.0351  Tw (mip-map Flat Texture Square \(Without Light Source Calc.\)) Tj-108 -11.76  TD 0.0209  Tc 0.0091  Tw (GsTMDfastTNF4M       ) Tj108 0  TD -0.0051  Tc 0.0351  Tw (mip-map Flat Texture Square \(Without Light Source Calc.\)) Tj-108 -11.76  TD 0.016  Tc 0.014  Tw (GsTMDfastTG4LM      ) Tj108 0  TD -0.0034  Tc 0.0334  Tw (mip-map Gouraud Texture Square\(Light Source Calc.\)) Tj-108 -11.76  TD 0.0135  Tc 0.0165  Tw (GsTMDfastTG4LFGM      ) Tj144 0  TD -0.0018  Tc 0.0318  Tw (mip-map Gouraud Texture Square\(Light Source Calc.\){FOG\)) Tj-144 -11.76  TD 0.0156  Tc 0.0144  Tw (GsTMDfastTG4NLM       ) Tj108 0  TD -0.0031  Tc 0.0331  Tw (mip-map Gouraud Texture Square\(Without Light Source Calc.\)) Tj-108 -11.76  TD 0.0228  Tc 0.0072  Tw (GsTMDfastTNG4M        ) Tj108 0  TD -0.0465  Tc 0.0765  Tw (mip-map ) Tj38.16 0  TD 0.0037  Tc 0.0263  Tw (Gouraud Texture Square\(Without Light Source Calc.\)) Tj-146.16 -11.76  TD 0.0224  Tc 0.0076  Tw (GsTMDdivTF4LM        ) Tj108 0  TD -0.0052  Tc 0.0352  Tw (mip-map Flat Texture Square\(Fixed Division\) {Light Source Calc.\)) Tj-108 -11.76  TD 0.0188  Tc 0.0112  Tw (GsTMDdivTF4LFGM      ) Tj108 0  TD -0.0074  Tc 0.0374  Tw (mip-map Flat Texture Square) Tj36 -11.76  TD -0.0015  Tc 0.0315  Tw (\(Fixed Division\) {Light Source Calc.\){FOG\)) Tj-144 -11.76  TD 0.0214  Tc 0.0086  Tw (GsTMDdivTF4NLM        ) Tj108 0  TD -0.0074  Tc 0.0374  Tw (mip-map Flat Texture Square) Tj36 -11.76  TD -0.0032  Tc 0.0332  Tw (\(Fixed Division\){Without Light Source Calc.\)) Tj-144 -11.76  TD 0.0297  Tc 0  Tw (GsTMDdivTNF4M         ) Tj108 0  TD -0.0074  Tc 0.0374  Tw (mip-map Flat Texture Square) Tj36 -11.76  TD -0.0032  Tc 0.0332  Tw (\(Fixed Division\){Without Light Source Calc.\)) Tj-144 -11.76  TD 0.0244  Tc 0.0056  Tw (GsTMDdivTG4LM         ) Tj108 0  TD -0.0033  Tc 0.0333  Tw (mip-map Gouraud Texture Square) Tj36 -11.76  TD -0.0028  Tc 0.0328  Tw (\(Fixed Div) Tj43.44 0  TD -0.004  Tc 0.034  Tw (ision\){Light Source Calc.\)) Tj-187.44 -11.76  TD 0.0206  Tc 0.0094  Tw (GsTMDdivTG4LFGM       ) Tj144 0  TD -0.0033  Tc 0.0333  Tw (mip-map Gouraud Texture Square) Tj0 -11.76  TD -0.0015  Tc 0.0315  Tw (\(Fixed Division\){Light Source Calc.\){FOG\)) Tj-144 -11.76  TD 0.0233  Tc 0.0067  Tw (GsTMDdivTG4NLM        ) Tj108 0  TD -0.0033  Tc 0.0333  Tw (mip-map Gouraud Texture Square) Tj36 -11.76  TD -0.0032  Tc 0.0332  Tw (\(Fixed Division\){Without Light Source Calc.\)) Tj-144 -11.76  TD 0.0317  Tc -0.0017  Tw (GsTMDdivTNG4M        ) Tj108 0  TD -0.0033  Tc 0.0333  Tw (mip-map Gouraud Texture Square) Tj36 -11.76  TD -0.0032  Tc 0.0332  Tw (\(Fixed Division\){Without Light Source Calc.\)) Tj-144 -11.76  TD 0.0043  Tc 0.0257  Tw (GsA4divTF4LM          ) Tj108 0  TD -0.0074  Tc 0.0374  Tw (mip-map Flat Texture Square) Tj36 -11.76  TD -0.0109  Tc 0.0409  Tw (\(Automatic Division\){Light Source Calc.\)) Tj-144 -11.76  TD 0.003  Tc 0.027  Tw (GsA4divTF4LFGM        ) Tj108 0  TD -0.0074  Tc 0.0374  Tw (mip-map Flat Texture Square) TjETendstream
endobj
36 0 obj
5412
endobj
34 0 obj
<<
/Type /Page
/Parent 25 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 35 0 R
>>
endobj
38 0 obj
<<
/Length 39 0 R
>>
stream
BT234 710.64  TD0 0 0 rg /F0 9.96  Tf-0.02  Tc 0.05  Tw (\(Automatic Division) Tj81.84 0  TD 0.0008  Tc 0.0292  Tw (\){Light Source Calc.\){FOG\)) Tj-225.84 -11.76  TD 0.0046  Tc 0.0254  Tw (GsA4divTF4NLM         ) Tj108 0  TD -0.0074  Tc 0.0374  Tw (mip-map Flat Texture Square) Tj36 -11.76  TD -0.0094  Tc 0.0394  Tw (\(Automatic Division\){Without Light Source Calc.\)) Tj-144 -11.76  TD 0.0121  Tc 0.0179  Tw (GsA4divTNF4M          ) Tj108 0  TD -0.0074  Tc 0.0374  Tw (mip-map Flat Texture Square) Tj36 -11.76  TD -0.0094  Tc 0.0394  Tw (\(Automatic Division\){Without Light Source Calc.\)) Tj-144 -11.76  TD 0.0065  Tc 0.0235  Tw (GsA4divTG4LM          ) Tj108 0  TD -0.0033  Tc 0.0333  Tw (mip-map Gouraud Texture Square) Tj36 -11.76  TD -0.0109  Tc 0.0409  Tw (\(Automatic Division\){Light Source Calc.\)) Tj-144 -11.76  TD 0.0049  Tc 0.0251  Tw (GsA4divTG4LFGM        ) Tj108 0  TD -0.0033  Tc 0.0333  Tw (mip-map Gouraud Texture Square) Tj36 -11.76  TD -0.0081  Tc 0.0381  Tw (\(Automatic Division\){Light Source Calc.\){FOG\)) Tj-144 -11.76  TD 0.0067  Tc 0.0233  Tw (GsA4divTG4NLM         ) Tj108 0  TD -0.0033  Tc 0.0333  Tw (mip-map Gouraud Texture Square) Tj36 -11.76  TD -0.0443  Tc 0  Tw (\(Autom) Tj30.72 0  TD -0.0039  Tc 0.0339  Tw (atic Division\){Without Light Source Calc.\)) Tj-174.72 -11.76  TD 0.0144  Tc 0.0156  Tw (GsA4divTNG4M         ) Tj108 0  TD -0.0033  Tc 0.0333  Tw (mip-map Gouraud Texture Square) Tj36 -11.76  TD -0.0094  Tc 0.0394  Tw (\(Automatic Division\){Without Light Source Calc.\)) Tj-144 -11.76  TD -0.0515  Tc 0.0815  Tw (        Syntax) Tj72 -11.76  TD 0.0156  Tc 0.0144  Tw (   PACKET *GsTMDfastTF4LM\(TMD_P_TF4 *op, VERT *vp, VERT *np,) Tj-72 -11.76  TD 0  Tc 0.03  Tw (              ) Tj72 0  TD -0.0093  Tc 0.0393  Tw (PACKET *pk,int n,int shift, GsOT *ot\)) Tj-72 -11.76  TD 0.0148  Tc 0.0152  Tw (               PACKET *GsTMDfastTF4LFGM\(TMD_P_TF4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0093  Tc 0.0393  Tw (PACKET *pk,int n,int shift, GsOT *ot\)) Tj-72 -11.76  TD 0.0154  Tc 0.0146  Tw (               PACKET *GsTMDfastTF4NLM\(TMD_P_TF4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0093  Tc 0.0393  Tw (PACKET *pk,int n,int shift, GsOT *ot\)) Tj-72 -11.76  TD 0.0205  Tc 0.0095  Tw (               PACKET *GsTMDfastTNF4M\(TMD_P_TF4 *op, VERT *vp,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0093  Tc 0.0393  Tw (PACKET *pk,int n,int shift, GsOT *ot\)) Tj-72 -11.76  TD 0.0166  Tc 0.0134  Tw (               PACKET *GsTMDfastTG4LM\(TMD_P_TG4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0093  Tc 0.0393  Tw (PACKET *pk,int n,int shift, GsOT *ot\)) Tj-72 -11.76  TD 0.0158  Tc 0.0142  Tw (               PACKET *GsTMDfastTG4LFGM\(TMD_P_TG4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (               ) Tj72 0  TD -0.0093  Tc 0.0393  Tw (PACKET *pk,int n,int shift, GsOT *ot\)) Tj-72 -11.76  TD 0.0165  Tc 0.0135  Tw (               PACKET *GsTMDfastTG4NLM\(TMD_P_TG4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0093  Tc 0.0393  Tw (PACKET *pk,int n,int shift, GsOT *ot\)) Tj-72 -11.76  TD 0.0185  Tc 0.0115  Tw (               PACKET *GsTMDfastTNG4M\(TMD_P_TG4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0093  Tc 0.0393  Tw (PACKET *pk,int n,int shift, GsOT *ot\)) Tj-72 -11.76  TD 0.0177  Tc 0.0123  Tw (               PACKET *GsTMDdivTF4LM\(TMD_P_TF4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0097  Tc 0.0397  Tw (PACKET *pk,int n,int shift, GsOT *ot,) Tj36 -11.76  TD 0.0057  Tc 0.0243  Tw (DIVPOLYGON4 *divp\)) Tj-108 -11.76  TD 0.0169  Tc 0.0131  Tw (               PACKET *GsTMDdivTF4LFGM\(TMD_P_TF4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0097  Tc 0.0397  Tw (PACKET *pk,int n,int shift, GsOT *ot,) Tj180 0  TD 0.0057  Tc 0.0243  Tw (DIVPOLYGON4 *divp\)) Tj-252 -11.76  TD 0.0176  Tc 0.0124  Tw (               PACKET *GsTMDdivTF4NLM\(TMD_P_TF4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0097  Tc 0.0397  Tw (PACKET *pk,int n,int shift, GsOT *ot,) Tj180 0  TD 0.0057  Tc 0.0243  Tw (DIVPOLYGON4 *divp\)) Tj-252 -11.76  TD 0  Tc 0.03  Tw (              ) Tj36 0  TD 0.0233  Tc 0.0067  Tw (PACKET *GsTMDdivTNF4M\(TMD_P_TF4 *op, VERT *vp,) Tj-36 -11.76  TD 0  Tc 0.03  Tw (                    ) Tj72 0  TD -0.0097  Tc 0.0397  Tw (PACKET *pk,int n,int shift, GsOT *ot,) Tj180 0  TD 0.0057  Tc 0.0243  Tw (DIVPOLYGON4 *divp\)) Tj-252 -11.76  TD 0.0188  Tc 0.0112  Tw (               PACKET *GsTMDdivTG4LM\(TMD_P_TG4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0097  Tc 0.0397  Tw (PACKET *pk,int n,int shift, GsOT *ot,) Tj180 0  TD 0.0057  Tc 0.0243  Tw (DIVPOLYGON4 *divp\)) Tj-252 -11.76  TD 0.0179  Tc 0.0121  Tw (               PACKET *GsTMDdivTG4LFGM\(TMD_P_TG4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0097  Tc 0.0397  Tw (PACKET *pk,int n,int shift, GsOT *ot,) Tj180 0  TD 0.0057  Tc 0.0243  Tw (DIVPOLYGON4 *divp\)) Tj-252 -11.76  TD 0.0186  Tc 0.0114  Tw (               PACKET *GsTMDdivTG4NLM\(TMD_P_TG4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0097  Tc 0.0397  Tw (PACKET *pk,int n,int shift, GsOT *ot,) Tj180 0  TD 0.0057  Tc 0.0243  Tw (DIVPOLYGON4 *divp\)) Tj-252 -11.76  TD 0.0245  Tc 0.0055  Tw (               PACKET *GsTMDdivTNG4M\(TMD_P_TG4 *op, VERT *vp,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0097  Tc 0.0397  Tw (PACKET *pk,int n,int shift, GsOT *ot,) Tj180 0  TD 0.0057  Tc 0.0243  Tw (DIVPOLYGON4 *divp\)) Tj-252 -11.76  TD 0.0132  Tc 0.0168  Tw (               PACKET *GsA4divTF4LM\(TMD_P_TF4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0097  Tc 0.0397  Tw (PACKET *pk,int n,int shift, GsOT *ot,) Tj180 0  TD -0.0186  Tc 0.0486  Tw (u_long *scra) Tj51 0  TD -0.002  Tc 0  Tw (tch\)) Tj-303 -11.76  TD 0.0125  Tc 0.0175  Tw (               PACKET *GsA4divTF4LFGM\(TMD_P_TF4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0111  Tc 0.0411  Tw (PACKET *pk,int n,int shift, GsOT *ot, u_long *scratch\)) Tj-72 -11.76  TD 0.0131  Tc 0.0169  Tw (               PACKET *GsA4divTF4NLM\(TMD_P_TF4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0111  Tc 0.0411  Tw (PACKET *pk,int n,int shift, GsOT *ot, u_long *scratch\)) Tj-72 -11.76  TD 0.018  Tc 0.012  Tw (               PACKET *GsA4divTNF4M\(TMD_P_TF4 *op, VERT *vp,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0111  Tc 0.0411  Tw (PACKET *pk,int n,int shift, GsOT *ot, u_long *scratch\)) TjETendstream
endobj
39 0 obj
7084
endobj
37 0 obj
<<
/Type /Page
/Parent 25 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 38 0 R
>>
endobj
41 0 obj
<<
/Length 42 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf0.0143  Tc 0.0157  Tw (               PACKET *GsA4divTG4LM\(TMD_P_TG4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0111  Tc 0.0411  Tw (PACKET *pk,int n,int shift, GsOT *ot, u_long *scratch\)) Tj-72 -11.76  TD 0.0136  Tc 0.0164  Tw (               PACKET *GsA4divTG4LFGM\(TMD_P_TG4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0111  Tc 0.0411  Tw (PACKET *pk,int n,int shift, GsOT *ot, u_long *scratch\)) Tj-72 -11.76  TD 0.0142  Tc 0.0158  Tw (               PACKET *GsA4divTG4NLM\(TMD_P_TG4 *op, VERT *vp, VERT *np,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0111  Tc 0.0411  Tw (PACKET *pk,int n,int shift, GsOT *ot, u_long *scratch\)) Tj-72 -11.76  TD 0.0193  Tc 0.0107  Tw (               PACKET *GsA4divTNG4M\(TMD_P_TG4 *op, VERT *vp,) Tj0 -11.76  TD 0  Tc 0.03  Tw (                   ) Tj72 0  TD -0.0148  Tc 0.0448  Tw (PACKET *pk,int n,int shift, GsOT *ot, u_long *s) Tj198 0  TD 0.0101  Tc 0  Tw (cratch\)) Tj-270 -23.52  TD -0.0535  Tc 0.0835  Tw (        Argument) Tj72 0  TD 0.06  Tc -0.03  Tw (op      ) Tj36 0  TD 0.0185  Tc 0.0115  Tw (TMD PRIMITIVE Starting Address) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD (vp      ) Tj36 0  TD 0.0107  Tc 0.0193  Tw (TMD VERTEXS Starting Address) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD (np      ) Tj36 0  TD -0.0046  Tc 0.0346  Tw (TMD NORMAL Starting Address) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD (pk      ) Tj36 0  TD 0.001  Tc 0.029  Tw (GPU Packet Buffer Starting Address) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.06  Tc 0.09  Tw (n       ) Tj36 0  TD 0.0135  Tc 0.0165  Tw (Number of PRIMITIVEs) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.0378  Tc 0.0678  Tw (shift    ) Tj36 0  TD -0.0078  Tc 0.0378  Tw (Number of bits to be shifted when sorting to OT) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0256  Tc 0.0044  Tw (ot      ) Tj36 0  TD 0.0257  Tc 0.0043  Tw (Pointer to GsOT) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.001  Tc 0.031  Tw (scratch ) Tj36 0  TD -0.0017  Tc 0.0317  Tw (Non-used scratch pad Starting Address) Tj-108 -11.76  TD -0.0015  Tc 0.0315  Tw (        Explanation) Tj72 -11.76  TD -0.0496  Tc 0.0796  Tw (Low le) Tj27.72 0  TD 0.0079  Tc 0.0221  Tw (vel function group of GsSortObject4J\(\)) Tj-99.72 -11.76  TD -0.0086  Tc 0.0386  Tw (            Need to be registered into GsFCALL4 as a low level function) Tj72 -11.76  TD -0.0059  Tc 0.0359  Tw (before using.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0186  Tc 0.0486  Tw (This function performs mip-map, texture switching based) Tj36 -11.76  TD -0.0067  Tc 0.0367  Tw (on the polygon size , to the flat texture squares included in) Tj0 -11.76  TD 0.0231  Tc 0.0069  Tw (the TMD data.) Tj0 -23.52  TD -0.0137  Tc 0.0437  Tw (Locate the texture on the V-RAM as below;) Tj-72 -23.52  TD -0.0643  Tc 0.0943  Tw (                +--------------+-------+) Tj0 -11.76  TD -0.192  Tc 0.222  Tw (                |              |       |) TjT* (                |              |       |) TjT* (                |              |       |) TjT* -0.0584  Tc 0.0884  Tw (                |              +---+---+) TjT* -0.1013  Tc 0.1313  Tw (                |              | +-+   |) TjT* -0.0692  Tc 0.0992  Tw (                |              | +-+---+) TjT* -0.192  Tc 0.222  Tw (                |              |) TjT* -0.0643  Tc 0.0943  Tw (                +--------------+) TjT* 0.0182  Tc 0.0118  Tw (                There are four texture sizes,  1, 1/4, 1/16, and 1/64.) TjT* -0.0115  Tc 0.0415  Tw (                Which texture size should be used is determined by the polygon's) Tj36 -11.76  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD 0.0196  Tc 0.0104  Tw (outer product.) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj0 -11.76  TD -0.0087  Tc 0.0387  Tw (                Polygon vertices must be in the order below;) Tj0 -23.52  TD 0.06  Tc -0.03  Tw (                        0        1) Tj0 -11.76  TD -0.0568  Tc 0.0868  Tw (                        +--------+) TjT* -0.192  Tc 0.222  Tw (                        |        |) TjT* (                        |        |) TjT* (                        |        |) TjT* (                        |        |) TjT* -0.0568  Tc 0.0868  Tw (                        +--------+) TjT* 0.06  Tc -0.03  Tw (                        2        3) TjT* -0.0123  Tc 0.0423  Tw (        Return Value) Tj108 -11.76  TD -0.004  Tc 0.034  Tw (Non-used Packet Area Starting Address) TjETendstream
endobj
42 0 obj
4744
endobj
40 0 obj
<<
/Type /Page
/Parent 25 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 41 0 R
>>
endobj
45 0 obj
<<
/Length 46 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0069  Tc 0.0369  Tw (Basic Geometry Library \(libgte\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=============================================================) Tj0 -23.52  TD -0.0192  Tc 0.0492  Tw (Bug Fixes in Library) Tj0 -11.76  TD 0.0116  Tc 0  Tw (~~~~~~~~~~~~~~~~~~~~~~) TjT* -0.0085  Tc 0.0385  Tw (In the RotMeshPrimS_FCT3 function, setting the) TjT* -0.0028  Tc 0.0328  Tw ("len" member of the TMESH structure to an odd number would cause a bug.) TjT* -0.0096  Tc 0.0396  Tw (All sides of such a mesh would be displayed in reverse, except for the first side.) TjT* -0.0044  Tc 0.0344  Tw (This bug has been fixed.) Tj0 -23.52  TD 0  Tc 0.03  Tw ( ) Tj0 -35.28  TD -0.0044  Tc 0.0344  Tw (Header File Changes) Tj0 -11.76  TD 0.0226  Tc 0  Tw (========================) TjT* -0.0015  Tc 0.0315  Tw (An ApplyMatrix*\(\)  prototype declaration duplication had been removed.) Tj0 -47.04  TD 0  Tc 0.03  Tw (Function Descriptions Added) Tj0 -11.76  TD 0.0226  Tc 0  Tw (========================) TjT* -0.0101  Tc 0.0401  Tw (\(Documentation updates only\)) Tj0 -23.52  TD -0.0024  Tc 0  Tw (SetMulRotMatrix) Tj72 0  TD -0.0117  Tc 0.0417  Tw (Multiplies constant rotation matrix by a matrix and) Tj36 -11.76  TD -0.0067  Tc 0.0367  Tw (sets one constant rotation matrix.) Tj-108 -35.28  TD -0.0515  Tc 0.0815  Tw (     Syntax) Tj72 0  TD -0.0069  Tc 0.0369  Tw (MATRIX* SetMulRotMatrix\(m0\)) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.024  Tc 0.054  Tw (MATRIX *m0;) Tj72 0  TD -0.0252  Tc 0.0552  Tw (/*Input: Matrix */) Tj-144 -23.52  TD -0.0015  Tc 0.0315  Tw (     Explanation) Tj72 -11.76  TD -0.012  Tc 0.042  Tw (This function multiplies constant rotation matrix and) Tj0 -11.76  TD -0.0092  Tc 0.0392  Tw (a matrix and stores the value in one constant rotation matrix.) Tj0 -23.52  TD -0.0298  Tc 0.0598  Tw (<Argument Format>) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD 0.0141  Tc 0.0159  Tw (m0->m[i][j] : \(1,3,12\)) Tj-72 -23.52  TD -0.0123  Tc 0.0423  Tw (     Return Value) Tj72 -11.76  TD -0.0644  Tc 0  Tw (m0) Tj-72 -35.28  TD -0.015  Tc (ApplyRotMatrixLV) Tj108 0  TD -0.0048  Tc 0.0348  Tw (Multiplies a vector by a constant rotation matrix.) Tj-108 -23.52  TD -0.0515  Tc 0.0815  Tw (     Syntax) Tj72 0  TD -0.0061  Tc 0.0361  Tw (VECTOR* ApplyRotMatrixLV\(v0,v1\)) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0069  Tc 0.0369  Tw (VECTOR *v0;) Tj72 0  TD -0.0171  Tc 0.0471  Tw (/* Input: Vector */) Tj-144 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0069  Tc 0.0369  Tw (VECTOR *v1;) Tj72 0  TD -0.0186  Tc 0.0486  Tw (/*Output: Vector */) Tj-144 -23.52  TD -0.0015  Tc 0.0315  Tw (     Explanation) Tj72 -11.76  TD -0.0111  Tc 0.0411  Tw (This function multiplies a constant rotation matrix by a vector) Tj0 -11.76  TD -0.0162  Tc 0.0462  Tw (v0 beginning from the rightmost end and stores the result in) TjT* 0.0111  Tc 0.0189  Tw (vector v1.) Tj-72 -23.52  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0298  Tc 0.0598  Tw (<Argument Format>) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0009  Tc 0.0309  Tw (v0->vx,vy,vz :\(1,31,0\)) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0009  Tc 0.0309  Tw (v1->vx,vy,vz :\(1,31,0\)) TjETendstream
endobj
46 0 obj
3265
endobj
43 0 obj
<<
/Type /Page
/Parent 44 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 45 0 R
>>
endobj
48 0 obj
<<
/Length 49 0 R
>>
stream
BT90 698.88  TD0 0 0 rg /F0 9.96  Tf-0.0123  Tc 0.0423  Tw (     Return Value) Tj72 0  TD 0  Tc 0  Tw (v1) Tj-72 -35.28  TD 0.0044  Tc 0.0256  Tw (MatrixNormal_0 ) Tj72 0  TD -0.0113  Tc 0.0413  Tw (Orthonormalizes a matrix.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD 0.0128  Tc (void) Tj36 0  TD -0.0037  Tc (MatrixNormal_0\(m,n\)) Tj-108 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0333  Tc 0.0633  Tw (MATRIX  *m;) Tj72 0  TD -0.0252  Tc 0.0552  Tw (          /* Input: Matrix */) Tj-144 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.019  Tc 0.049  Tw (MATRIX  *n;) Tj72 0  TD -0.0263  Tc 0.0563  Tw (          /* Output: Matrix*/) Tj-144 -23.52  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD 0.0028  Tc 0.0272  Tw (This function orthonormalizes a distorted rota) Tj183.12 0  TD -0.0176  Tc 0.0476  Tw (tion matrix.) Tj-183.12 -11.76  TD 0.0095  Tc 0.0205  Tw (\(Note: m[2][0],m[2][1], and m[2][2] will be ignored.\)) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj0 -11.76  TD ( ) Tj72 0  TD -0.0298  Tc 0.0598  Tw (<Argument Format>) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD 0.0117  Tc 0.0183  Tw (m->m[i][j] : \(1,3,12\)) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD 0.0184  Tc 0.0116  Tw (n->m[i][j] : \(1,3,12\)) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj0 -23.52  TD (     ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj72 0  TD 0.0067  Tc 0  Tw (None) Tj-108 -11.76  TD 0  Tc 0.03  Tw ( ) Tj0 -23.52  TD -0.015  Tc 0.045  Tw (CompMatrixLV ) Tj72 0  TD -0.0042  Tc 0.0342  Tw (Make a composite coordinate transformation matrix.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0146  Tc (MATRIX*) Tj72 0  TD -0.0172  Tc (CompMatrix\(m0,m1.m2\)) Tj-72 -11.76  TD -0.024  Tc 0.054  Tw (MATRIX  *m0;) Tj72 0  TD -0.0252  Tc 0.0552  Tw (          /* Input: Matrix */) Tj-72 -11.76  TD -0.024  Tc 0.054  Tw (MATRIX  *m1;) Tj72 0  TD -0.0252  Tc 0.0552  Tw (          /* Input: Matrix */) Tj-72 -11.76  TD -0.024  Tc 0.054  Tw (MATRIX  *m2;) Tj72 0  TD -0.0263  Tc 0.0563  Tw (          /* Output: Matrix */) Tj-144 -23.52  TD 0  Tc 0.03  Tw (   ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0048  Tc 0.0348  Tw (This function makes a composite coordinate transfor) Tj209.64 0  TD -0.0315  Tc 0  Tw (mation) Tj-209.64 -11.76  TD -0.0061  Tc 0.0361  Tw (matrix that includes parallel translation.) Tj0 -11.76  TD -0.0441  Tc 0.0741  Tw ([m2->m] = [m0->m] * [m1->m]) TjT* -0.0237  Tc 0.0537  Tw (\(m2->t\) = [m0->m] * \(m1->t\) + \(m0->t\)) TjT* -0.0298  Tc 0.0598  Tw (<Argument Format>) TjT* 0.0141  Tc 0.0159  Tw (m0->m[i][j] : \(1,3,12\)) TjT* 0.0155  Tc 0.0145  Tw (m0->t[i]    : \(1,31,0\)) TjT* 0.0141  Tc 0.0159  Tw (m1->m[i][j] : \(1,3,12\)) TjT* 0.0155  Tc 0.0145  Tw (m1->t[i]    : \(1,31,0\)) TjT* 0.0141  Tc 0.0159  Tw (m2->m[i][j] : \(1,3,12\)) TjT* 0.0155  Tc 0.0145  Tw (m2->t[i]    : \(1,31,0\)) Tj0 -23.52  TD -0.0225  Tc 0  Tw (<Remarks>) Tj0 -11.76  TD -0.0079  Tc 0.0379  Tw (This function destroys a rotation matrix.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj72 0  TD -0.0644  Tc 0  Tw (m2) Tj-108 -47.04  TD -0.0151  Tc 0.0451  Tw (Gun Library \(libgun\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (================================) Tj0 -23.52  TD -0.0219  Tc 0.0519  Tw (Renamed Functions) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=====================) TjT* -0.0071  Tc 0.0371  Tw (The following functions were renamed to avoid duplicate definition errors during) TjT* -0.0296  Tc 0.0596  Tw (  linking.) TjETendstream
endobj
49 0 obj
3684
endobj
47 0 obj
<<
/Type /Page
/Parent 44 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 48 0 R
>>
endobj
51 0 obj
<<
/Length 52 0 R
>>
stream
BT90 698.88  TD0 0 0 rg /F0 9.96  Tf-0.0088  Tc 0.0388  Tw (        InitGUN         <-      InitGun,InitPAD) Tj0 -11.76  TD 0.0013  Tc 0.0287  Tw (        StartGUN        <-      StartPAD) TjT* 0.01  Tc 0.02  Tw (        StopGUN         <-      StopPAD) TjT* -0.0052  Tc 0.0352  Tw (        SelectGUN       <-      SelectGun) Tj0 -23.52  TD -0.0128  Tc 0.0428  Tw (  Previous InitGun and InitPAD functions were merged into) Tj0 -11.76  TD -0.015  Tc 0.045  Tw (  one function, InitGUN, and the same arguments for InitGun and) TjT* -0.0165  Tc 0.0465  Tw (  InitPAD are used.  A new function RemoveGUN was added) TjT* -0.0145  Tc 0.0445  Tw (  in order to completely remove the gun driver when) TjT* 0  Tc 0.0296  Tw (  a child process is used in LoadExec and the like.) Tj0 -23.52  TD 0.0048  Tc 0.0252  Tw (Data Processing Library \(libpress\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=================================================) Tj0 -23.52  TD -0.0192  Tc 0.0492  Tw (Bug Fixes in Library) Tj0 -11.76  TD 0.0116  Tc 0  Tw (~~~~~~~~~~~~~~~~~~~~~~) TjT* -0.0084  Tc 0.0384  Tw (We fixed the following bug...If you set non-zero value by DecDCTvlcSize\(\),) TjT* 0.0016  Tc 0.0284  Tw (DecDCTvlc\(\) broke some part of memory area.\(The NEWS version library is free) TjT* -0.0201  Tc 0.0501  Tw (from this bug.\)) Tj0 -35.28  TD -0.0061  Tc 0.0361  Tw (Functions Added) Tj0 -11.76  TD 0.0116  Tc 0  Tw (~~~~~~~~~~~~~~~~~) TjT* 0.0143  Tc 0.0157  Tw (EncSPU  ) Tj72 0  TD 0.0068  Tc 0.0232  Tw (Encodes 16-bit PCM data into PlayStation) Tj0 -11.76  TD -0.0271  Tc 0.0571  Tw (original waveform format) Tj-72 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0515  Tc 0.0815  Tw (Syntax  ) Tj36 0  TD 0  Tc 0.0296  Tw (long EncSPU \(ENCSPUENV *es_env\)) Tj-72 -23.52  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0535  Tc 0.0835  Tw (Argument  ) Tj36 -11.76  TD -0.0038  Tc 0.0338  Tw (es_env  SPU encode environment attribute structure) Tj-72 -23.52  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0015  Tc 0.0315  Tw (Explanation    ) Tj36 -11.76  TD 0.0026  Tc 0.0274  Tw (This function encodes the PCM data specified) Tj0 -11.76  TD -0.0041  Tc 0.0341  Tw (in a member "src" of the SPU encode environment) TjT* 0.0016  Tc 0.0284  Tw (attribute structure, "es_env" into the PlayStation) TjT* -0.0157  Tc 0.0457  Tw (original waveform data\(VAG, without header information\)) TjT* 0.0054  Tc 0.0246  Tw (and returns the encoded data in a member "dest".) Tj0 -23.52  TD 0.0016  Tc 0.0284  Tw (Specify the user area address for both members "src" and) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD 0.0032  Tc 0.0268  Tw ("dest" of the SPU encode environment attribute structure,) Tj0 -11.76  TD 0.0271  Tc 0  Tw ("es_env".) Tj-72 -23.52  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0048  Tc 0.0348  Tw (Divided encoding can be done by specifying an attribute to) Tj36 -11.76  TD 0.0039  Tc 0.0261  Tw (a member "proceed" of the SPU encode environment) Tj0 -11.76  TD 0.0118  Tc 0.0182  Tw (structure, "es_env".) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj0 -11.76  TD (        ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0103  Tc 0.0197  Tw (ENCSPU_ENCODE_ERROR is returned for a size error) Tj0 -11.76  TD -0.0065  Tc 0.0365  Tw (of encoded PlayStation original waveform data.) Tj-72 -35.28  TD 0.0008  Tc 0.0292  Tw (ENCSPUENV      SPU encode environment attribute structure) Tj0 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) TjT* 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0037  Tc 0  Tw (Structrue) TjETendstream
endobj
52 0 obj
3733
endobj
50 0 obj
<<
/Type /Page
/Parent 44 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 51 0 R
>>
endobj
54 0 obj
<<
/Length 55 0 R
>>
stream
BT126 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0101  Tc 0.0401  Tw (       typedef struct {) Tj-36 -11.76  TD -0.0162  Tc 0.0462  Tw (                    short *src;) Tj0 -11.76  TD -0.014  Tc 0.044  Tw (                    short *dest;) TjT* -0.0095  Tc 0.0395  Tw (                    long   size;) TjT* 0.0108  Tc 0.0192  Tw (                    long   loop_start;) TjT* 0.0201  Tc 0.0099  Tw (                    char   loop;) TjT* -0.0164  Tc 0.0464  Tw (                    char   byte_swap;) TjT* 0.0239  Tc 0.0061  Tw (                    char   proceed;) TjT* 0.0231  Tc 0.0069  Tw (                    char   pad4;) TjT* 0.0142  Tc 0.0158  Tw (                } ENCSPUENV;) TjT* -0.0041  Tc 0.0341  Tw (        Member) Tj36 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD 0.0089  Tc 0.0211  Tw (src ) Tj36 0  TD 0.0193  Tc 0.0107  Tw (16-bit PCM data address) Tj-108 -11.76  TD 0  Tc 0.03  Tw (               ) Tj72 0  TD 0.0086  Tc 0.0214  Tw (dest    ) Tj36 0  TD -0.0146  Tc 0.0446  Tw (PlayStation original waveform data) Tj-108 -11.76  TD 0  Tc 0.03  Tw (               ) Tj72 0  TD -0.002  Tc 0.032  Tw (size    ) Tj36 0  TD 0.0047  Tc 0.0253  Tw (16-bit PCM data size\(in bytes\)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.024  Tc 0  Tw (loop_start) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                        ) Tj72 0  TD 0.0089  Tc 0.0211  Tw (PCM data loop start point\(in bytes\)) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0428  Tc -0.0128  Tw (loop    ) Tj36 0  TD -0.0109  Tc 0.0409  Tw (Loop waveform generation specification) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                     ) Tj72 0  TD 0.0153  Tc 0  Tw (ENCSPU_ENCODE_LOOP:) Tj72 -11.76  TD -0.0044  Tc 0.0344  Tw (Generate loop waveform data) Tj-144 -11.76  TD 0  Tc 0.03  Tw (                     ) Tj72 0  TD 0.0168  Tc 0  Tw (ENCSPU_ENCODE_NO_LOOP:) Tj72 -11.76  TD -0.0087  Tc 0.0387  Tw (Generate non-loop waveform data) Tj-144 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.0265  Tc 0  Tw (byte_swap) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                        ) Tj72 0  TD 0.0047  Tc 0.0253  Tw (PCM data endian specification) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                        ) Tj72 0  TD 0.0176  Tc 0  Tw (ENCSPU_ENCODE_ENDIAN_BIG:) Tj72 -11.76  TD 0.0029  Tc 0.0271  Tw (16-bit big endian) Tj-144 -11.76  TD 0  Tc 0.03  Tw (                        ) Tj72 0  TD 0.0188  Tc 0  Tw (ENCSPU_ENCODE_ENDIAN_LITTLE:) Tj72 -11.76  TD 0.0014  Tc 0.0286  Tw (16-bit little endian) Tj-144 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0395  Tc -0.0095  Tw (proceed ) Tj36 0  TD 0.0029  Tc 0.0271  Tw (Whole/Divided encoding specification) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                        ) Tj72 0  TD 0.0163  Tc 0  Tw (ENCSPU_ENCODE_WHOLE) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                                ) Tj108 0  TD 0.0041  Tc 0.0259  Tw (Whole encoding) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                        ) Tj72 0  TD 0.0212  Tc 0  Tw (ENCSPU_ENCODE_START) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                                ) Tj108 0  TD 0.0056  Tc 0.0244  Tw (Start divided encoding) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                        ) Tj72 0  TD 0.0223  Tc 0  Tw (ENCSPU_ENCODE_CONTINUE) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                                ) Tj108 0  TD -0.0033  Tc 0.0333  Tw (Continue divided encoding) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                        ) Tj72 0  TD 0.0219  Tc 0  Tw (ENCSPU_EN) Tj56.64 0  TD 0.0151  Tc (CODE_END) Tj-128.64 -11.76  TD 0  Tc 0.03  Tw (                                ) Tj108 0  TD 0.0067  Tc 0.0233  Tw (End divided encoding) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0494  Tc -0.0194  Tw (pad4    ) Tj36 0  TD -0.0219  Tc 0.0519  Tw (System reserved) Tj-108 -23.52  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0014  Tc 0.0314  Tw (This structure is used to specify the SPU encode) Tj0 -11.76  TD -0.0065  Tc 0.0365  Tw ( environment attributes for EncSPU\(\) function.) Tj-72 -23.52  TD 0  Tc 0.03  Tw ( ) Tj36 0  TD -0.0354  Tc 0  Tw (Remarks) Tj36 -11.76  TD 0.0198  Tc 0.0102  Tw (When 0 is specified for "loop", "loop_start" will be) Tj0 -11.76  TD 0.0103  Tc 0  Tw (ignored.) Tj-72 -35.28  TD 0.001  Tc 0.029  Tw (Extended Sound Library \(libsnd\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (================================) Tj0 -23.52  TD -0.0206  Tc 0.0506  Tw (Bug Fix in Library) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=====================) TjT* -0.0027  Tc 0.0327  Tw (In SsSeqSetVol, the bug that SEQ long note data volume could not be) TjT* 0.0041  Tc 0.0259  Tw (controlled has been fixed.) TjETendstream
endobj
55 0 obj
4776
endobj
53 0 obj
<<
/Type /Page
/Parent 44 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 54 0 R
>>
endobj
57 0 obj
<<
/Length 58 0 R
>>
stream
BT90 698.88  TD0 0 0 rg /F0 9.96  Tf-0.0143  Tc 0.0443  Tw (Specification Changes in Function) Tj0 -11.76  TD 0.0226  Tc 0  Tw (====================================) TjT* -0.0128  Tc 0.0428  Tw (The specification of SsVoKeyOn\(\) has been changed in the way that) TjT* -0.0105  Tc 0.0405  Tw (it now returns allocated voice in bit mask.) Tj0 -35.28  TD -0.0061  Tc 0.0361  Tw (Functions Added) Tj0 -11.76  TD 0.0226  Tc 0  Tw (=====================) TjT* -0.0181  Tc (dmy_Ss....) Tj72 0  TD -0.0328  Tc 0.0628  Tw (Jump Table Low Level Function Dummy) Tj-72 -11.76  TD -0.0515  Tc 0.0815  Tw (       Syntax) Tj72 -11.76  TD -0.0049  Tc 0.0349  Tw (void dmy_Ss...\(\)) Tj-72 -11.76  TD -0.0535  Tc 0.0835  Tw (       Argument) Tj72 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD -0.0015  Tc 0.0315  Tw (       Explanation) Tj72 -11.76  TD -0.0151  Tc 0.0451  Tw (When this function is called for the first time, it outputs the entry) Tj0 -11.76  TD -0.0038  Tc 0.0338  Tw (name of the jump table to the standard outp) Tj173.28 0  TD 0  Tc 0.0294  Tw (ut device.) Tj-173.28 -23.52  TD -0.0253  Tc 0.0553  Tw (Use this as a dummy low level function and to determine) Tj0 -11.76  TD -0.0326  Tc 0.0626  Tw (which entry was called.) Tj-72 -23.52  TD -0.0123  Tc 0.0423  Tw (      Return Value) Tj72 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD -0.0354  Tc 0.0654  Tw (      Remarks) Tj72 -11.76  TD -0.002  Tc 0.032  Tw (This function is provided for debugging.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0.012  Tc (SsSeqOpenJ) Tj72 0  TD 0.0081  Tc 0.0219  Tw (Opens SEQ data.\(Function Table version\)) Tj-72 -11.76  TD -0.0515  Tc 0.0815  Tw (      Syntax) Tj0 -11.76  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD 0.002  Tc 0.028  Tw (short           SsSeqOpenJ \(unsigned long* addr, short vab_id\)) Tj-36 -11.76  TD -0.0535  Tc 0.0835  Tw (      Argument) Tj36 -11.76  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0091  Tc 0.0391  Tw (addr            Start address of SEQ data in the main memory) Tj-36 -11.76  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD 0.014  Tc 0.016  Tw (vab_id          VAB id) Tj-72 -11.76  TD -0.0015  Tc 0.0315  Tw (      Explanation) Tj72 -11.76  TD -0.0113  Tc 0.0413  Tw (This function is equivalent to SsSeqOpen\(\) if all the low level functions) Tj0 -11.76  TD -0.0022  Tc 0.0322  Tw (were registered.  In addition to the SsSeqOpen\(\) capability, this function) TjT* 0.0018  Tc 0.0282  Tw (enables a programmer to control functions to be registered to the table and) TjT* -0.0212  Tc 0.0512  Tw (thus improve code efficiency by not calling unnecessary low level functions.) Tj-72 -23.52  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0267  Tc 0.0567  Tw (For those slots that SsFCALL will not register, use dummy) Tj0 -11.76  TD -0.0198  Tc 0.0498  Tw (functions, standard function names with the prefix "dmy") TjT* -0.0341  Tc 0.0641  Tw (so that even when a low) Tj95.52 0  TD -0.0092  Tc 0.0392  Tw (er function was called, no BUS ERROR) Tj-95.52 -11.76  TD -0.0118  Tc 0.0418  Tw (would occur and the function names would be printed out.) Tj0 -11.76  TD -0.0158  Tc 0.0458  Tw (After checking the called function names, register the) TjT* -0.0296  Tc 0.0596  Tw (function names without "dmy".) Tj-72 -23.52  TD -0.0123  Tc 0.0423  Tw (       Return Value) Tj0 -11.76  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0074  Tc 0.0374  Tw (SEQ Access Number: Used in the SEQ data access function,) Tj-36 -11.76  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0009  Tc 0.0309  Tw (being the inner SEQ data control table number.) Tj-36 -23.52  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD 0.0076  Tc 0.0224  Tw (Related External Variable) Tj-36 -11.76  TD 0  Tc 0.03  Tw (              ) Tj36 0  TD -0.0565  Tc 0  Tw (SsFCALL) Tj108 0  TD 0.0035  Tc 0.0265  Tw (Function table that SsSeqOpenJ\(\) refers.) Tj-144 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0.012  Tc (SsSepOpenJ) Tj72 0  TD 0.0107  Tc 0.0193  Tw (Opens SEP data.\(Function Table version\)) TjETendstream
endobj
58 0 obj
4174
endobj
56 0 obj
<<
/Type /Page
/Parent 44 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 57 0 R
>>
endobj
60 0 obj
<<
/Length 61 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj-36 -11.76  TD 0  Tc 0.03  Tw (              ) Tj36 0  TD 0  Tc 0.03  Tw (short  ) Tj36 0  TD 0.0019  Tc 0.0281  Tw (SsSepOpenJ \(unsigned long* addr, short vab_id,) Tj36 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0206  Tc 0.0506  Tw (short num2\)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj-36 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0453  Tc -0.0153  Tw (addr  ) Tj36 0  TD -0.0152  Tc 0.0452  Tw (Start address of SEQ data in the main memory) Tj-108 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0215  Tc 0.0085  Tw (vab_id  ) Tj36 0  TD 0.0051  Tc 0.0249  Tw (VAB id) Tj-72 -11.76  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD -0.0622  Tc 0.0922  Tw (num2   ) Tj36 0  TD -0.0023  Tc 0.0323  Tw (Number of SEQs contained in SEP) Tj-108 -11.76  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj-36 -11.76  TD 0  Tc 0.03  Tw (              ) Tj36 0  TD -0.0113  Tc 0.0413  Tw (This function is equivalent to SsSepOpen\(\) if all the low level functions) Tj36 -11.76  TD 0.0024  Tc 0.0276  Tw (were registered.  In addition ) Tj114.72 0  TD -0.0051  Tc 0.0351  Tw (to the SsSepOpen\(\) capability, this function) Tj-114.72 -11.76  TD 0.0018  Tc 0.0282  Tw (enables a programmer to control functions to be registered to the table and) Tj0 -11.76  TD -0.0212  Tc 0.0512  Tw (thus improve code efficiency by not calling unnecessary low level functions.) Tj-72 -23.52  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0267  Tc 0.0567  Tw (For those slots that SsFCALL will not register, use dummy) Tj0 -11.76  TD -0.0198  Tc 0.0498  Tw (functions, standard function names with the prefix "dmy") TjT* -0.0186  Tc 0.0486  Tw (so that even when a lower function was called, no BUS ERROR) TjT* -0.0118  Tc 0.0418  Tw (would occur and the function names would be printed out.) TjT* -0.0165  Tc 0.0465  Tw (After checking the called function names, register th) Tj208.56 0  TD 0.0178  Tc 0  Tw (e) Tj-208.56 -11.76  TD -0.0296  Tc 0.0596  Tw (function names without "dmy". ) Tj-72 -23.52  TD -0.0123  Tc 0.0423  Tw (        Return Value) Tj36 -11.76  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0074  Tc 0.0374  Tw (SEQ Access Number: Used in the SEQ data access function,) Tj-36 -11.76  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0009  Tc 0.0309  Tw (being the inner SEQ data control table number.) Tj-72 -23.52  TD 0.0076  Tc 0.0224  Tw (        Related External Variable) Tj0 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.0565  Tc 0  Tw (SsFCALL) Tj108 0  TD 0.0035  Tc 0.0265  Tw (Function table that SsSepOpenJ\(\) refers.) Tj-180 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD -0.0419  Tc (_SsFCALL) Tj72 0  TD 0.0052  Tc 0.0248  Tw (Function table type referenced in SsSeqOpenJ\(\) and SsSepOpenJ\(\)) Tj-36 -23.52  TD -0.0037  Tc 0  Tw (Structure) Tj36 -11.76  TD -0.0101  Tc 0.0401  Tw (typedef struct {) Tj-36 -11.76  TD 0  Tc 0.03  Tw (        ) Tj36 0  TD 0.0028  Tc 0.0272  Tw (void \(*noteon\) \(\);) Tj0 -11.76  TD -0.06  Tc 0.09  Tw (        v) Tj25.08 0  TD -0.0025  Tc 0.0325  Tw (oid \(*programchange\) \(\);) Tj10.92 -11.76  TD 0.006  Tc 0.024  Tw (void \(*pitchbend\) \(\);) Tj0 -11.76  TD -0.0116  Tc 0.0416  Tw (void \(*metaevent\) \(\);) Tj-36 -11.76  TD 0.0165  Tc 0.0135  Tw (        void \(*control[13]\) \(\);) Tj0 -11.76  TD 0.0043  Tc 0.0257  Tw (        void \(*ccentry[20]\) \(\);) TjT* -0.0325  Tc 0.0625  Tw (} _SsFCALL;) Tj-36 -23.52  TD -0.0041  Tc 0  Tw (Member) Tj0 -11.76  TD -0.0157  Tc 0.0457  Tw (        All members hold pointers to the low level functions.) Tj0 -23.52  TD -0.0011  Tc 0.0311  Tw (        noteon, programchanghe, pitchbend,) Tj36 -11.76  TD -0.0098  Tc 0.0398  Tw (metaevent, control, ccentry) Tj180 0  TD 0.0056  Tc 0.0244  Tw (MIDI status data) Tj-216 -11.76  TD 0.0038  Tc 0.0262  Tw (        control array ) Tj180 0  TD -0.0022  Tc 0.0322  Tw (Events of MIDI status data) Tj-180 -11.76  TD -0.0018  Tc 0.0318  Tw (                                               control change) Tj0 -11.76  TD -0.0175  Tc 0.0475  Tw (        ccentry array) Tj180 0  TD -0.005  Tc 0.035  Tw (Entry events for nrpn, rpn data) Tj-180 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj0 -11.76  TD 0  Tc 0.03  Tw ( ) Tj36 0  TD -0.0044  Tc 0.0344  Tw (Functions SsSeqPlay\(\) and SsSepPlay\(\) analyze the MIDI) Tj0 -11.76  TD -0.0127  Tc 0.0427  Tw (status data and call low level functions.  Although there are) TjT* -0.0252  Tc 0.0552  Tw (many low level functions, an application would not usually) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.018  Tc 0.048  Tw (use all the functions.  These low level function groups will) Tj0 -11.76  TD 0.0044  Tc 0.0256  Tw (be set by calling either SsSeqOpen\(\) or SsSepOpen\(\).) TjETendstream
endobj
61 0 obj
5000
endobj
59 0 obj
<<
/Type /Page
/Parent 44 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 60 0 R
>>
endobj
64 0 obj
<<
/Length 65 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0053  Tc 0.0353  Tw (In order to reduce the code size by not linking unnecessary) Tj0 -11.76  TD -0.008  Tc 0.038  Tw (low level functions, new functions SsSeqOpenJ\(\) and SsSepOpenJ\(\),) TjT* 0.0013  Tc 0.0287  Tw (compatible with SsSeqOpen\(\) and SsSepOpen\(\) resp) Tj210.72 0  TD -0.0204  Tc 0  Tw (ectively.) Tj-210.72 -11.76  TD -0.0237  Tc 0.0537  Tw (In the new functions,  low level functions are in the jump) Tj0 -11.76  TD -0.0051  Tc 0.0351  Tw (table so that the user can set only desired function group.) Tj-36 -23.52  TD -0.0154  Tc 0.0454  Tw (       _SsFCALL is a structure that defines this function table.) Tj36 -23.52  TD -0.0133  Tc 0.0433  Tw (Necessary functions can be linked by assigning the pointer to) Tj0 -11.76  TD -0.0148  Tc 0.0448  Tw (the low level function.  In reverse, link can be eliminated by) TjT* -0.0024  Tc 0.0324  Tw (not assigning pointer and not placing extern declaration.) TjT* -0.0169  Tc 0.0469  Tw (Note that calling a function without setting a pointer will cause) TjT* 0.0139  Tc 0.0161  Tw (BUS ERROR.  To avoid BUS ERRO) Tj149.64 0  TD -0.0426  Tc 0.0726  Tw (R, set a dummy function by) Tj-149.64 -11.76  TD -0.0274  Tc 0.0574  Tw (prefixing the low level function name with "dmy".) Tj-72 -11.76  TD -0.0767  Tc 0.1067  Tw ( ----------------------------------------------------------------) Tj0 -23.52  TD 0.0163  Tc 0  Tw (_Ss...) Tj36 0  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD -0.01  Tc 0.04  Tw (Low level functions of SsSeqOpen\(SsSepOpen\)) Tj-36 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD -0.009  Tc 0.039  Tw (void _SsNoteOn \(short num1, short num2, unsigned char pitch,) Tj72 -11.76  TD -0.0196  Tc 0.0496  Tw (unsigned char volume\);) Tj-108 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0224  Tc 0.0524  Tw (num2    SEQ number within SEP data) Tj0 -11.76  TD 0  Tc 0.03  Tw (pitch   ) Tj36 0  TD 0.0084  Tc 0  Tw (Pitch) Tj-36 -11.76  TD -0.04  Tc 0.07  Tw (volume  ) Tj36 0  TD -0.0285  Tc 0  Tw (Volume) Tj-72 -11.76  TD -0.0015  Tc (Explanation) Tj36 -11.76  TD -0.0185  Tc 0.0485  Tw (This low level function must be called when the Note) Tj0 -11.76  TD -0.0206  Tc 0.0506  Tw (On/Off d) Tj36.12 0  TD 0.0048  Tc 0.0252  Tw (ata is contained in SEQ/SEP.) Tj-108.12 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -11.76  TD -0.0515  Tc (Syntax) Tj36 -11.76  TD -0.0117  Tc 0.0417  Tw (void _SsSetProgramChange\(short num1, short num2,) Tj108 -11.76  TD -0.0036  Tc 0.0336  Tw (unsigned char data\);) Tj-144 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -11.76  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0186  Tc 0.0486  Tw (This low level function must be called when the Program) Tj0 -11.76  TD -0  Tc 0.0304  Tw (Change data is contained in SEQ/SEP.) Tj-72 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -11.76  TD -0.0515  Tc (Syntax) Tj36 -11.76  TD 0.0038  Tc 0.0262  Tw (void _SsGetMetaEvent\(short ) Tj118.56 0  TD -0.0292  Tc 0.0592  Tw (num1, short num2,) Tj-10.56 -11.76  TD -0.0036  Tc 0.0336  Tw (unsigned char data\);) Tj-144 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0187  Tc 0.0487  Tw (This low level function must be called when the Meta Event) Tj0 -11.76  TD 0.0047  Tc 0.0253  Tw (data\(Tempo Change\) is contained in SEQ/SEP.) Tj-72 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -11.76  TD -0.0515  Tc (Syntax) Tj36 -11.76  TD -0.005  Tc 0.035  Tw (void _SsSetPitchBend\(short num1, short num2\);) TjETendstream
endobj
65 0 obj
4451
endobj
62 0 obj
<<
/Type /Page
/Parent 63 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 64 0 R
>>
endobj
67 0 obj
<<
/Length 68 0 R
>>
stream
BT126 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0172  Tc 0.0472  Tw (This low l) Tj40.32 0  TD -0.0149  Tc 0.0449  Tw (evel function must be called when the Pitch Bend) Tj-40.32 -11.76  TD 0.007  Tc 0.023  Tw (data is contained in SEQ/SEP.) Tj-72 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -23.52  TD -0.0515  Tc (Syntax) Tj36 -11.76  TD -0.0111  Tc 0.0411  Tw (void _SsSetControlChange\(short num1, short num2,) Tj108 -11.76  TD -0.0036  Tc 0.0336  Tw (unsigned char data\);) Tj-144 -23.52  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.018  Tc 0.048  Tw (This low level function must be called when the Control) Tj0 -11.76  TD -0  Tc 0.0304  Tw (Change data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -11.76  TD -0.0515  Tc (Syntax) Tj36 0  TD -0.0139  Tc 0.0439  Tw (void _SsContBankChange\(short num1, short num2\);) Tj-36 -23.52  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (_SsSetControlChange function when the Control Change) TjT* 0.006  Tc 0.024  Tw (0th data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -11.76  TD -0.0515  Tc (Syntax) Tj36 0  TD -0.0128  Tc 0.0428  Tw (void _SsContDataEntry\(short num1, short num2,) Tj108 -11.76  TD -0.0036  Tc 0.0336  Tw (unsigned char data\);) Tj-144 -11.76  TD -0.0598  Tc 0  Tw (Argume) Tj32.28 0  TD -0.0344  Tc (nt) Tj3.72 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (_SsSetControlChange function when the Control Change) TjT* 0.006  Tc 0.024  Tw (6th data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -11.76  TD -0.0515  Tc (Syntax) Tj36 0  TD -0.0091  Tc 0.0391  Tw (void _SsContMainVol\(short num1, short num2,) Tj108 -11.76  TD -0.0036  Tc 0.0336  Tw (unsigned char data\);) Tj-144 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0329  Tc 0.0629  Tw (Status messag) Tj55.8 0  TD 0.0209  Tc 0.0091  Tw (e data) TjETendstream
endobj
68 0 obj
3928
endobj
66 0 obj
<<
/Type /Page
/Parent 63 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 67 0 R
>>
endobj
70 0 obj
<<
/Length 71 0 R
>>
stream
BT126 698.88  TD0 0 0 rg /F0 9.96  Tf-0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (_SsSetControlChange function when the Control Change) TjT* 0.006  Tc 0.024  Tw (7th data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -23.52  TD -0.0515  Tc (Syntax) Tj36 0  TD -0.0057  Tc 0.0357  Tw (void _SsContPanpot\(short num1, short num2,) Tj108 -11.76  TD -0.0036  Tc 0.0336  Tw (unsigned char data\);) Tj-144 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0063  Tc 0  Tw (_SsSetC) Tj33.72 0  TD -0.0207  Tc 0.0507  Tw (ontrolChange function when the Control Change) Tj-33.72 -11.76  TD 0.0078  Tc 0.0222  Tw (10th data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -11.76  TD -0.0515  Tc (Syntax) Tj36 0  TD -0.0088  Tc 0.0388  Tw (void _SsContExpression\(short num1, short num2,) Tj108 -11.76  TD -0.0036  Tc 0.0336  Tw (unsigned char data\);) Tj-144 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (_SsSetControlChange function when the Control Change) TjT* 0.0078  Tc 0.0222  Tw (11th data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -11.76  TD -0.0515  Tc (Syntax) Tj36 0  TD -0.0113  Tc 0.0413  Tw (void _SsContDamper\(short num1, short num2,) Tj108 -11.76  TD -0.0036  Tc 0.0336  Tw (unsigned char data\);) Tj-144 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (_SsSetControlChange function when the Control Change) TjT* 0.0078  Tc 0.0222  Tw (64th data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD -0.0353  Tc 0.0653  Tw (Syntax   voi) Tj47.64 0  TD -0.0109  Tc 0.0409  Tw (d _SsContExternal\(short num1, short num2,) Tj96.36 -11.76  TD -0.0036  Tc 0.0336  Tw (unsigned char data\);) Tj-144 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) TjETendstream
endobj
71 0 obj
3934
endobj
69 0 obj
<<
/Type /Page
/Parent 63 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 70 0 R
>>
endobj
73 0 obj
<<
/Length 74 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (_SsSetControlChange function when the Control Change) TjT* 0.0078  Tc 0.0222  Tw (91th data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD -0.0107  Tc 0.0407  Tw (      Syntax   void _SsContNrpn1\(short num1, short num2, unsigned char data\);) Tj36 -23.52  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0178  Tc (S) Tj5.52 0  TD -0.0018  Tc 0.0318  Tw (EQ/SEP access number) Tj-41.52 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (_SsSetControlChange function when the Control Change) TjT* 0.0096  Tc 0.0204  Tw (100th data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj36 -23.52  TD -0.0107  Tc 0.0407  Tw (Syntax   void _SsContNrpn2\(short num1, short num2, unsigned char data\);) Tj0 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD 0.0087  Tc 0  Tw (Expla) Tj23.28 0  TD -0.01  Tc (nation) Tj12.72 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (_SsSetControlChange function when the Control Change) TjT* 0.0096  Tc 0.0204  Tw (101th data is contained in SEQ/SEP.) Tj-72 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD -0.0124  Tc 0.0424  Tw (Syntax   void _SsContRpn1\(short num1, short num2, unsigned char data\);) Tj0 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0127  Tc 0.0427  Tw (_SsSetControlChange function ) Tj125.88 0  TD -0.0265  Tc 0.0565  Tw (when the Control Change) Tj-125.88 -11.76  TD 0.0078  Tc 0.0222  Tw (98th data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD -0.0124  Tc 0.0424  Tw (Syntax   void _SsContRpn2\(short num1, short num2, unsigned char data\);) Tj0 -23.52  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -11.76  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (_SsSetControlChange function when the Control Change) TjT* 0.0078  Tc 0.0222  Tw (99th data is contained in SEQ/SEP.) Tj-72 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD -0.0186  Tc 0.0486  Tw (Syntax   void _SsContResetAll\(short num1, short num2\);) TjETendstream
endobj
74 0 obj
4175
endobj
72 0 obj
<<
/Type /Page
/Parent 63 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 73 0 R
>>
endobj
76 0 obj
<<
/Length 77 0 R
>>
stream
BT126 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0207  Tc 0.0507  Tw (This low level function must be called along with) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (_SsSetControlChange function when the Control Change) TjT* 0.0096  Tc 0.0204  Tw (121th data is contained in SEQ/SEP.) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (---------------------------------------------------------------------------) Tj0 -11.76  TD -0.0129  Tc 0.0429  Tw (    Syntax   void _SsSetNrpnVabAttr0\(short num1, short num2, short num3,) Tj144 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0085  Tc 0.0385  Tw (void _SsSetNrpnVabAttr1\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0085  Tc 0.0385  Tw (void _SsSetNrpnVabAttr2\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0085  Tc 0.0385  Tw (void _SsSetNrpnVabAttr3\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0085  Tc 0.0385  Tw (void _SsSetNrpnVabAttr4\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0157  Tc 0.0457  Tw (VagAtr va, s) Tj50.52 0  TD -0  Tc 0.0307  Tw (hort nrpn, unsigned char data\);) Tj-158.52 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0085  Tc 0.0385  Tw (void _SsSetNrpnVabAttr5\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0085  Tc 0.0385  Tw (void _SsSetNrpnVabAttr6\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0085  Tc 0.0385  Tw (void _SsSetNrpnVabAttr7\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0085  Tc 0.0385  Tw (void _SsSetNrpnVabAttr8\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0989  Tc 0  Tw (Sy) Tj10.32 0  TD -0.0278  Tc (ntax) Tj25.68 0  TD -0.0085  Tc 0.0385  Tw (void _SsSetNrpnVabAttr9\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0072  Tc 0.0372  Tw (void _SsSetNrpnVabAttr10\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0072  Tc 0.0372  Tw (void _SsSetNrpnVabAttr11\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0072  Tc 0.0372  Tw (void _SsSetNrpnVabAttr12\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD 0.0086  Tc 0.0214  Tw (void _SsSetNrpnVabAttr13\(sho) Tj127.8 0  TD -0.023  Tc 0.053  Tw (rt num1, short num2, short num3,) Tj-55.8 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0072  Tc 0.0372  Tw (void _SsSetNrpnVabAttr14\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0072  Tc 0.0372  Tw (void _SsSetNrpnVabAttr15\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0072  Tc 0.0372  Tw (void _SsSetNrpnVabAttr16\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0072  Tc 0.0372  Tw (void _SsSetNrpnVabAttr17\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0072  Tc 0.0372  Tw (void _SsSetNrpnVabAttr18\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0515  Tc 0  Tw (Syntax) Tj36 0  TD -0.0072  Tc 0.0372  Tw (void _SsSetNrpnVabAttr19\(short num1, short num2, short num3,) Tj72 -11.76  TD -0.0047  Tc 0.0347  Tw (VagAtr va, short nrpn, unsigned char data\);) Tj-108 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0622  Tc (num1) Tj36 0  TD -0.0026  Tc 0.0326  Tw (SEQ/SEP access number) Tj-36 -11.76  TD -0.0622  Tc 0  Tw (num2) Tj36 0  TD -0.0152  Tc 0.0452  Tw (SEQ number within SEP data) Tj-36 -11.76  TD -0.0622  Tc 0.0922  Tw (num3 ) Tj36 0  TD -0.0013  Tc 0.0313  Tw (Track number) TjETendstream
endobj
77 0 obj
5857
endobj
75 0 obj
<<
/Type /Page
/Parent 63 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 76 0 R
>>
endobj
79 0 obj
<<
/Length 80 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0211  Tc 0  Tw (va) Tj36 0  TD 0.0138  Tc 0.0162  Tw (VAG Tone headear) Tj-36 -11.76  TD -0.0042  Tc 0  Tw (nrpn) Tj36 0  TD -0.0111  Tc 0.0411  Tw (NRPN number) Tj-36 -11.76  TD 0.0217  Tc 0  Tw (data) Tj36 0  TD -0.0171  Tc 0.0471  Tw (Status message data) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0141  Tc 0.0441  Tw (This function must be calle) Tj108.24 0  TD -0.0139  Tc 0.0439  Tw (d along with _SsSetControlChange,) Tj-108.24 -11.76  TD 0  Tc 0.0293  Tw (_SsContDataEntry, _SsContNrpn1, and _SsContNrpn2) Tj0 -11.76  TD -0.0023  Tc 0.0323  Tw (when NRPN data is contained \(NRPN sets VAB attribute) TjT* -0.0118  Tc 0.0418  Tw (data and repeat within a music and marking\) in SEQ/SEP.) TjT* -0.0026  Tc 0.0326  Tw (Note that each setting data corresponds to the different low level) TjT* -0.0047  Tc 0.0347  Tw (function.  See below for detail.) Tj0 -23.52  TD 0.0121  Tc 0.0179  Tw (_SsSetNrpnVabAttr0 ... Priority \(CC98=0\)) Tj0 -11.76  TD 0.0172  Tc 0.0128  Tw (_SsSetNrpnVabAttr1 ...  Mode \(CC 98  = 1\)) TjT* -0.0041  Tc 0.0341  Tw (_SsSetNrpnVabAttr2 ... Limit Low \(CC 98 = 2\)) TjT* -0.0022  Tc 0.0322  Tw (_SsSetNrpnVabAttr3 ...  Limit high \(CC 98 = 3\)) TjT* 0.0016  Tc 0  Tw (_SsSe) Tj24.36 0  TD 0  Tc 0.0299  Tw (tNrpnVabAttr4 ... ADSR \(AR-L\) \(CC 98 = 4\)) Tj-24.36 -11.76  TD 0.0034  Tc 0.0266  Tw (_SsSetNrpnVabAttr5 ...  ADSR \(AR-E\) \(CC 98 = 5\)) Tj0 -11.76  TD 0.0079  Tc 0.0221  Tw (_SsSetNrpnVabAttr6 ...  ADSR \(DR\) \(CC 98 = 6\)) TjT* 0.0061  Tc 0.0239  Tw (_SsSetNrpnVabAttr7 ...  ADSR \(SL\) \(CC 98 = 7\)) TjT* 0.0027  Tc 0.0273  Tw (_SsSetNrpnVabAttr8 ...  ADSR \(SR-L\) \(CC 98 = 8\)) TjT* 0.0058  Tc 0.0242  Tw (_SsSetNrpnVabAttr9 ...  ADSR \(SR-E\) \(CC 98 = 9\)) TjT* 0.0049  Tc 0.0251  Tw (_SsSetNrpnVabAttr10 ... ADSR \(RR-L\) \(CC 98 = 10\)) TjT* 0.0078  Tc 0.0222  Tw (_SsSetNrpnVabAttr11 ...  ADSR \(RR-E\) \(CC 98 = 11\)) TjT* 0.0091  Tc 0.0209  Tw (_SsSetNrpnVabAttr12 ... ADSR \(SR-\201}\) \(CC 98 = 12\)) TjT* 0.0111  Tc 0.0189  Tw (_SsSetNrpnVabAttr13 ... Vibrate time \(CC 98 = 13\)) TjT* 0.0016  Tc 0  Tw (_SsSe) Tj24.36 0  TD 0.0151  Tc 0.0149  Tw (tNrpnVabAttr14 ... Portamento depth \(CC 98 = 14\)) Tj-24.36 -11.76  TD 0.011  Tc 0.019  Tw (_SsSetNrpnVabAttr15 ... Reverb type \(CC 98 = 15\)) Tj0 -11.76  TD 0.015  Tc 0.015  Tw (_SsSetNrpnVabAttr16 ... Reverb depth \(CC 98 = 16\)) TjT* 0.0147  Tc 0.0153  Tw (_SsSetNrpnVabAttr17 ... Echo feed back \(CC 98 = 17\)) TjT* 0.0067  Tc 0.0233  Tw (_SsSetNrpnVabAttr18 ... Echo delay time \(CC 98 = 18\)) TjT* 0.0022  Tc 0.0278  Tw (_SsSetNrpnVabAttr19 ... Delay delay time\(CC 98 = 19\)) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD -0.001  Tc (SsGetCurrentPoint) Tj108 0  TD 0.002  Tc 0.028  Tw (Obtain SEQ/SEP address currently read-in) Tj-72 -23.52  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD -0.0282  Tc 0.0582  Tw (unsigned char*) Tj0 -11.76  TD -0  Tc 0.0301  Tw (SsGetCurrentPoint\(short acn, s) Tj123.72 0  TD 0.0065  Tc 0.0235  Tw (hort trn\)) Tj-159.72 -11.76  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0082  Tc (acn) Tj36 0  TD -0.0044  Tc 0.0344  Tw (SEP access number) Tj-36 -11.76  TD -0.0085  Tc 0  Tw (trn) Tj36 0  TD -0.0234  Tc 0.0534  Tw (SEQ number within SEP) Tj0 -11.76  TD -0.0117  Tc 0.0417  Tw (\(0 when the music score data is SEQ\)) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0016  Tc 0.0316  Tw (This function obtains the current read-in address for the) Tj0 -11.76  TD 0.0022  Tc 0.0278  Tw (SEQ/SEP data that is being played.) Tj-36 -23.52  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0196  Tc 0.0104  Tw (SEP/SEQ data address) Tj-36 -23.52  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0035  Tc 0.0265  Tw (SsSeqPlay\(\), SsSepPlay\(\)) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) TjETendstream
endobj
80 0 obj
4051
endobj
78 0 obj
<<
/Type /Page
/Parent 63 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 79 0 R
>>
endobj
83 0 obj
<<
/Length 84 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0211  Tc 0  Tw (SsChannelMute) Tj72 0  TD -0.0081  Tc 0.0381  Tw (Select SEQ channel and play) Tj-36 -23.52  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc 0.0172  Tw (void ) Tj36 0  TD -0.0093  Tc 0.0393  Tw (SsChannelMute\(short acn, short trn, long channels\)) Tj-72 -11.76  TD -0.0753  Tc 0  Tw (Argum) Tj27.84 0  TD -0.017  Tc (ent) Tj-63.84 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.0082  Tc 0  Tw (acn) Tj36 0  TD -0.0044  Tc 0.0344  Tw (SEP access number) Tj-36 -11.76  TD -0.0085  Tc 0  Tw (trn) Tj36 0  TD -0.0234  Tc 0.0534  Tw (SEQ number within SEP) Tj0 -11.76  TD -0.0117  Tc 0.0417  Tw (\(0 when the music score data is SEQ\)) Tj-36 -11.76  TD -0.0213  Tc 0  Tw (channels) Tj36 0  TD -0.0013  Tc 0.0313  Tw (MIDI channel) Tj-72 -23.52  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.008  Tc 0.038  Tw (This function specifies MIDI channel in SEQ with 16bit upon) Tj0 -11.76  TD -0.0075  Tc 0.0375  Tw (playing SEQ.  The parts specified with the channel bits can be) TjT* -0.0014  Tc 0.0314  Tw (muted. This function must be called before SsSeqOpen\(\) or) TjT* 0.0126  Tc 0  Tw (SsSepOpen\(\).) Tj-36 -23.52  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-36 -11.76  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0035  Tc 0.0265  Tw (SsSeqPlay\(\), SsSepPlay\(\)) Tj-72 -47.04  TD 0.0014  Tc 0.0286  Tw (Basic Sound Library \(libspu\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (====================================) Tj0 -23.52  TD -0.0075  Tc 0.0375  Tw (Changes in Header File) Tj0 -11.76  TD 0.0226  Tc 0  Tw (==============================) Tj36 -11.76  TD -0  Tc 0.0302  Tw (libspu.h: Deleted not used structure, SpuVolume16.) Tj-36 -35.28  TD -0.0206  Tc 0.0506  Tw (Bug Fix in Library) Tj0 -11.76  TD 0.0226  Tc 0  Tw (==============================) TjT* -0.0055  Tc 0.0355  Tw (- When libspu was used alone, reverb could not be specified unless some) TjT* 0.0018  Tc 0.0282  Tw (  area was allocated by SpuInitMalloc\(\).) TjT* -0.0082  Tc 0.0382  Tw (  In this release, this bug has been fixed.) Tj0 -23.52  TD -0.0048  Tc 0.0348  Tw (- In SpuGetVoiceAttr\(\), the bug that an incorrect value was returned depending) Tj0 -11.76  TD -0.0072  Tc 0.0372  Tw (  on ADSR MODE, A, S, and R has been fixed.  ) Tj0 -23.52  TD -0.0024  Tc 0.0324  Tw (- In SpuWrite0\(\) now returns correct values as in the spec.) Tj0 -35.28  TD -0.018  Tc 0.048  Tw (Changes in Structure) Tj0 -11.76  TD 0.0226  Tc 0  Tw (============================) TjT* -0.0126  Tc 0.0426  Tw (- A member, low_priority was added to the structure, SpuStEnv.) TjT* -0.0056  Tc 0.0356  Tw (  Setting SPU_ON to low_priority lower the streaming process priority.) TjT* 0.0021  Tc 0.0279  Tw (  The default value is SPU_OFF \(do not lower the priority\).) Tj0 -35.28  TD -0.0039  Tc 0.0339  Tw (Function Added) Tj0 -11.76  TD 0.0226  Tc 0  Tw (==============================) Tj0 -23.52  TD -0.0123  Tc 0.0423  Tw (SpuSetEnv       Sets Basic Sound Library Environment) Tj0 -11.76  TD -0.0515  Tc 0.0815  Tw (    Syntax) TjETendstream
endobj
84 0 obj
3173
endobj
81 0 obj
<<
/Type /Page
/Parent 82 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 83 0 R
>>
endobj
86 0 obj
<<
/Length 87 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf0.0128  Tc 0.0172  Tw (        void) Tj0 -11.76  TD -0.0196  Tc 0.0496  Tw (        SpuSetEnv \(SpuEnv *env\)) TjT* -0.0535  Tc 0.0835  Tw (    Argument) TjT* -0.0133  Tc 0.0433  Tw (        env:    Basic Sound Library Environment Attribute) TjT* -0.0015  Tc 0.0315  Tw (    Explanation) TjT* 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0124  Tc 0.0424  Tw (This function sets the Basic Sound Library environment.) Tj-36 -11.76  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0235  Tc 0.0535  Tw (Attribute can be set by setting env.mask with bitwise inclusive ORed) Tj36 -11.76  TD -0.0026  Tc 0.0326  Tw (desired attributes.  Currently, there is only one available attribute;) Tj-72 -11.76  TD 0.0181  Tc 0.0119  Tw (             SPU_ENV_EVENT_QUEUEING \(queue an event\)) Tj0 -11.76  TD 0  Tc 0.03  Tw (        ) TjT* (       ) Tj36 0  TD -0.0108  Tc 0.0408  Tw (When env.mask is set to 0, all the attributes will be set.) Tj-36 -23.52  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.0105  Tc 0.0405  Tw (See below for various setting;) Tj-36 -11.76  TD -0.0767  Tc 0.1067  Tw (     - ) Tj36 0  TD -0.0176  Tc 0.0476  Tw (Queue an event) Tj-36 -11.76  TD 0  Tc 0.03  Tw (       ) Tj36 0  TD -0.015  Tc 0  Tw (env.queueing,) Tj-36 -11.76  TD 0.0024  Tc 0.0276  Tw (               SPU_ON  ... Queue an event) Tj0 -11.76  TD 0.004  Tc 0.026  Tw (               SPU_OFF ... Do not queue an event \(default\)) TjT* 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0074  Tc 0.0374  Tw (can set either to queue or not queue an event such as Key ON/OFF,) Tj0 -11.76  TD 0.0066  Tc 0.0234  Tw (Pitch LFO Voice Set, Noise Voice Set, and Reverb voice Set.) TjT* -0.0267  Tc 0.0567  Tw (Default is to set immediately without queuing.        ) Tj-36 -11.76  TD 0  Tc 0.03  Tw (        ) Tj0 -11.76  TD -0.0123  Tc 0.0423  Tw (    Return Value) TjT* 0.0067  Tc 0.0233  Tw (        None) TjT* -0.0057  Tc 0.0357  Tw (    Related Function) TjT* -0.0023  Tc 0.0323  Tw (        SpuSetKey\(\), SpuSetKeyOnWithAttr\(\), SpuSetPitchLFOVoice\(\),) TjT* 0.0069  Tc 0.0231  Tw (        SpuSetNoiseVoice\(\), SpuSetReverbVoice\(\), SpuFlush\(\)) Tj0 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD -0.0181  Tc 0.0481  Tw (SpuFlush        Flushes queued events) Tj0 -23.52  TD -0.0515  Tc 0.0815  Tw (    Syntax) Tj0 -11.76  TD -0.0229  Tc 0.0529  Tw (        unsigned long) TjT* -0.0179  Tc 0.0479  Tw (        SpuFlush \(unsigned long ev\)) TjT* -0.0535  Tc 0.0835  Tw (    Argument) TjT* -0.0085  Tc 0.0385  Tw (        ev:     Event to be flushed) TjT* -0.0015  Tc 0.0315  Tw (    Explanation) TjT* -0.0129  Tc 0.0429  Tw (        This function flushes a queued event.) TjT* -0.0193  Tc 0.0493  Tw (        Set ev with bitwise inclusive ORed events to be flushed;) TjT* 0.039  Tc -0.009  Tw (                SPU_EVENT_KEY        ) Tj144 0  TD -0.019  Tc 0.049  Tw (Key ON/OFF) Tj-144 -11.76  TD 0.0348  Tc -0.0048  Tw (                SPU_EVENT_PITCHLFO   ) Tj180 0  TD 0.0022  Tc 0.0278  Tw (Pitch LFO Voice Set) Tj-180 -11.76  TD 0.0355  Tc -0.0055  Tw (                SPU_EVENT_NOISE      ) Tj180 0  TD 0.01  Tc 0.02  Tw (Noise Voice Set) Tj-180 -11.76  TD 0.0326  Tc -0.0026  Tw (                SPU_EVENT_REVERB     ) Tj180 0  TD 0.0087  Tc 0.0213  Tw (Reverb Voice Set) Tj-180 -23.52  TD -0.0064  Tc 0.0364  Tw (        When ev is set to SPU_EVENT_ALL, all events will be flushed.) Tj0 -23.52  TD -0.0123  Tc 0.0423  Tw (    Return Value) Tj0 -11.76  TD -0.0151  Tc 0.0451  Tw (        Bitwise inclusive ORed value of the flushed event\(s\).) TjT* -0.0057  Tc 0.0357  Tw (    Related Function) TjT* -0.0056  Tc 0.0356  Tw (        SpuSetEnv\(\), SpuSetKey\(\), SpuSetKeyOnWithAttr\(\),) TjT* 0.0092  Tc 0.0208  Tw (        SpuSetPitchLFOVoice\(\), SpuSetNoiseVoice\(\), SpuSetReverbVoice\(\)) Tj0 -35.28  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD -0.0022  Tc 0.0322  Tw (SpuNSetVoiceAttr        Sets Voice Attributes) TjETendstream
endobj
87 0 obj
4104
endobj
85 0 obj
<<
/Type /Page
/Parent 82 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 86 0 R
>>
endobj
89 0 obj
<<
/Length 90 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0515  Tc 0.0815  Tw (      Syntax) Tj0 -11.76  TD 0.0128  Tc 0.0172  Tw (                void) TjT* -0.007  Tc 0.037  Tw (                SpuNSetVoiceAttr \( int voiceNum, SpuVoiceAttr *attr \)) TjT* -0.0535  Tc 0.0835  Tw (      Argument) TjT* -0.0247  Tc 0.0547  Tw (                voiceNum:    ) Tj108 0  TD 0.0098  Tc 0.0202  Tw (Voice Number \(0 - 23\)) Tj-108 -11.76  TD 0.0069  Tc 0.0231  Tw (                attr:           ) Tj108 0  TD 0  Tc 0.0293  Tw (Voice Attribute) Tj-108 -11.76  TD -0.0015  Tc 0.0315  Tw (      Explanation) Tj0 -11.76  TD -0.0046  Tc 0.0346  Tw (                This function sets the voice attribute.) TjT* -0.006  Tc 0.036  Tw (                Set voice number to be obtained explicitly into voiceNum.) TjT* -0.0189  Tc 0.0489  Tw (                Set attr.mask with bitwise inclusive ORed attributes;) TjT* -0.0048  Tc 0.0348  Tw (                  SPU_VOICE_VOLL        Volume\(Left\)) TjT* -0.0041  Tc 0.0341  Tw (                  SPU_VOICE_VOLR        Volume\(Right\)) TjT* 0.0034  Tc 0.0266  Tw (                  SPU_VOICE_VOLMODEL    VolumeMode\(Left\)) TjT* 0.0037  Tc 0.0263  Tw (                  SPU_VOICE_VOLMODER    VolumeMode\(Right\)) TjT* 0.0146  Tc 0.0154  Tw (                  SPU_VOICE_PITCH       Interval \(Pitch specification\)) TjT* 0.0148  Tc 0.0152  Tw (                  SPU_VOICE_NOTE        Interval \(Note specification\)) TjT* 0.0085  Tc 0.0215  Tw (                  SPU_VOICE_SAMPLE_NOTE Waveform Data Sample Note) TjT* 0.0046  Tc 0.0254  Tw (                  SPU_VOICE_WDSA        Waveform Data Start Address) TjT* 0.0012  Tc 0.0288  Tw (                  SPU_VOICE_ADSR_AMODE  ADSR Attack rate Mode) TjT* 0.0031  Tc 0.0269  Tw (                  SPU_VOICE_ADSR_SMODE  ADSR Sustain rate Mode) TjT* 0.0064  Tc 0.0236  Tw (                  SPU_VOICE_ADSR_RMODE  ADSR Release rate Mode) TjT* -0.0077  Tc 0.0377  Tw (                  SPU_VOICE_ADSR_AR     ADSR Attack rate) TjT* -0.0028  Tc 0.0328  Tw (                  SPU_VOICE_ADSR_DR     ADSR Decay rate) TjT* -0.0051  Tc 0.0351  Tw (                  SPU_VOICE_ADSR_SR     ADSR Sustain rate) TjT* -0.001  Tc 0.031  Tw (                  SPU_VOICE_ADSR_RR     ADSR Release rate) TjT* -0.0097  Tc 0.0397  Tw (                  SPU_VOICE_ADSR_SL     ADSR Sustain level) TjT* -0.0058  Tc 0.0358  Tw (                  SPU_VOICE_ADSR_ADSR1  ADSR adsr1 for `VagAtr') TjT* (                  SPU_VOICE_ADSR_ADSR2  ADSR adsr2 for `VagAtr') TjT* 0.006  Tc 0.024  Tw (                  SPU_VOICE_LSAX        Loop Start Address) TjT* -0.0069  Tc 0.0369  Tw (                When attr.mask is set to 0, all attributes will be set.) TjT* 0.004  Tc 0.026  Tw (                Refer to SpuSetVoiceAttr for attribute detail.) TjT* 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj-36 -11.76  TD 0.0067  Tc 0.0233  Tw (                None) Tj0 -23.52  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0075  Tc 0.0375  Tw (Related Functions) Tj-36 -11.76  TD 0.0047  Tc 0.0253  Tw (                SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),SpuRSetVoiceAttr\(\),) Tj0 -11.76  TD 0.0041  Tc 0.0259  Tw (                SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\), SpuSetKey\(\),) TjT* -0.0044  Tc 0.0344  Tw (                SpuSetKeyOnWithAttr\(\), SpuSetVoiceVolume\(\),) TjT* 0.0036  Tc 0.0264  Tw (                SpuSetVoiceVolumeAttr\(\), SpuSetVoicePitch\(\),) TjT* 0.0097  Tc 0.0203  Tw (                SpuSetVoiceNote\(\), SpuSetVoiceSampleNote\(\),) TjT* 0.0124  Tc 0.0176  Tw (                SpuSetVoiceStartAddr\(\), SpuSetVoiceLoopStartAddr\(\),) TjT* 0.0064  Tc 0.0236  Tw (                SpuSetVoiceAR\(\), SpuSetVoiceDR\(\), SpuSetVoiceSR\(\),) TjT* 0.0024  Tc 0.0276  Tw (                SpuSetVoiceRR\(\), SpuSetVoiceSL\(\), SpuSetVoiceARAttr\(\),) TjT* 0.0013  Tc 0.0287  Tw (                SpuSetVoiceSRAttr\(\), SpuSetVoiceRRAttr\(\),) TjT* -0.0018  Tc 0.0318  Tw (                SpuSetVoiceADSR\(\), SpuSetVoiceADSRAttr\(\)) Tj0 -35.28  TD -0.006  Tc 0  Tw (SpuSetVoiceVolume) Tj108 0  TD -0.0121  Tc 0.0421  Tw ( Voice volume set) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0036  Tc 0.0336  Tw (SpuSetVoiceVolume \( i) Tj95.16 0  TD -0.0229  Tc 0.0529  Tw (nt voiceNum,) Tj-59.16 -11.76  TD -0.0206  Tc 0.0506  Tw (    short volumeL, short volumeR \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0098  Tc 0.0202  Tw (Voice Number \(0 - 23\)) Tj-72 -11.76  TD -0.0418  Tc 0  Tw (volumeL:) Tj108 0  TD -0.0198  Tc 0.0498  Tw (Volume \(Left\)) TjETendstream
endobj
90 0 obj
4875
endobj
88 0 obj
<<
/Type /Page
/Parent 82 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 89 0 R
>>
endobj
92 0 obj
<<
/Length 93 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0365  Tc 0  Tw (volumeR:) Tj108 0  TD -0.0204  Tc 0.0504  Tw (Volume \(Right\)) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.007  Tc 0.037  Tw (This function sets the voice volume, equivalent process to) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.008  Tc (SPU_VOICE_VOLL) Tj0 -11.76  TD 0.0123  Tc (SPU_VOICE_VOLR.) Tj-36 -11.76  TD 0.0031  Tc 0.0269  Tw (Thus the Volume Mode will become "Direct Mode" and the) Tj0 -11.76  TD -0.0133  Tc 0.0433  Tw (range of value that can be specified to volumeL and volumeR) TjT* 0.0095  Tc 0.0205  Tw (is equivalent to "Direct Mode" of SpuSetVoiceAttr.) TjT* -0.0272  Tc 0.0572  Tw (If you want to specify both) Tj107.16 0  TD -0.027  Tc 0.057  Tw ( volume and volume mode) Tj-107.16 -11.76  TD -0.016  Tc 0.046  Tw (at the same time, use SpuSetVoiceVolumeAttr.) Tj0 -11.76  TD -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) TjT* -0.0222  Tc 0.0522  Tw (volumeL and/or volumeR.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD -0.0044  Tc 0  Tw (SpuSetVoiceVolumeAttr\(\)) Tj-72 -35.28  TD -0.0089  Tc (SpuSetVoiceVolumeAttr) Tj108 0  TD -0.0188  Tc 0.0488  Tw (Voice volume/volume mode set) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0119  Tc 0.0419  Tw (SpuSetVoiceVolumeAttr \( int voiceNum,) Tj72 -11.76  TD -0.0211  Tc 0.0511  Tw (short volumeL,  short volumeR,) Tj0 -11.76  TD -0.01  Tc 0.04  Tw (short v) Tj27.36 0  TD 0.0142  Tc 0.0158  Tw (olModeL, short volModeR \)) Tj-171.36 -11.76  TD -0.0535  Tc 0.0835  Tw ( Argument) Tj36 -11.76  TD -0.0247  Tc 0  Tw (voiceNum:) Tj72 0  TD 0.0098  Tc 0.0202  Tw (Voice Number \(0 - 23\)) Tj-72 -11.76  TD -0.0418  Tc 0  Tw (volumeL:) Tj108 0  TD -0.0198  Tc 0.0498  Tw (Volume \(Left\)) Tj-108 -11.76  TD -0.0365  Tc 0  Tw (volumeR:) Tj108 0  TD -0.0204  Tc 0.0504  Tw (Volume \(Right\)) Tj-108 -11.76  TD 0.0067  Tc 0  Tw (volModeL:) Tj72 0  TD -0.0181  Tc 0.0481  Tw (Volume mode \(Left\)) Tj-72 -11.76  TD 0.0114  Tc 0  Tw (volModeR:) Tj72 0  TD -0.0186  Tc 0.0486  Tw (Volume mode \(Right\)) Tj-144 -23.52  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0129  Tc 0.0429  Tw (This function sets voice volume and/or volume mode,) Tj0 -11.76  TD 0.0046  Tc 0.0254  Tw (equivalent process to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.008  Tc (SPU_VOICE_VOLL) Tj0 -11.76  TD 0.011  Tc (SPU_VOICE_VOLR) TjT* 0.0106  Tc (SPU_VOICE_VOLMODEL) TjT* 0.0138  Tc (SPU_VOICE_VOLMODER.) Tj-36 -11.76  TD -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) Tj0 -11.76  TD -0.0068  Tc 0.0368  Tw (volModeL, volModeR, volumeL and/or volumeR) Tj197.4 0  TD 0.03  Tc 0  Tw (.) Tj-269.4 -23.52  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (   ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD -0.0044  Tc 0  Tw (SpuSetVoiceVolumeAttr\(\)) Tj-72 -35.28  TD 0.0069  Tc (SpuSetVoicePitch) Tj144 0  TD 0.0017  Tc 0.0283  Tw (Sets Interval \(Pitch specification\)) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0056  Tc 0.0356  Tw (SpuSetVoicePitch \( int voiceNum, unsigned short pitch \)) TjETendstream
endobj
93 0 obj
4160
endobj
91 0 obj
<<
/Type /Page
/Parent 82 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 92 0 R
>>
endobj
95 0 obj
<<
/Length 96 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0098  Tc 0.0202  Tw (Voice Number \(0 - 23\)) Tj-72 -11.76  TD -0.0015  Tc 0  Tw (pitch:) Tj72 0  TD 0.0035  Tc 0.0265  Tw (Interval \(Pitch specification\)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0078  Tc 0.0378  Tw (This function specifies voice interval by pitch,) Tj0 -11.76  TD -0.0035  Tc 0.0335  Tw (equivalent to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.0351  Tc (SPU_VOICE_PITCH.) Tj-36 -11.76  TD -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) Tj0 -11.76  TD -0.007  Tc 0.037  Tw (the interval by pitch specification.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (   ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.005  Tc 0.025  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\)) Tj-72 -35.28  TD 0.0098  Tc 0  Tw (SpuSetVoiceNote) Tj72 0  TD 0.0029  Tc 0.0271  Tw (Sets Interval \(Note specification\)) Tj-72 -23.52  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0049  Tc 0.0349  Tw (SpuSetVoiceNote \( int voiceNum, unsigned short note \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0098  Tc 0.0202  Tw (Voice Number \(0 - 23\)) Tj-72 -11.76  TD 0  Tc 0  Tw (note:) Tj72 0  TD 0.0087  Tc 0.0213  Tw (Interval\(Note sp) Tj65.16 0  TD 0  Tc 0  Tw (ecification\)) Tj-209.16 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0069  Tc 0.0369  Tw (This function specifies voice interval by note.,) Tj0 -11.76  TD -0.0035  Tc 0.0335  Tw (equivalent to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.0335  Tc (SPU_VOICE_NOTE.) Tj-36 -11.76  TD 0.0143  Tc 0.0157  Tw (Thus prior to call SpuSetVoiceNote,) Tj0 -11.76  TD 0.0149  Tc 0.0151  Tw (SpuSetVoiceAttr  SPU_VOICE_SAMPLE_NOTE  or) TjT* -0.0143  Tc 0.0443  Tw (the waveform data sample note feature for voice must be set.) TjT* -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) TjT* -0.007  Tc 0.037  Tw (the interval by note specification.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD 0.0051  Tc 0  Tw (SpuSetVoic) Tj47.64 0  TD 0.0048  Tc (eSampleNote\(\)) Tj-119.64 -35.28  TD 0.0013  Tc (SpuSetVoiceSampleNote) Tj108 0  TD -0.0193  Tc 0.0493  Tw (Sets waveform data sample note) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0056  Tc 0.0356  Tw (SpuSetVoiceSampleNote \( int voiceNum,) Tj72 -11.76  TD -0.0092  Tc 0.0392  Tw (unsigned short sampleNote \)) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0098  Tc 0.0202  Tw (  Voice Number \(0 - 23\)) Tj-72 -11.76  TD -0.0062  Tc 0  Tw (sampleNote:) Tj72 0  TD -0.0068  Tc 0.0368  Tw (  Waveform data sample note) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0126  Tc 0.0426  Tw (This function sets the waveform data sample note for voice,) Tj0 -11.76  TD -0.0035  Tc 0.0335  Tw (equivalent to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) TjETendstream
endobj
96 0 obj
4160
endobj
94 0 obj
<<
/Type /Page
/Parent 82 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 95 0 R
>>
endobj
98 0 obj
<<
/Length 99 0 R
>>
stream
BT198 710.64  TD0 0 0 rg /F0 9.96  Tf0.0232  Tc 0  Tw (SPU_VOICE_SAMPLE_NOTE.) Tj-36 -11.76  TD -0.0055  Tc 0.0355  Tw (Refer SpuSetVoiceAttr for values) Tj134.64 0  TD -0.0016  Tc 0.0316  Tw ( that can be specified in) Tj-134.64 -11.76  TD -0.0057  Tc 0.0357  Tw (the sampleNote.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD 0.0137  Tc 0  Tw (SpuSetVoiceNote\(\)) Tj-72 -35.28  TD 0.0073  Tc (SpuSetVoiceStartAddr) Tj108 0  TD -0.0108  Tc 0.0408  Tw (Sets start address of waveform data in the sound buffer ) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0022  Tc 0.0322  Tw (SpuSetVoiceStartAddr \( int voiceNum,) Tj36 -11.76  TD -0.0077  Tc 0.0377  Tw (       unsigned long startAddr \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD 0.0052  Tc 0  Tw (startAddr:) Tj72 0  TD 0.0049  Tc 0.0251  Tw (Waveform data start address) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.011  Tc 0.041  Tw (This function sets start address of waveform data in) Tj0 -11.76  TD -0.007  Tc 0.037  Tw (the sound buffer , equivalent to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.0169  Tc (SPU_VOICE_WDSA.) Tj-36 -11.76  TD -0  Tc 0.0303  Tw (Refer SpuSetTransferStartAddr for values that can be specified in) Tj0 -11.76  TD -0.0032  Tc 0.0332  Tw (the startAddr, waveform data start address.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD 0.0097  Tc 0  Tw (SpuSetTransferStartAddr\(\)) Tj-72 -35.28  TD 0.01  Tc (SpuSetVoiceLoopStartAddr) Tj144 0  TD -0.0066  Tc 0.0366  Tw (Sets loop start address of waveform data in the sound buffer  ) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD 0  Tc 0.0294  Tw (SpuSetVoiceLoopStartAddr \( int voiceNum,) Tj72 -11.76  TD 0  Tc 0.0293  Tw (   unsigned long loopStartAddr \)) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (     Voice number \(0 - 23\)) Tj-72 -11.76  TD 0.0171  Tc 0  Tw (loopStartAddr:) Tj72 0  TD 0.0146  Tc 0.0154  Tw (     Loop start address) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.011  Tc 0.041  Tw (This function sets start address of waveform data in) Tj0 -11.76  TD -0.007  Tc 0.037  Tw (the sound buffer , equivalent to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.006  Tc (SPU_VOICE_LSAX.) Tj-36 -11.76  TD -0  Tc 0.0303  Tw (Refer SpuSetTransferStartAddr for values that can be specified in) Tj0 -11.76  TD 0.0167  Tc 0.0133  Tw (the loopStartAddr, loop start address.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD 0.0097  Tc 0  Tw (SpuSetTransferStartAddr\(\)) TjETendstream
endobj
99 0 obj
4079
endobj
97 0 obj
<<
/Type /Page
/Parent 82 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 98 0 R
>>
endobj
102 0 obj
<<
/Length 103 0 R
>>
stream
BT90 687.12  TD0 0 0 rg /F0 9.96  Tf-0.0066  Tc 0  Tw (SpuSetVoiceAR) Tj108 0  TD -0.0209  Tc 0.0509  Tw (Sets ADSR Attack Rate) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0148  Tc 0.0448  Tw (SpuSetVoiceAR \( int voiceNum, unsigned short AR \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0544  Tc 0  Tw (AR:) Tj72 0  TD -0.0238  Tc 0.0538  Tw (ADSR Attack Rate) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0119  Tc 0.0419  Tw (This function sets ADSR Attack Rate in voice equivalent to,) Tj0 -11.76  TD -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.0021  Tc (SPU_VOICE_ADSR_AR.) Tj-36 -11.76  TD -0.0317  Tc 0.0617  Tw (ADSR Attack) Tj55.32 0  TD 0  Tc 0.0299  Tw ( Rate mode becomes  SPU_VOICE_LINEARIncN) Tj-55.32 -11.76  TD -0.0153  Tc 0.0453  Tw (\(Linear Increase mode\) .  If you want to set ADSR Attack Rate) Tj0 -11.76  TD -0.0163  Tc 0.0463  Tw (and ADSR Attack Rate Mode at the same time, use) TjT* -0.0078  Tc 0  Tw (SpuSetVoiceARAttr.) TjT* -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) TjT* -0.0238  Tc 0.0538  Tw (ADSR Attack Rate, AR.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD -0.0044  Tc 0  Tw (SpuSetVoiceARAttr\(\)) Tj-72 -35.28  TD 0.0026  Tc (SpuSetVoiceDR) Tj108 0  TD -0.0201  Tc 0.0501  Tw (Sets ADSR Decay Rate) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0  Tc (vo) Tj9.96 0  TD 0.0256  Tc (id) Tj26.04 0  TD -0.009  Tc 0.039  Tw (SpuSetVoiceDR \( int voiceNum, unsigned short DR \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0144  Tc 0  Tw (DR:) Tj72 0  TD -0.0229  Tc 0.0529  Tw (ADSR Decay Rate) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.011  Tc 0.041  Tw (This function sets DSR Decay Rate used in the voice,) Tj0 -11.76  TD -0.0035  Tc 0.0335  Tw (equivalent to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.0088  Tc (SPU_VOICE_ADSR_DR.) Tj-36 -11.76  TD -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) Tj0 -11.76  TD -0.016  Tc 0.046  Tw (ADSR Decay Rate, DR.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (   ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.005  Tc 0.025  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\)) Tj-72 -35.28  TD 0  Tc 0  Tw (SpuSetVoiceSR) Tj108 0  TD -0.0208  Tc 0.0508  Tw (Sets ADSR Sustain Rate) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0103  Tc 0.0403  Tw (SpuSetVoiceSR \( int voiceNum, unsigned short SR \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0233  Tc 0  Tw (SR:) Tj72 0  TD -0.0235  Tc 0.0535  Tw (ADSR Sustain Rate) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) TjETendstream
endobj
103 0 obj
4189
endobj
100 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 102 0 R
>>
endobj
105 0 obj
<<
/Length 106 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.012  Tc 0.042  Tw (This function sets ADSR Sustain Rate in voice equivalent to,) Tj0 -11.76  TD -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.0073  Tc (SPU_VOICE_ADSR_SR.) Tj-36 -11.76  TD -0.0063  Tc 0.0363  Tw (ADSR Sustain Rate mode becomes  SPU_VOICE_LINEARDecN) Tj0 -11.76  TD -0.0145  Tc 0.0445  Tw (\(Linear Decrease mode\) .  If you want to set ADSR Sustain Rate) TjT* -0.0218  Tc 0.0518  Tw (and ADSR Sustain Rate mode at the same time, use) TjT* 0.0043  Tc 0  Tw (SpuSetVoiceS) Tj57.6 0  TD -0.0165  Tc (RAttr.) Tj-57.6 -11.76  TD -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) Tj0 -11.76  TD -0.0186  Tc 0.0486  Tw (ADSR Sustain Rate, SR.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD 0  Tc 0  Tw (SpuSetVoiceSRAttr\(\)) Tj-72 -35.28  TD -0.0014  Tc (SpuSetVoiceRR) Tj108 0  TD -0.0126  Tc 0.0426  Tw (Sets ADSR Release Rate) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj0 -11.76  TD -0.0115  Tc 0.0415  Tw (SpuSetVoiceRR \( int voiceNum, unsigned short RR \)) Tj-72 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0318  Tc 0  Tw (RR:) Tj72 0  TD -0.013  Tc 0.043  Tw (ADSR Release Rate) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0121  Tc 0.0421  Tw (This function) Tj53.28 0  TD -0.008  Tc 0.038  Tw ( sets ADSR Release Rate in voice equivalent to,) Tj-53.28 -11.76  TD -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.0059  Tc (SPU_VOICE_ADSR_RR.) Tj-36 -11.76  TD -0.0063  Tc 0.0363  Tw (ADSR Sustain Rate mode becomes  SPU_VOICE_LINEARDecN) Tj0 -11.76  TD -0.0114  Tc 0.0414  Tw (\(Linear Decrease mode\) .  If you want to set ADSR Release Rate) TjT* -0.0178  Tc 0.0478  Tw (and ADSR Release Rate mode at the same time, use) TjT* -0.0041  Tc 0  Tw (SpuSetVoiceRRAttr.) TjT* -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) TjT* -0.0117  Tc 0.0417  Tw (ADSR Release Rate, RR.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD -0.0009  Tc 0  Tw (SpuSetVoiceRRAttr\(\)) Tj-72 -35.28  TD -0.0026  Tc (SpuSetVoiceSL) Tj108 0  TD -0.0249  Tc 0.0549  Tw (Sets ADSR Sustain Level) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0123  Tc 0.0423  Tw (SpuSetVoiceSL \( int voiceNum, unsigned short SL \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0374  Tc 0  Tw (SL:) Tj72 0  TD -0.0284  Tc 0.0584  Tw (ADSR Sustain Level) Tj-144 -11.76  TD 0  Tc 0.03  Tw (     ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0137  Tc 0.0437  Tw (This function sets ADSR Sustain Level in voice equivalent to,) Tj0 -11.76  TD -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.0049  Tc (SPU_VOICE_ADSR_SL.) Tj-36 -11.76  TD -0.0083  Tc 0.0383  Tw (ADSR Sustain Level mode becomes  SPU_VOICE_LINEARDecN) TjETendstream
endobj
106 0 obj
4066
endobj
104 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 105 0 R
>>
endobj
108 0 obj
<<
/Length 109 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0162  Tc 0.0462  Tw (\(Linear Decrease mode\) .  If you want to set ADSR Sustain Level) Tj0 -11.76  TD -0.0258  Tc 0.0558  Tw (and ADSR Sus) Tj60.12 0  TD -0.0232  Tc 0.0532  Tw (tain Level mode at the same time, use) Tj-60.12 -11.76  TD -0.005  Tc 0  Tw (SpuSetVoiceSLAttr.) Tj0 -11.76  TD -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) TjT* -0.0249  Tc 0.0549  Tw (ADSR Sustain Level, SL.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD -0.0009  Tc 0  Tw (SpuSetVoiceRRAttr\(\)) Tj-72 -35.28  TD -0.0101  Tc (SpuSetVoiceARAttr) Tj144 0  TD -0.0119  Tc 0.0419  Tw (Sets ADSR Attack Rate / Attack Rate Mode) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.013  Tc 0.043  Tw (SpuSetVoiceARAttr \( int voiceNum,) Tj36 -11.76  TD -0.0208  Tc 0.0508  Tw (    unsigned short AR, long ARmode \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0598  Tc 0  Tw (Argume) Tj32.28 0  TD -0.0344  Tc (nt) Tj3.72 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0544  Tc 0  Tw (AR:) Tj72 0  TD -0.0238  Tc 0.0538  Tw (ADSR Attack Rate) Tj-72 -11.76  TD -0.0306  Tc 0  Tw (ARmode:) Tj108 0  TD -0.0094  Tc 0.0394  Tw (ADSR Attack Rate Mode) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0146  Tc 0.0446  Tw (This function sets ADSR Attack Rate / ADSR Attack Rate Mode) Tj0 -11.76  TD -0.003  Tc 0.033  Tw (used in voice, equivalent to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0  Tc (SPU_VOICE_ADSR_AR) Tj0 -11.76  TD 0.0076  Tc (SPU_VOICE_ADSR_AMODE.) Tj-36 -11.76  TD -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) Tj0 -11.76  TD -0.0175  Tc 0.0475  Tw (ADSR Attack Rate AR and ADSR Attack Rate Mode, ARmode.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD -0.0066  Tc 0  Tw (SpuSetVoiceAR) Tj65.76 0  TD 0.0433  Tc (\(\)) Tj-137.76 -35.28  TD -0.0046  Tc (SpuSetVoiceSRAttr) Tj144 0  TD -0.0123  Tc 0.0423  Tw (Sets ADSR Sustain Rate / Sustain Rate Mode) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0099  Tc 0.0399  Tw (SpuSetVoiceSRAttr \( int voiceNum,) Tj36 -11.76  TD -0.0139  Tc 0.0439  Tw (    unsigned short SR, long SRmode \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0233  Tc 0  Tw (SR:) Tj72 0  TD -0.0235  Tc 0.0535  Tw (ADSR Sustain Rate) Tj-72 -11.76  TD -0.0173  Tc 0  Tw (SRmode:) Tj108 0  TD -0.0099  Tc 0.0399  Tw (ADSR Sustain Rate Mode) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0148  Tc 0.0448  Tw (This function sets ADSR Sustain Rate / ADSR Sustain Rate Mode) Tj0 -11.76  TD -0.003  Tc 0.033  Tw (used in voice, equivalent to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.006  Tc (SPU_VOICE_ADSR_SR) Tj0 -11.76  TD 0.0064  Tc (SPU_VOICE_ADSR_SAMODE.) Tj-36 -11.76  TD -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) Tj0 -11.76  TD -0.0135  Tc 0.0435  Tw (ADSR Sustain Rate SR and ADSR Sustain Rate Mode, SRmode.) TjETendstream
endobj
109 0 obj
4237
endobj
107 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 108 0 R
>>
endobj
111 0 obj
<<
/Length 112 0 R
>>
stream
BT90 698.88  TD0 0 0 rg /F0 9.96  Tf0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD 0.0063  Tc 0  Tw (SpuSetVoiceSR\(\)) Tj-72 -35.28  TD -0.0061  Tc (SpuSetVoiceRRAttr) Tj144 0  TD -0.0033  Tc 0.0333  Tw (Sets ADSR Release Rate / Release Rate Mode) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0107  Tc 0.0407  Tw (SpuSetVoiceRRAttr \( int voiceNum,) Tj36 -11.76  TD -0.0158  Tc 0.0458  Tw (    unsigned short RR, long RRmode \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD 0  Tc (vo) Tj9.96 0  TD -0.0317  Tc (iceNum:) Tj62.04 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0318  Tc 0  Tw (RR:) Tj72 0  TD -0.013  Tc 0.043  Tw (ADSR Release Rate) Tj-72 -11.76  TD -0.0209  Tc 0  Tw (RRmode:) Tj108 0  TD -0.0017  Tc 0.0317  Tw (ADSR Release Rate Mode) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0082  Tc 0.0382  Tw (This function sets ADSR Releae Rate / ADSR Release Rate Mode) Tj0 -11.76  TD -0.003  Tc 0.033  Tw (used in voice, equivalent to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.0044  Tc (SPU_VOICE_ADSR_RR) Tj0 -11.76  TD 0.0108  Tc (SPU_VOICE_ADSR_RMODE.) Tj-36 -11.76  TD -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) Tj0 -11.76  TD -0.0094  Tc 0.0394  Tw (ADSR Release Rate AR and ADSR Release Rate Mode, RRmode.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0056  Tc 0.0244  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\),) Tj0 -11.76  TD 0.0046  Tc 0  Tw (SpuSetVoiceRR\(\)) Tj-72 -35.28  TD -0.0063  Tc (SpuSetVoiceADSR) Tj144 0  TD -0.0258  Tc 0.0558  Tw (Sets ADSR) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0112  Tc 0.0412  Tw (SpuSetVoiceADSR \( int voiceNum,) Tj36 -11.76  TD -0.0169  Tc 0.0469  Tw (  unsigned short AR, unsigned short DR,) Tj0 -11.76  TD -0.0156  Tc 0.0456  Tw (  unsigned short SR, unsigned short RR,) TjT* -0.0166  Tc 0.0466  Tw (  unsigned short SL \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0544  Tc 0  Tw (AR:) Tj72 0  TD -0.0238  Tc 0.0538  Tw (ADSR Attack Rate) Tj-72 -11.76  TD -0.0144  Tc 0  Tw (DR:) Tj72 0  TD -0.0229  Tc 0.0529  Tw (ADSR Decay Rate) Tj-72 -11.76  TD -0.0233  Tc 0  Tw (SR:) Tj72 0  TD -0.0235  Tc 0.0535  Tw (ADSR Sustain Rate) Tj-72 -11.76  TD -0.0318  Tc 0  Tw (RR:) Tj72 0  TD -0.013  Tc 0.043  Tw (ADSR Release Rate) Tj-72 -11.76  TD -0.0374  Tc 0  Tw (SL:) Tj72 0  TD -0.0284  Tc 0.0584  Tw (ADSR Sustain Level) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0101  Tc 0.0401  Tw (This function sets each ADSR attribute) Tj156.12 0  TD -0.0061  Tc 0.0361  Tw ( used in the S voice,) Tj-156.12 -11.76  TD -0.0035  Tc 0.0335  Tw (equivalent to) Tj0 -11.76  TD -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0  Tc (SPU_VOICE_ADSR_AR) Tj0 -11.76  TD 0.0075  Tc (SPU_VOICE_ADSR_DR) TjT* 0.006  Tc (SPU_VOICE_ADSR_SR) TjT* 0.0044  Tc (SPU_VOICE_ADSR_RR) TjETendstream
endobj
112 0 obj
4033
endobj
110 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 111 0 R
>>
endobj
114 0 obj
<<
/Length 115 0 R
>>
stream
BT198 710.64  TD0 0 0 rg /F0 9.96  Tf0.0049  Tc 0  Tw (SPU_VOICE_ADSR_SL.) Tj-36 -11.76  TD -0.006  Tc 0.036  Tw (For Attack, Sustain, and  Release Rate, Rate mode becomes as) Tj0 -11.76  TD -0.0185  Tc 0  Tw (below;) TjT* -0.0749  Tc (---------------------+-----------------------------------) TjT* -0  Tc 0.03  Tw ( Attack Rate Mode | SPU_VOICE_LINEARIncN \(Linear Increase\)) TjT* 0.0013  Tc 0.0287  Tw ( Sustain Rate Mode | SPU_VOICE_LINEARDecN \(Linear Decrease\)) TjT* 0.0073  Tc 0.0227  Tw ( Release_Rate_Mode | SPU_VOICE_LINEARDecN_\(Linear Decrease\)) TjT* -0.0767  Tc 0  Tw (----------------) Tj51.84 0  TD -0.0743  Tc (-----+-----------------------------------) Tj-51.84 -11.76  TD -0.0215  Tc 0.0515  Tw (If you want to set multiple Rate Modes at the same time, use) Tj0 -11.76  TD -0.0075  Tc 0  Tw (SpuSetVoiceADSRAttr.) TjT* -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) TjT* 0  Tc 0.0293  Tw (each Rate.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0045  Tc 0.0255  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\), SpuSetVoiceAR\(\),) Tj0 -11.76  TD 0.0078  Tc 0.0222  Tw (SpuSetVoiceDR\(\), SpuSetVoiceSR\(\), SpuSetVoiceRR\(\),) TjT* 0.0035  Tc 0  Tw (SpuSetVoiceSL\(\)) Tj-72 -35.28  TD -0.0095  Tc (SpuSetVoiceADSRAttr) Tj108 0  TD -0.0017  Tc 0.0317  Tw (Sets ADSR and each Mode) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0124  Tc 0.0424  Tw (SpuSetVoiceADSRAttr \( int voiceNum,) Tj36 -11.76  TD -0.0206  Tc 0.0506  Tw (      unsigned short AR,) Tj0 -11.76  TD -0.0131  Tc 0.0431  Tw (      unsigned short DR,) TjT* -0.0148  Tc 0.0448  Tw (      unsigned short SR,) TjT* -0.0164  Tc 0.0464  Tw (      unsigned short RR,) TjT* -0.0174  Tc 0.0474  Tw (      unsigned short SL,) TjT* -0.0222  Tc 0.0522  Tw (      long ARmode,) TjT* -0.0137  Tc 0.0437  Tw (      long SRmode,) TjT* -0.0148  Tc 0.0448  Tw (      long RRmode \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0544  Tc 0  Tw (AR:) Tj72 0  TD -0.0238  Tc 0.0538  Tw (ADSR Attack Rate) Tj-72 -11.76  TD -0.0144  Tc 0  Tw (DR:) Tj72 0  TD -0.0229  Tc 0.0529  Tw (ADSR Decay Rate) Tj-72 -11.76  TD -0.0233  Tc 0  Tw (SR:) Tj72 0  TD -0.0235  Tc 0.0535  Tw (ADSR Sustain Rate) Tj-72 -11.76  TD -0.0318  Tc 0  Tw (RR:) Tj72 0  TD -0.013  Tc 0.043  Tw (ADSR Release Rate) Tj-72 -11.76  TD -0.0374  Tc 0  Tw (SL:) Tj72 0  TD -0.0284  Tc 0.0584  Tw (ADSR Sustain Level) Tj-72 -11.76  TD -0.0306  Tc 0  Tw (ARmode:) Tj108 0  TD -0.0094  Tc 0.0394  Tw (ADSR Attack Rate Mode) Tj-108 -11.76  TD -0.0173  Tc 0  Tw (SRmode:) Tj108 0  TD -0.0355  Tc 0.0655  Tw (ADSR Sust) Tj45.96 0  TD 0.0087  Tc 0.0213  Tw (ain Rate Mode) Tj-153.96 -11.76  TD -0.0209  Tc 0  Tw (RRmode:) Tj108 0  TD -0.0017  Tc 0.0317  Tw (ADSR Release Rate Mode) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0039  Tc 0.0339  Tw (This function sets ADSR attributes and Mode,) Tj0 -11.76  TD -0.0035  Tc 0.0335  Tw (equivalent to) TjT* -0.0011  Tc 0  Tw (SpuSetVoiceAttr) Tj36 -11.76  TD 0.0037  Tc 0.0263  Tw (SPU_VOICE_ADSR_AR  SPU_VOICE_ADSR_AMODE) Tj0 -11.76  TD 0.0075  Tc 0  Tw (SPU_VOICE_ADSR_DR) TjT* 0.0087  Tc 0.0213  Tw (SPU_VOICE_ADSR_SR  SPU_VOICE_ADSR_SMODE) TjT* 0.0074  Tc 0.0226  Tw (SPU_VOICE_ADSR_RR  SPU_VOICE_ADSR_RMODE) TjT* 0.0049  Tc 0  Tw (SPU_VOICE_ADSR_SL.) Tj-36 -11.76  TD -0.0039  Tc 0.0339  Tw (Refer SpuSetVoiceAttr for values that can be specified in) Tj0 -11.76  TD 0.0085  Tc 0.0215  Tw (each Rate and Rate Mode.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) TjETendstream
endobj
115 0 obj
4181
endobj
113 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 114 0 R
>>
endobj
117 0 obj
<<
/Length 118 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0064  Tc 0.0236  Tw (SpuSetVoiceAttr\(\), SpuNSetVoiceAttr\(\), Sp) Tj177.36 0  TD -0.0013  Tc 0  Tw (uSetVoiceADSR\(\),) Tj-177.36 -11.76  TD 0.0064  Tc 0.0236  Tw (SpuSetVoiceAR\(\), SpuSetVoiceDR\(\), SpuSetVoiceSR\(\),) Tj0 -11.76  TD 0.0024  Tc 0.0276  Tw (SpuSetVoiceRR\(\), SpuSetVoiceSL\(\), SpuSetVoiceARAttr\(\),) TjT* 0  Tc 0.0294  Tw (SpuSetVoiceSRAttr\(\), SpuSetVoiceRRAttr\(\)) Tj-72 -23.52  TD 0  Tc 0.0296  Tw (SpuNGetVoiceAttr        Gets Voice Attribute) Tj0 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) TjT* -0.0515  Tc 0.0815  Tw (    Syntax) TjT* 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0128  Tc 0.0172  Tw (void            ) Tj72 0  TD -0.0064  Tc 0.0364  Tw (SpuNGetVoiceAttr \( int voiceNum, SpuVoiceAttr *attr \)) Tj-144 -11.76  TD -0.0535  Tc 0.0835  Tw (    Argument) Tj0 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.0247  Tc 0.0547  Tw (voiceNum:     ) Tj72 0  TD 0.0098  Tc 0.0202  Tw (Voice Number \(0 - 23\)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0069  Tc 0.0231  Tw (attr:           ) Tj72 0  TD 0  Tc 0.0293  Tw (Voice Attribute) Tj-144 -11.76  TD -0.0015  Tc 0.0315  Tw (    Explanation) Tj0 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0  Tc 0.0306  Tw (This function obtains voice attribute.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.0026  Tc 0.0326  Tw (Set voice number to be obtained explicitly) Tj0 -11.76  TD -0.0155  Tc 0.0455  Tw (into voiceNum.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0031  Tc 0.0269  Tw (All attributes except "mask" will be returned for "attr") Tj0 -11.76  TD -0.0173  Tc 0.0473  Tw (structrue members.) TjT* 0.0019  Tc 0.0281  Tw (Refer SpuSetVoiceAttr for detail of each attribute.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj-36 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj-36 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0063  Tc 0.0237  Tw (SpuGetVoiceAttr\(\), SpuSetVoiceAttr\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.002  Tc 0.028  Tw (SpuNSetVoiceAttr\(\), SpuRSetVoiceAttr\(\), SpuSetKey\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD -0.0038  Tc 0.0338  Tw (SpuSetKeyOnWithAttr\(\), SpuGetVoiceVolume\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0  Tc 0.0299  Tw (SpuGetVoiceVolumeAttr\(\), SpuGetVoiceVolumeX\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0147  Tc 0.0153  Tw (SpuGetVoicePitch\(\), SpuGetVoiceNote\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0096  Tc 0.0204  Tw (SpuGetVoiceSampleNote\(\), SpuGetVoiceEnvelope\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0135  Tc 0.0165  Tw (SpuGetVoiceStartAddr\(\), SpuGetVoiceLoopStartAddr\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0081  Tc 0.0219  Tw (SpuGetVoiceAR\(\), SpuGetVoiceDR\(\), SpuGetVoiceSR\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.004  Tc 0.026  Tw (SpuGetVoiceRR\(\), SpuGetVoiceSL\(\), SpuGetVoiceARAttr\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0026  Tc 0.0274  Tw (SpuGetVoiceSRAttr\(\), SpuGetVoiceRRAttr\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0  Tc 0.0297  Tw (SpuGetVoiceADSR\(\), SpuGetVoiceADSRAttr\(\),) Tj-72 -11.76  TD 0  Tc 0.03  Tw (                ) Tj72 0  TD 0.0063  Tc 0  Tw (SpuGetVoiceEnvelopeAttr\(\)) Tj-72 -35.28  TD -0.0044  Tc (SpuGetVoiceVolume) Tj108 0  TD -0.0062  Tc 0.0362  Tw (Gets Voice Volume) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0098  Tc 0.0398  Tw (SpuGetVoiceVolume \( int voiceNum,) Tj36 -11.76  TD -0.032  Tc 0.062  Tw (    short *volumeL, short *volumeR \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0418  Tc 0  Tw (volumeL:) Tj108 0  TD -0.0198  Tc 0.0498  Tw (Volume \(Left\)) Tj-108 -11.76  TD -0.0365  Tc 0  Tw (volumeR:) Tj108 0  TD -0.0204  Tc 0.0504  Tw (Volume \(Right\)) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0048  Tc 0.0348  Tw (This function obtains Voice Volume, equivalent to) Tj0 -11.76  TD 0.0106  Tc 0.0194  Tw (the process to obtain) Tj82.44 0  TD -0.0112  Tc 0.0412  Tw ( the value for SpuVoiceAttr member,) Tj-82.44 -11.76  TD -0.0177  Tc 0.0477  Tw (volume using SpuGetVoiceAttr function.) Tj0 -11.76  TD -0.0111  Tc 0.0411  Tw (The value obtained is valid only when the Volume Mode is) TjT* 0.0114  Tc 0.0186  Tw (set to "Direct Mode".  For other Volume Mode, the value is) TjT* -0.008  Tc 0  Tw (undefined.) TjT* 0.0076  Tc 0.0224  Tw (When the Volume Mode is not "Direct Mode" or both Volume and) TjETendstream
endobj
118 0 obj
5496
endobj
116 0 obj
<<
/Type /Page
/Parent 101 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 117 0 R
>>
endobj
121 0 obj
<<
/Length 122 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.004  Tc 0.034  Tw (Volume Mode need to be obtained at the same time, use) Tj0 -11.76  TD -0.006  Tc 0  Tw (SpuGetVoiceVolumeAttr.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD -0.0032  Tc 0  Tw (SpuGetVoiceVolumeAttr\(\)) Tj-72 -35.28  TD -0.0077  Tc (SpuGetVoiceVolumeAttr) Tj108 0  TD -0.0042  Tc 0.0342  Tw (Gets Voice Volume/Volume Mode) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0054  Tc 0.0354  Tw (SpuGetVoiceVolumeAttr \() Tj108 0  TD -0.0218  Tc 0.0518  Tw (int voiceNum,) Tj-36 -11.76  TD -0.0325  Tc 0.0625  Tw (short *volumeL,  short *volumeR,) Tj0 -11.76  TD -0.0036  Tc 0.0336  Tw (short *volModeL, short *volModeR \)) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0418  Tc 0  Tw (volumeL:) Tj108 0  TD -0.0198  Tc 0.0498  Tw (Volume \(Left\)) Tj-108 -11.76  TD -0.0365  Tc 0  Tw (volumeR:) Tj108 0  TD -0.0204  Tc 0.0504  Tw (Volume \(Right\)) Tj-108 -11.76  TD 0.0067  Tc 0  Tw (volModeL:) Tj72 0  TD -0.0047  Tc 0.0347  Tw (VolumeMode \(Left\)) Tj-72 -11.76  TD 0.0114  Tc 0  Tw (volModeR:) Tj72 0  TD -0.006  Tc 0.036  Tw (VolumeMode \(Right\)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0043  Tc 0.0343  Tw (This function obtains Voice Volume/ Volume Mode,) Tj0 -11.76  TD 0.0037  Tc 0.0263  Tw (equivalent to the process to ) Tj111.72 0  TD -0.0034  Tc 0.0334  Tw (obtain the value for) Tj-111.72 -11.76  TD -0.0214  Tc 0.0514  Tw (SpuVoiceAttr members, volume and volumed using) Tj0 -11.76  TD -0.0065  Tc 0.0365  Tw (SpuGetVoiceAttr function.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.007  Tc 0  Tw (SpuGetVoiceAttr\(\),) Tj108 0  TD 0.0071  Tc (SpuNGetVoiceAttr\(\),) Tj-108 -11.76  TD 0  Tc (SpuGetVoiceVolume\(\)) Tj-72 -35.28  TD -0.0037  Tc (SpuGetVoiceVolumeX) Tj108 0  TD -0.0073  Tc 0.0373  Tw (Gets Current Voice Volume) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0092  Tc 0.0392  Tw (SpuGetVoiceVolumeX \( int voiceNum,) Tj36 -11.76  TD -0.0293  Tc 0.0593  Tw (     short *volumeXL, short *volumeXR \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0362  Tc 0  Tw (volumeXL:) Tj72 0  TD -0.0097  Tc (Current) Tj30.36 0  TD -0.0198  Tc 0.0498  Tw ( Volume \(Left\)) Tj-102.36 -11.76  TD -0.0315  Tc 0  Tw (volumeXR:) Tj72 0  TD -0.0167  Tc 0.0467  Tw (Current Volume \(Right\)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0053  Tc 0.0353  Tw (This functions obtains current Voice Volume.) Tj0 -11.76  TD -0.0048  Tc 0.0348  Tw (This function obtains Voice Volume, equivalent to) TjT* -0.003  Tc 0.033  Tw (the process to obtain the value for SpuVoiceAttr member,) TjT* -0.0189  Tc 0.0489  Tw (volumex using SpuGetVoiceAttr function.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD -0.0008  Tc 0.0308  Tw (SpuGetVoiceVolume\(\), SpuGetVoiceVolumeAttr\(\)) TjETendstream
endobj
122 0 obj
4348
endobj
119 0 obj
<<
/Type /Page
/Parent 120 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 121 0 R
>>
endobj
124 0 obj
<<
/Length 125 0 R
>>
stream
BT90 698.88  TD0 0 0 rg /F0 9.96  Tf0.0086  Tc 0  Tw (SpuGetVoicePitch) Tj108 0  TD 0.0031  Tc 0.0269  Tw (Gets Interval \(Pitch Specification\)) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0028  Tc 0.0328  Tw (SpuGetVoicePitch \( int voiceNum,) Tj72 -11.76  TD -0.0171  Tc 0.0471  Tw (   unsigned short *pitch \)) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0015  Tc 0  Tw (pitch:) Tj72 0  TD 0.0041  Tc 0.0259  Tw (Interval \(Pitch Specification\)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD 0.0023  Tc 0.0277  Tw (This function obtains Voice Interval \(Pitch Specification\),) Tj0 -11.76  TD -0.0037  Tc 0.0337  Tw (equivalent to thehe process to obtain the value for SpuVoiceAttr member,) TjT* -0.0112  Tc 0.0412  Tw (pitch using SpuGetVoiceAttr function.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0064  Tc 0.0236  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\)) Tj-72 -35.28  TD 0.0116  Tc 0  Tw (SpuGetVoiceNote) Tj144 0  TD 0.0043  Tc 0.0257  Tw (Gets Interval \(Note Specification\)) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0016  Tc 0.0316  Tw (SpuGetVoiceNote \( int voiceNum,) Tj72 -11.76  TD -0.0175  Tc 0.0475  Tw (  unsigned short *note \)) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD 0  Tc 0  Tw (note:) Tj72 0  TD 0.0056  Tc 0.0244  Tw (Interval \(Note Specification\)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD 0.003  Tc 0.027  Tw (This function obtains Voice Interval \(Note Specification\),) Tj0 -11.76  TD 0  Tc 0.0296  Tw (equivalent to the process to obtain the value for SpuVoiceAttr) TjT* -0.0145  Tc 0.0445  Tw (member, note using SpuGetVoiceAttr function.) TjT* 0.0172  Tc 0.0128  Tw (Thus pr) Tj30.84 0  TD 0.0136  Tc 0.0164  Tw (ior to call SpuSetVoiceNote,) Tj-30.84 -11.76  TD 0.0149  Tc 0.0151  Tw (SpuSetVoiceAttr  SPU_VOICE_SAMPLE_NOTE  or) Tj0 -11.76  TD -0.0143  Tc 0.0443  Tw (the waveform data sample note feature for voice must be set.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0.006  Tc 0.024  Tw (SpuSetVoiceSampleNote\(\), SpuGetVoiceSampleNote\(\)) Tj-72 -35.28  TD 0.0025  Tc 0  Tw (SpuGetVoiceSampleNote) Tj108 0  TD -0.0051  Tc 0.0351  Tw (Gets Waveform Data Sample Note) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0048  Tc 0.0348  Tw (SpuGetVoiceSampleNote \( int voiceNum,) Tj108 -11.76  TD -0.016  Tc 0.046  Tw (unsigned short *sampleNote \)) Tj-216 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (  Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0062  Tc 0  Tw (sampleNote:) Tj72 0  TD -0.0053  Tc 0.0353  Tw (  Waveform Data Sample Note) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0131  Tc 0.0431  Tw (This function obtains waveform data sample note,) Tj0 -11.76  TD 0  Tc 0.0296  Tw (equivalent to the process to obtain the value for SpuVoiceAttr) TjT* -0.014  Tc 0.044  Tw (member, sample_note using SpuGetVoiceAttr function.) TjETendstream
endobj
125 0 obj
4475
endobj
123 0 obj
<<
/Type /Page
/Parent 120 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 124 0 R
>>
endobj
127 0 obj
<<
/Length 128 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0.0153  Tc 0  Tw (SpuGetVoiceNote\(\)) Tj-72 -35.28  TD 0.0082  Tc (SpuGetVoiceEnvelope) Tj144 0  TD -0.002  Tc 0.032  Tw (Gets Current Envelope Value) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0084  Tc 0.0384  Tw (SpuGetVoiceEnvelope \( int voiceNum, short *envx \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0342  Tc 0  Tw (envx:) Tj72 0  TD -0.0016  Tc 0.0316  Tw (Current Envelope Value) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0  Tc 0.0303  Tw (This function obtains the current Voice Envelope Value,) Tj0 -11.76  TD 0  Tc 0.0296  Tw (equivalent to the process to obtain the value for SpuVoiceAttr) TjT* -0.0151  Tc 0.0451  Tw (envx, using SpuGetVoiceAttr function.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0064  Tc 0.0236  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\)) Tj-72 -35.28  TD 0.0087  Tc 0  Tw (SpuGetVoiceStartAddr) Tj108 0  TD -0.0028  Tc 0.0328  Tw (Gets Start Address of Waveform Data Sound) Tj179.88 0  TD -0.0126  Tc 0.0426  Tw ( Buffer) Tj-287.88 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0013  Tc 0.0313  Tw (SpuGetVoiceStartAddr \( int voiceNum,) Tj72 -11.76  TD -0.0152  Tc 0.0452  Tw (       unsigned long *startAddr \)) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD 0.0052  Tc 0  Tw (startAddr:) Tj72 0  TD -0.0019  Tc 0.0319  Tw (Waveform Data Start Address) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.003  Tc 0.033  Tw (This function obtains start address of Waveform Data in) Tj0 -11.76  TD -0  Tc 0.0304  Tw (the Sound Buffer, equivalent to the process to obtain the) TjT* -0.0062  Tc 0.0362  Tw (value for SpuVoiceAttr member, addr using SpuGetVoiceAttr) TjT* -0.0185  Tc 0  Tw (function.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0089  Tc 0  Tw (N) Tj7.2 0  TD 0.0059  Tc (one) Tj-79.2 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0.0108  Tc 0  Tw (SpuGetTransferStartAddr\(\)) Tj-72 -35.28  TD 0.0112  Tc (SpuGetVoiceLoopStartAddr) Tj144 0  TD -0.004  Tc 0.034  Tw (Gets loop start address of waveform data sound buffer) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD 0.0013  Tc 0.0287  Tw (SpuGetVoiceLoopStartAddr \( int voiceNum,) Tj72 -11.76  TD -0.006  Tc 0.036  Tw (   unsigned long *loopStartAddr \)) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (     Voice number \(0 - 23\)) Tj-72 -11.76  TD 0.0171  Tc 0  Tw (loopStartAddr:) Tj72 0  TD 0.0146  Tc 0.0154  Tw (     Loop start address) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD 0.0066  Tc 0.0234  Tw (This function obtains loop start addres) Tj153.36 0  TD -0.0251  Tc 0.0551  Tw (s of waveform data in the) TjETendstream
endobj
128 0 obj
4467
endobj
126 0 obj
<<
/Type /Page
/Parent 120 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 127 0 R
>>
endobj
130 0 obj
<<
/Length 131 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0013  Tc 0.0313  Tw (sound buffer, equivalent to the process to obtain the value for) Tj0 -11.76  TD 0.0011  Tc 0.0289  Tw (SpuVoiceAttr loop_addr, using SpuGetVoiceAttr function.) Tj-72 -11.76  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0.0108  Tc 0  Tw (SpuGetTransferStartAddr\(\)) Tj-72 -35.28  TD -0.0045  Tc (SpuGetVoiceAR) Tj108 0  TD -0.0171  Tc 0.0471  Tw (Obtains ADSR Attack Rate) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.018  Tc 0.048  Tw (SpuGetVoiceAR \( int voiceNum, unsigned short *AR \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0034  Tc 0.0266  Tw (Voice number \(0 - 23) Tj85.92 0  TD 0.0433  Tc 0  Tw (\)) Tj-157.92 -11.76  TD -0.0544  Tc (AR:) Tj72 0  TD -0.0238  Tc 0.0538  Tw (ADSR Attack Rate) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0107  Tc 0.0407  Tw (This function obtains ADSR Attack Rate used in voice.) Tj0 -11.76  TD -0.0048  Tc 0.0348  Tw (This function obtains Voice Volume, equivalent to) TjT* -0.003  Tc 0.033  Tw (the process to obtain the value for SpuVoiceAttr member,) TjT* -0.0103  Tc 0.0403  Tw (ar using SpuGetVoiceAttr function.) TjT* -0.0107  Tc 0.0407  Tw (The value obtained is valid only when ADSR Attack Rate Mode is set to) TjT* 0.0009  Tc 0.0291  Tw (SPU_VOICE_LINEARIncN \(Linear Increase\).  For other ADSR Attack) Tj-36 -11.76  TD 0  Tc 0.03  Tw ( ) Tj36 0  TD -0.0043  Tc 0.0343  Tw (Rate Mode the value is undefined.) Tj0 -11.76  TD -0.0129  Tc 0.0429  Tw (When both ADSR Attack Rate Volume and ADSR Attack Rate Mode) TjT* 0.0144  Tc 0.0156  Tw (need to) Tj29.16 0  TD -0.0081  Tc 0.0381  Tw ( be obtained at the same time, use SpuGetVoiceARAttr.) Tj-101.16 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD -0.003  Tc 0  Tw (SpuGetVoiceARAttr\(\)) Tj-72 -35.28  TD 0.0047  Tc (SpuGetVoiceDR) Tj108 0  TD -0.0185  Tc 0.0485  Tw (Gets ADSR Decay Rate) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0124  Tc 0.0424  Tw (SpuGetVoiceDR \( int voiceNum, unsigned short *DR \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0144  Tc 0  Tw (DR:) Tj72 0  TD -0.0229  Tc 0.0529  Tw (ADSR Decay Rate) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0102  Tc 0.0402  Tw (This function obtains ADSR Decay Rate used in voice,) Tj0 -11.76  TD 0.0389  Tc 0  Tw (eq) Tj9.48 0  TD -0.0011  Tc 0.0311  Tw (uivalent to the process to obtain the value for SpuVoiceAttr) Tj-9.48 -11.76  TD -0.0298  Tc 0.0598  Tw (member, ) Tj72 0  TD -0.0089  Tc 0.0389  Tw (dr using SpuGetVoiceAttr function.) Tj-108 -23.52  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0064  Tc 0.0236  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\)) Tj-72 -35.28  TD 0.0026  Tc 0  Tw (SpuGetVoiceSR) Tj108 0  TD -0.0194  Tc 0.0494  Tw (Gets ADSR Sustain Rate) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) TjETendstream
endobj
131 0 obj
4368
endobj
129 0 obj
<<
/Type /Page
/Parent 120 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 130 0 R
>>
endobj
133 0 obj
<<
/Length 134 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf0.0128  Tc 0  Tw (void) Tj36 0  TD -0.0136  Tc 0.0436  Tw (SpuGetVoiceSR \( int voiceNum, unsigned short *SR \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0233  Tc 0  Tw (SR:) Tj72 0  TD -0.0235  Tc 0.0535  Tw (ADSR Sustain Rate) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0144  Tc 0.0444  Tw (This function obtains ADSR Su) Tj126.48 0  TD -0.0057  Tc 0.0357  Tw (stain Rate in voice equivalent to,) Tj-126.48 -11.76  TD 0  Tc 0.0296  Tw (equivalent to the process to obtain the value for SpuVoiceAttr) Tj0 -11.76  TD -0.0298  Tc 0.0598  Tw (member, ) Tj72 0  TD -0.012  Tc 0.042  Tw (sr using SpuGetVoiceAttr function. ) Tj-144 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0123  Tc 0.0423  Tw (The value obtained is valid only when ADSR Sustain Rate Mode is) Tj0 -11.76  TD 0.0063  Tc 0.0237  Tw (set to SPU_VOICE_LINEARDecN \(Linear Decrease mode\) .) TjT* -0.006  Tc 0.036  Tw (For other ADSR Sustain Rate Mode, the value is undefined.) TjT* -0.0201  Tc 0.0501  Tw (If you want to obtain both ADSR Sustain Rate and ADSR Sustain) TjT* -0.0129  Tc 0.0429  Tw (Rate mode at the same time, use SpuGetVoiceSRAttr.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0.0019  Tc 0  Tw (SpuGetVoiceSRAttr\(\)) Tj-72 -35.28  TD 0  Tc (SpuGetVoiceRR) Tj108 0  TD -0.0112  Tc 0.0412  Tw (Gets ADSR Release Rate) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0148  Tc 0.0448  Tw (SpuGetVoiceRR \( int voiceNum, unsigned short *RR \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0318  Tc 0  Tw (RR:) Tj72 0  TD -0.013  Tc 0.043  Tw (ADSR Release Rate) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0069  Tc 0.0369  Tw (This function obtains ADSR Release Rate in voice equivalent to,) Tj0 -11.76  TD 0  Tc 0.0296  Tw (equivalent to the process to obtain the value for SpuVoiceAttr) TjT* -0.0298  Tc 0.0598  Tw (member, ) Tj72 0  TD -0.0081  Tc 0.0381  Tw (rr using SpuGetVoiceAt) Tj96.72 0  TD -0.012  Tc 0.042  Tw (tr function. ) Tj-240.72 -11.76  TD 0  Tc 0.03  Tw ( ) Tj72 0  TD -0.0093  Tc 0.0393  Tw (The value obtained is valid only when ADSR Release Rate Mode is) Tj0 -11.76  TD 0.0063  Tc 0.0237  Tw (set to SPU_VOICE_LINEARDecN \(Linear Decrease mode\) .) TjT* -0.0028  Tc 0.0328  Tw (For other ADSR Release Rate Mode, the value is undefined.) TjT* -0.0138  Tc 0.0438  Tw (If you want to obtain both ADSR Release Rate and ADSR Release) TjT* -0.0135  Tc 0.0435  Tw (Rate mode at the same time, use SpuGetVoiceRRAttr.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0  Tc 0  Tw (SpuGetVoiceRRAttr\(\)) Tj-72 -35.28  TD -0  Tc (SpuGetVoiceSL) Tj108 0  TD -0.0236  Tc 0.0536  Tw (Gets ADSR Sustain Level) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0156  Tc 0.0456  Tw (SpuGetVoiceSL \( int voiceNum, unsigned short *SL \)) Tj-108 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0374  Tc 0  Tw (SL:) Tj72 0  TD -0.0284  Tc 0.0584  Tw (ADSR Sustain Level) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0122  Tc 0.0422  Tw (This function obtains ADSR Sustain Level. equivalent to) Tj0 -11.76  TD 0.0016  Tc 0.0284  Tw (the process to obtain the value for SpuVoiceAttr ) Tj216 0  TD -0.0298  Tc 0  Tw (member,) TjETendstream
endobj
134 0 obj
4765
endobj
132 0 obj
<<
/Type /Page
/Parent 120 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 133 0 R
>>
endobj
136 0 obj
<<
/Length 137 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0137  Tc 0.0437  Tw (sl using SpuGetVoiceAttr function.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0064  Tc 0.0236  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\)) Tj-72 -35.28  TD -0.0085  Tc 0  Tw (SpuGetVoiceARAttr) Tj108 0  TD -0.0245  Tc 0.0545  Tw (ADSR Attack Rate / Attack R) Tj119.4 0  TD 0.0117  Tc 0.0183  Tw (ate Mode\202\314\216\346\223\276) Tj-227.4 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj0 -11.76  TD -0.0121  Tc 0.0421  Tw (SpuGetVoiceARAttr \( int voiceNum,) Tj72 -11.76  TD -0.0318  Tc 0.0618  Tw (    unsigned short *AR, long *ARmode \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0544  Tc 0  Tw (AR:) Tj72 0  TD -0.0238  Tc 0.0538  Tw (ADSR Attack Rate) Tj-72 -11.76  TD -0.0306  Tc 0  Tw (ARmode:) Tj108 0  TD -0.0094  Tc 0.0394  Tw (ADSR Attack Rate Mode) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0122  Tc 0.0422  Tw (This function obtains ADSR Attack Rate / ADSR Attack Rate Mode) Tj0 -11.76  TD -0.0024  Tc 0.0324  Tw (used in voice,) TjT* 0  Tc 0.0296  Tw (equivalent to the process to obtain the value for SpuVoiceAttr) Tj-36 -11.76  TD 0  Tc 0.03  Tw ( ) Tj36 0  TD -0.0304  Tc 0  Tw (members,) Tj72 0  TD -0.0048  Tc 0.0348  Tw (ar and a_mode using SpuGetVoiceA) Tj146.04 0  TD -0.0118  Tc 0.0418  Tw (ttr function.) Tj-290.04 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0.0018  Tc 0  Tw (SpuGetVoiceAR\(\)) Tj-72 -35.28  TD -0.003  Tc (SpuGetVoiceSRAttr) Tj144 0  TD -0.0115  Tc 0.0415  Tw (Gets ADSR Sustain Rate/Sustain Rate Mode) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj0 -11.76  TD -0.009  Tc 0.039  Tw (SpuGetVoiceSRAttr \( int voiceNum,) Tj72 -11.76  TD -0.0253  Tc 0.0553  Tw (    unsigned short *SR, long *SRmode \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0233  Tc 0  Tw (SR:) Tj72 0  TD -0.0235  Tc 0.0535  Tw (ADSR Sustain Rate) Tj-72 -11.76  TD -0.0173  Tc 0  Tw (SRmode:) Tj108 0  TD -0.0099  Tc 0.0399  Tw (ADSR Sustain Rate Mode) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0121  Tc 0.0421  Tw (This function) Tj53.28 0  TD -0.0125  Tc 0.0425  Tw ( obtains ADSR Sustain Rate / ADSR Sustain Rate Mode) Tj-53.28 -11.76  TD -0.0024  Tc 0.0324  Tw (used in voice,) Tj0 -11.76  TD 0  Tc 0.0296  Tw (equivalent to the process to obtain the value for SpuVoiceAttr) Tj-36 -11.76  TD 0  Tc 0.03  Tw ( ) Tj36 0  TD -0.0304  Tc 0  Tw (members,) Tj72 0  TD -0.0095  Tc 0.0395  Tw (sr and s_mode using SpuGetVoiceAttr function.) Tj-144 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0.0081  Tc 0  Tw (SpuGetVoiceSR\(\)) Tj-72 -35.28  TD -0.0045  Tc (SpuGetVoiceRRAttr) Tj108 0  TD -0.0026  Tc 0.0326  Tw (Obtains ADSR Release Rate/Release Rate Mode) TjETendstream
endobj
137 0 obj
4214
endobj
135 0 obj
<<
/Type /Page
/Parent 120 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 136 0 R
>>
endobj
140 0 obj
<<
/Length 141 0 R
>>
stream
BT90 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj0 -11.76  TD -0.0098  Tc 0.0398  Tw (SpuGetVoiceRRAttr \( int voiceNum,) Tj72 -11.76  TD 0  Tc 0.03  Tw (    ) Tj10.08 0  TD -0.0271  Tc 0.0571  Tw (unsigned short *RR, long *RRmode \)) Tj-154.08 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0318  Tc 0  Tw (RR:) Tj72 0  TD -0.013  Tc 0.043  Tw (ADSR Release Rate) Tj-72 -11.76  TD -0.0209  Tc 0  Tw (RRmode:) Tj108 0  TD -0.0017  Tc 0.0317  Tw (ADSR Release Rate Mode) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0066  Tc 0.0366  Tw (This function obtains ADSR Release Rate / ADSR Release Rate Mode) Tj0 -11.76  TD -0.0024  Tc 0.0324  Tw (used in voice,) TjT* 0  Tc 0.0296  Tw (equivalent to the process to obtain the value for SpuVoiceAttr) Tj-36 -11.76  TD 0  Tc 0.03  Tw ( ) Tj36 0  TD -0.0304  Tc 0  Tw (members,) Tj72 0  TD -0.0056  Tc 0.0356  Tw (rr and r_mode using SpuGetVoiceAttr function.) Tj-144 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0.0064  Tc 0  Tw (SpuGetVoiceRR\(\)) Tj-72 -35.28  TD -0.0045  Tc (SpuGetVoiceADSR) Tj144 0  TD -0.0225  Tc 0.0525  Tw (Gets ADSR) Tj-144 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0102  Tc 0.0402  Tw (SpuGetVoiceADSR \( int voiceNum,) Tj36 -11.76  TD -0.0265  Tc 0.0565  Tw (  unsigned short *AR, unsigned short *DR,) Tj0 -11.76  TD -0.0253  Tc 0.0553  Tw (  unsigned short *SR, unsigned short *RR,) TjT* -0.0262  Tc 0.0562  Tw (  unsigned short *SL \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0544  Tc 0  Tw (AR:) Tj72 0  TD -0.0238  Tc 0.0538  Tw (ADSR Attack Rate) Tj-72 -11.76  TD -0.0144  Tc 0  Tw (DR:) Tj72 0  TD -0.0229  Tc 0.0529  Tw (ADSR Decay Rate) Tj-72 -11.76  TD -0.0233  Tc 0  Tw (SR:) Tj72 0  TD -0.0235  Tc 0.0535  Tw (ADSR Sustain Rate) Tj-72 -11.76  TD -0.0318  Tc 0  Tw (RR:) Tj72 0  TD -0.013  Tc 0.043  Tw (ADSR Release Rate) Tj-72 -11.76  TD -0.0374  Tc 0  Tw (SL:) Tj72 0  TD -0.0284  Tc 0.0584  Tw (ADSR Sustain Level) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0091  Tc 0.0391  Tw (This function obtains each ADSR attribute used in th) Tj211.2 0  TD 0.0106  Tc 0.0194  Tw (e voice,) Tj-211.2 -11.76  TD -0  Tc 0.0302  Tw (equivalent to the process to obtain the values for SpuVoiceAttr) Tj-36 -11.76  TD 0  Tc 0.03  Tw ( ) Tj36 0  TD -0.005  Tc 0.035  Tw (members, ar, dr, sr, rr, and sl using SpuGetVoiceAttr function.) Tj0 -35.28  TD -0.0111  Tc 0.0411  Tw (The value obtained are valid only when the Attack, Sustain, and) Tj0 -11.76  TD -0.0046  Tc 0.0346  Tw (Release Rate are set to the mode as below;) TjT* -0.0749  Tc 0  Tw (---------------------+-----------------------------------) TjT* -0  Tc 0.03  Tw (Attack Rate Mode | SPU_VOICE_LINEARIncN \(Linear Increase\)) TjT* 0.0013  Tc 0.0287  Tw (Sustain Rate Mode | SPU_VOICE_LINEARDecN \(Linear Decrease\)) TjT* 0.0073  Tc 0.0227  Tw (Release_Rate_Mode | SPU_VOICE_LINEARDecN_\(Linear Decrease\)) TjT* -0.0749  Tc 0  Tw (---------------------+-----------------------------------) TjT* 0.0017  Tc 0.0283  Tw (For other mode, the obtained values are undefined.) TjT* -0.0182  Tc 0.0482  Tw (If you want to obtain multiple Rate Mode at the same time, use) TjT* -0.0075  Tc 0  Tw (SpuSetVoiceADSRAttr.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) TjETendstream
endobj
141 0 obj
4405
endobj
138 0 obj
<<
/Type /Page
/Parent 139 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 140 0 R
>>
endobj
143 0 obj
<<
/Length 144 0 R
>>
stream
BT126 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0.0081  Tc 0.0219  Tw (SpuGetVoiceAR\(\), SpuGetVoiceDR\(\),SpuGetVoiceSR\(\),) TjT* 0.0066  Tc 0.0234  Tw (SpuGetVoiceRR\(\), SpuGetVoiceSL\(\)) Tj-72 -35.28  TD -0.0081  Tc 0  Tw (SpuGetVoiceADSRAttr) Tj108 0  TD -0  Tc 0.0303  Tw (Gets ADSR and each Mode) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0116  Tc 0.0416  Tw (SpuGetVoiceADSRAttr \( int voiceNum,) Tj36 -11.76  TD -0.03  Tc 0.06  Tw (      unsigned short *AR,) Tj0 -11.76  TD -0.0229  Tc 0.0529  Tw (      unsigned short *DR,) TjT* -0.0245  Tc 0.0545  Tw (      unsigned short *SR,) TjT* -0.026  Tc 0.056  Tw (      unsigned short *RR,) TjT* -0.027  Tc 0.057  Tw (      unsigned short *SL,) TjT* -0.0354  Tc 0.0654  Tw (      long *ARmode,) TjT* -0.0276  Tc 0.0576  Tw (      long *SRmode,) TjT* -0.0286  Tc 0.0586  Tw (      long *RRmode \)) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0544  Tc 0  Tw (AR:) Tj72 0  TD -0.0238  Tc 0.0538  Tw (ADSR Attack Rate) Tj-72 -11.76  TD -0.0144  Tc 0  Tw (DR:) Tj72 0  TD -0.0229  Tc 0.0529  Tw (ADSR Decay Rate) Tj-72 -11.76  TD -0.0233  Tc 0  Tw (SR:) Tj72 0  TD -0.0235  Tc 0.0535  Tw (ADSR Sustain Rate) Tj-72 -11.76  TD -0.0318  Tc 0  Tw (RR:) Tj72 0  TD -0.013  Tc 0.043  Tw (ADSR Release Rate) Tj-72 -11.76  TD -0.0374  Tc 0  Tw (SL:) Tj72 0  TD -0.0284  Tc 0.0584  Tw (ADSR Sustain Level) Tj-72 -11.76  TD -0.0306  Tc 0  Tw (ARmode:) Tj108 0  TD -0.0094  Tc 0.0394  Tw (ADSR Attack Rate Mode) Tj-108 -11.76  TD -0.0173  Tc 0  Tw (SRmode:) Tj108 0  TD -0.04  Tc (ADS) Tj19.8 0  TD -0.0043  Tc 0.0343  Tw (R Sustain Rate Mode) Tj-127.8 -11.76  TD -0.0209  Tc 0  Tw (RRmode:) Tj108 0  TD -0.0017  Tc 0.0317  Tw (ADSR Release Rate Mode) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0064  Tc 0.0364  Tw (This function obtains each ADSR attribute used in the voice,) Tj0 -11.76  TD -0  Tc 0.0302  Tw (equivalent to the process to obtain the values for SpuVoiceAttr) Tj-36 -11.76  TD 0  Tc 0.03  Tw ( ) Tj36 0  TD 0  Tc 0.0294  Tw (members, ar, dr, sr, rr, sl, a_mode, s_mode, and r_mode using) Tj0 -11.76  TD -0.0065  Tc 0.0365  Tw (SpuGetVoiceAttr function.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0057  Tc 0.0243  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\), SpuGetVoiceADSR\(\),) Tj0 -11.76  TD 0.0081  Tc 0.0219  Tw (SpuGetVoiceAR\(\), SpuGetVoiceDR\(\), SpuGetVoiceSR\(\),) TjT* 0.0066  Tc 0.0234  Tw (SpuGetVoiceRR\(\), SpuGetVoiceSL\(\), S) Tj161.28 0  TD -0  Tc 0  Tw (puGetVoiceARAttr\(\),) Tj-161.28 -11.76  TD 0.0019  Tc 0.0281  Tw (SpuGetVoiceSRAttr\(\), SpuGetVoiceRRAttr\(\)) Tj-72 -35.28  TD 0.0031  Tc 0  Tw (SpuGetVoiceEnvelopeAttr) Tj108 0  TD -0.0044  Tc 0.0344  Tw (Gets current Voice Envelope value and Key ON/OFF status.) Tj-108 -11.76  TD -0.0767  Tc 0  Tw (----------------------------------------------------------------) Tj0 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0515  Tc 0  Tw (Syntax) Tj36 -11.76  TD 0.0128  Tc (void) Tj36 0  TD -0.0041  Tc 0.0341  Tw (SpuGetVoiceEnvelopeAttr \( int voiceNum,) Tj72 -11.76  TD -0.0316  Tc 0.0616  Tw (  long *keyStat, short *envx \)) Tj-180 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0535  Tc 0  Tw (Argument) Tj36 -11.76  TD -0.0247  Tc (voiceNum:) Tj72 0  TD 0.0057  Tc 0.0243  Tw (Voice number \(0 - 23\)) Tj-72 -11.76  TD -0.0311  Tc 0  Tw (keyStat:) Tj36 0  TD -0.0038  Tc 0.0338  Tw (Status of Voice Envelope and Key ON/OFF) Tj-36 -11.76  TD -0.0342  Tc 0  Tw (envx:) Tj72 0  TD -0.005  Tc 0.035  Tw (Current Envelope value) Tj-144 -11.76  TD 0  Tc 0.03  Tw (      ) Tj36 0  TD -0.0015  Tc 0  Tw (Explanation) Tj36 -11.76  TD -0.0056  Tc 0.0356  Tw (This function obtains the current V) Tj139.68 0  TD 0.0036  Tc 0.0264  Tw (oice Envelope value and) Tj-139.68 -11.76  TD -0.003  Tc 0.033  Tw (Voice Key ON/OFF and Envelope status.) TjETendstream
endobj
144 0 obj
4588
endobj
142 0 obj
<<
/Type /Page
/Parent 139 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 143 0 R
>>
endobj
146 0 obj
<<
/Length 147 0 R
>>
stream
BT162 710.64  TD0 0 0 rg /F0 9.96  Tf-0.0033  Tc 0.0333  Tw (Refer SpuGetVoiceAttr for values that can be specified in) Tj0 -11.76  TD -0.0123  Tc 0.0423  Tw (keystat, the Key ON/OFF and Envelope status.) Tj-72 -23.52  TD 0  Tc 0.03  Tw (    ) Tj36 0  TD -0.0123  Tc 0.0423  Tw (Return Value) Tj36 -11.76  TD 0.0067  Tc 0  Tw (None) Tj-72 -11.76  TD 0  Tc 0.03  Tw (  ) Tj36 0  TD -0.0057  Tc 0.0357  Tw (Related Function) Tj36 -11.76  TD 0.0071  Tc 0.0229  Tw (SpuGetVoiceAttr\(\), SpuNGetVoiceAttr\(\),) Tj0 -11.76  TD 0.0062  Tc 0.0238  Tw (SpuGetVoiceEnvelope\(\), SpuSetKey\(\),) TjT* -0.0159  Tc 0.0459  Tw (SpuGetAllKeysStatus\(\), SpuRGetAllKeysStatus\(\)) Tj-72 -35.28  TD 0.0178  Tc 0.0122  Tw (Tap Library \(libtap\)) Tj0 -11.76  TD 0.0226  Tc 0  Tw (===============================================================) Tj0 -23.52  TD -0.0219  Tc 0.0519  Tw (Renamed Functions) Tj0 -11.76  TD 0.0116  Tc 0  Tw (~~~~~~~~~~~~~~~~~~~) TjT* -0.0112  Tc 0.0412  Tw (Note that following libtap functions were renamed to avoid) TjT* 0  Tc 0.0297  Tw (  duplicate definition errors at linkage from Release 3.5.) Tj0 -23.52  TD 0.0014  Tc 0.0286  Tw (        InitTAP         <-      InitPAD) Tj0 -11.76  TD 0.0079  Tc 0.0221  Tw (        StartTAP        <-      StartPAD) TjT* 0.0265  Tc 0.0035  Tw (        StopTAP         <-      StopTAP) TjETendstream
endobj
147 0 obj
1367
endobj
145 0 obj
<<
/Type /Page
/Parent 139 0 R
/Resources <<
/Font <<
/F0 6 0 R 
>>
/ProcSet 2 0 R
>>
/Contents 146 0 R
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /TrueType
/Name /F0
/BaseFont /TimesNewRoman
/Encoding /WinAnsiEncoding
>>
endobj
2 0 obj
[ /PDF /Text  ]
endobj
5 0 obj
<<
/Kids [4 0 R 9 0 R 12 0 R 15 0 R 18 0 R 21 0 R ]
/Count 6
/Type /Pages
/Parent 148 0 R
>>
endobj
25 0 obj
<<
/Kids [24 0 R 28 0 R 31 0 R 34 0 R 37 0 R 40 0 R ]
/Count 6
/Type /Pages
/Parent 148 0 R
>>
endobj
44 0 obj
<<
/Kids [43 0 R 47 0 R 50 0 R 53 0 R 56 0 R 59 0 R ]
/Count 6
/Type /Pages
/Parent 148 0 R
>>
endobj
63 0 obj
<<
/Kids [62 0 R 66 0 R 69 0 R 72 0 R 75 0 R 78 0 R ]
/Count 6
/Type /Pages
/Parent 148 0 R
>>
endobj
82 0 obj
<<
/Kids [81 0 R 85 0 R 88 0 R 91 0 R 94 0 R 97 0 R ]
/Count 6
/Type /Pages
/Parent 148 0 R
>>
endobj
101 0 obj
<<
/Kids [100 0 R 104 0 R 107 0 R 110 0 R 113 0 R 116 0 R ]
/Count 6
/Type /Pages
/Parent 148 0 R
>>
endobj
120 0 obj
<<
/Kids [119 0 R 123 0 R 126 0 R 129 0 R 132 0 R 135 0 R ]
/Count 6
/Type /Pages
/Parent 149 0 R
>>
endobj
139 0 obj
<<
/Kids [138 0 R 142 0 R 145 0 R ]
/Count 3
/Type /Pages
/Parent 149 0 R
>>
endobj
148 0 obj
<<
/Kids [5 0 R 25 0 R 44 0 R 63 0 R 82 0 R 101 0 R ]
/Count 36
/Type /Pages
/Parent 150 0 R
>>
endobj
149 0 obj
<<
/Kids [120 0 R 139 0 R ]
/Count 9
/Type /Pages
/Parent 150 0 R
>>
endobj
150 0 obj
<<
/Kids [148 0 R 149 0 R ]
/Count 45
/Type /Pages
/MediaBox [ 0 0 612 792 ]
>>
endobj
1 0 obj
<<
/Creator (Microsoft Word )
/CreationDate (Tuesday, December 17, 1996 10:41:25 AM)
/Title (Change)
/Author (Sony Computer Entertainment America)
/Producer (Acrobat PDFWriter 3.0 for Windows)
/Keywords ()
/Subject ()
>>
endobj
3 0 obj
<<
/Pages 150 0 R
/Type /Catalog
/DefaultGray 151 0 R
/DefaultRGB  152 0 R
>>
endobj
151 0 obj
[/CalGray
<<
/WhitePoint [0.9643 1 0.8251 ]
/Gamma 1.9 
>>
]
endobj
152 0 obj
[/CalRGB
<<
/WhitePoint [0.9643 1 0.8251 ]
/Gamma [1.9 1.9 1.9 ]
/Matrix [0.511 0.2903 0.0273 0.3264 0.6499 0.1279 0.1268 0.0598 0.6699 ]
>>
]
endobj
xref
0 153
0000000000 65535 f
0000198339 00000 n
0000197039 00000 n
0000198586 00000 n
0000003675 00000 n
0000197073 00000 n
0000196916 00000 n
0000000021 00000 n
0000003652 00000 n
0000007072 00000 n
0000003806 00000 n
0000007048 00000 n
0000010627 00000 n
0000007204 00000 n
0000010603 00000 n
0000014749 00000 n
0000010760 00000 n
0000014725 00000 n
0000018601 00000 n
0000014882 00000 n
0000018577 00000 n
0000021679 00000 n
0000018734 00000 n
0000021655 00000 n
0000025111 00000 n
0000197189 00000 n
0000021812 00000 n
0000025087 00000 n
0000029042 00000 n
0000025245 00000 n
0000029018 00000 n
0000032790 00000 n
0000029176 00000 n
0000032766 00000 n
0000038421 00000 n
0000032924 00000 n
0000038397 00000 n
0000045724 00000 n
0000038555 00000 n
0000045700 00000 n
0000050687 00000 n
0000045858 00000 n
0000050663 00000 n
0000054171 00000 n
0000197308 00000 n
0000050821 00000 n
0000054147 00000 n
0000058074 00000 n
0000054305 00000 n
0000058050 00000 n
0000062026 00000 n
0000058208 00000 n
0000062002 00000 n
0000067021 00000 n
0000062160 00000 n
0000066997 00000 n
0000071414 00000 n
0000067155 00000 n
0000071390 00000 n
0000076633 00000 n
0000071548 00000 n
0000076609 00000 n
0000081303 00000 n
0000197427 00000 n
0000076767 00000 n
0000081279 00000 n
0000085450 00000 n
0000081437 00000 n
0000085426 00000 n
0000089603 00000 n
0000085584 00000 n
0000089579 00000 n
0000093997 00000 n
0000089737 00000 n
0000093973 00000 n
0000100073 00000 n
0000094131 00000 n
0000100049 00000 n
0000104343 00000 n
0000100207 00000 n
0000104319 00000 n
0000107735 00000 n
0000197546 00000 n
0000104477 00000 n
0000107711 00000 n
0000112058 00000 n
0000107869 00000 n
0000112034 00000 n
0000117152 00000 n
0000112192 00000 n
0000117128 00000 n
0000121531 00000 n
0000117286 00000 n
0000121507 00000 n
0000125910 00000 n
0000121665 00000 n
0000125886 00000 n
0000130208 00000 n
0000126044 00000 n
0000130184 00000 n
0000134619 00000 n
0000197665 00000 n
0000130342 00000 n
0000134594 00000 n
0000138910 00000 n
0000134756 00000 n
0000138885 00000 n
0000143372 00000 n
0000139047 00000 n
0000143347 00000 n
0000147630 00000 n
0000143509 00000 n
0000147605 00000 n
0000152036 00000 n
0000147767 00000 n
0000152011 00000 n
0000157757 00000 n
0000152173 00000 n
0000157732 00000 n
0000162330 00000 n
0000197791 00000 n
0000157894 00000 n
0000162305 00000 n
0000167030 00000 n
0000162467 00000 n
0000167005 00000 n
0000171722 00000 n
0000167167 00000 n
0000171697 00000 n
0000176315 00000 n
0000171859 00000 n
0000176290 00000 n
0000181305 00000 n
0000176452 00000 n
0000181280 00000 n
0000185744 00000 n
0000181442 00000 n
0000185719 00000 n
0000190374 00000 n
0000197917 00000 n
0000185881 00000 n
0000190349 00000 n
0000195187 00000 n
0000190511 00000 n
0000195162 00000 n
0000196779 00000 n
0000195324 00000 n
0000196754 00000 n
0000198019 00000 n
0000198140 00000 n
0000198234 00000 n
0000198687 00000 n
0000198773 00000 n
trailer
<<
/Size 153
/Root 3 0 R
/Info 1 0 R
/ID [<9ce42ac57585ddc1f47ff3ce2616fa6c><9ce42ac57585ddc1f47ff3ce2616fa6c>]
>>
startxref
198942
%%EOF
