$PSDocId: Document Release 1.0 for Runtime Library Release 3.6$

┌─────────────────────────────────────┐
│									　　│
│			　　ドットファイル構造				　　│
│									　　│
├─────────────────────────────────────┤
│			固定長データの連続体ファイル			　　│
└─────────────────────────────────────┘

◎ファイルの一般的構造

　１）【ファイル内容】
　　●文字形成情報のみデータファイル
　　＝　フォントデータFileは、その全てが文字形成に必要なデータであり、
　　　以下の様な情報は一切含まれていません。
	・ファイルヘッダー
	・JISコード
	・……その他の文字形成以外の情報
　　●データの“非”圧縮
　　＝　フォントデータFileには何等の圧縮処理も施されてはいません。

　２）【データ内容】
　　●固定長データの連続体
　　＝　各ドットサイズにおいて１文字のデータ長は固定であり、ファイルは
　　　その“固定長データの連続体”にすぎません。
　　　……ために、ファイルのサイズは該当サイズ“１文字データ長の字数分”と
　　　いうことになります。
	例）　24*24  JIS  1水全の場合
		●サイズ　24 * 24 ÷ 8 = 72バイト／１文字
		┌─────┬─────┬─‖─┬─────┐
		│     1    │     2    │　‖　│　　　　　│
		└─────┴─────┴─‖─┴─────┘
		｜　　　　　｜　　　　　　　　　　　　　　　｜
		 − 72ﾊﾞｲﾄ −　　　　　　　　　　　　　　　 ｜
		｜　　　　　　　　　　　　　　　　　　　　　｜
		 ─────────　213､480ﾊﾞｲﾄ　─────

　３）【ファイル単位とデータ数】
　　●基本セット
	……(1)JIS 系非漢字全
	　　(2)JIS 第１水準漢字全
	　　(3)JIS 第２水準漢字全
	　　(4)JIS 外、SCR 仕様縦書き全

　　＝　１つの書体に関して１つのサイズに注目した場合のセット内容は、
　　　以下のようになっています。
	(1)JIS 非漢字		： 524文字
	　　注）トップスペースを含む
	┌─────┬─────┬─‖─┬─────┐
	│     1    │     2    │　‖　│　　 524  │
	└─────┴─────┴─‖─┴─────┘
	(2)JIS 第１水準漢字	： 2､965文字
	┌─────┬─────┬─‖─┬─────┐
	│     1    │     2    │　‖　│　　2965　│
	└─────┴─────┴─‖─┴─────┘
	(3)JIS 第２水準漢字	： 3,388文字
	┌─────┬─────┬─‖─┬─────┐
	│     1    │     2    │　‖　│　　3388　│
	└─────┴─────┴─‖─┴─────┘
	(4)JIS 外、SCR 仕様縦書	： 55文字
	┌─────┬─────┬─‖─┬─────┐
	│     1    │     2    │　‖　│　　  55　│
	└─────┴─────┴─‖─┴─────┘

┌─────────────────────────────────────┐
│									　　│
│				データ構造				　　│
│									　　│
├─────────────────────────────────────┤
│		左上端開始・横スライス・下方進行のバイト展開		　　│
└─────────────────────────────────────┘

◎データの一般的構造

　１）【バイト展開】
　　●横方向は“バイトバウンダリー”
　　＝　フォントデータの展開の際、横方向についてはバイトバウンダリーの
　　　仕様があります。ために、「８で割り切れないコマ数のサイズ」の場合、
　　　この（コマ）数を越えるか最小限の８の倍数で横の１行は格納されており、
　　　右端の何ビット（何ドット）かに、ダミーデータ（ビット・オフ）を
　　　配しています。
　　●左上端開始、横スライス、下方進行
　　＝　１バイトに注目した時のその展開方法は、以下の様になっています。
	例） 24*24 (1〜72 バイト) の場合
		┌──┬──┬──┐		┌──┐
		│   1│   2│   3│		│   1│
		├──┼──┼──┤		├──┤
		│   4│   5│   6│		│   2│
		├──┼──┼──┤		├──┤
		＝＝＝＝＝＝＝＝＝＝		＝＝＝＝
		├──┼──┼──┤		├──┤
		│  67│  68│  69│		│  71│
		├──┼──┼──┤		├──┤
		│  70│  71│  72│		│  72│
		└──┴──┴──┘		└──┘
		　「バイトの展開」		(File上)

　２）【ビット展開】
　　●１ビットが１ドットに対応
　　＝　データの１ビットは、（文字形成の際の）１ドットに対応しています。
　　　各ビットの展開は、上位ビットの方から展開されます。

		 MSB
		┌─────────────┬───────‖
	     Bit│  7  6  5  4  3  2  1  0　│  7  6  5  4  ‖
		│…………………………………│…………………‖
		│　　　　０バイト目　　　　│　　　　　　　‖
		├─────────────┼───────‖
	　　　＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

　３）【実データ例……(8*8 の場合)】
　　例）Hex-3030,  16区16点　“旭”
	データ：40-47-F5-57-55-57-50-9F ( 8*8/8=8 バイト／１文字)

		40 : 0100-0000 --- □■□□□□□□
		47 : 0100-0111 --- □■□□□■■■
		F5 : 1111-0101 --- ■■■■□■□■
		57 : 0101-0111 --- □■□■□■■■
		55 : 0101-0101 --- □■□■□■□■
		57 : 0101-0111 --- □■□■□■■■
		50 : 0101-0000 --- □■□■□□□□
		9F : 1001-1111 --- ■□□■■■■■

