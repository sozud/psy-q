
95.10.18 yoshi


＊＊＊＊　none3.obj の追加  ＊＊＊＊

これまで、Exec()で起動される子プログラムの作成にあたっては、none2.objを
リンクする事が必要でした。今回新たに none3.obj をリリース致します。
none2.objとの相違点は、
「起動時に、（子プログラム側の）sbss,bss領域をクリアする」
です。詳しい動作については、以下「スタックポインタの任意設定法」をご覧下さい。



＊＊＊＊　「スタックポインタの任意設定法」　＊＊＊＊


これまで、スタックポインタ(SP)初期値の設定については、2mbyte.obj 等の
オブジェクトファイルをリンクして頂く事により、起動時のスタートアップ
ルーチンにて設定を行っていました。

（スタートアップルーチンの動作）

１。sbss, bss 領域をゼロクリアする。
２。SP初期値をセットする。
３。GP初期値をセットする。
４。bss領域のすぐ後ろのアドレスから、（SP初期値 - スタックサイズ）の
    アドレスまでを、ヒープ領域に設定(InitHeap())する。
    なお、スタックサイズは 0x8000 に固定されている。
５。main関数にジャンプする。


（各オブジェクトファイルをリンクした場合の動作の違い）

2mbyte.obj	メモリ2Mbyte動作用。SP初期値は 0x80200000
		上記１-５の動作を行う。

8mbyte.obj	メモリ8Mbyte動作用。SP初期値は 0x80800000
		上記１-５の動作を行う。

none2.obj	子プログラム作成用。
		（SP初期値は親プログラム中で設定する。）
		上記１-５の全ての動作を行わない（何もしない）。

none3.obj	子プログラム作成用。
		（SP初期値は親プログラム中で設定する。）
		上記１の動作のみ行う。


この度、libsn.libに含まれるグローバル変数を公開致します。
プログラム中で、以下の変数をextern宣言して初期値を設定する事により、
起動時のSP初期値及びスタックサイズが任意に設定できます。
従って、この設定を行っていれば 2mbyte.obj 及び 8mbyte.obj は不要です。


	_ramsize	RAM容量。デフォルト値 0x00800000
			SP初期値は以下の値になる。
			( _ramsize | 0x80000000 )

	_stacksize	スタックサイズ。デフォルト値 0x00008000



例を挙げます。

（例）
int _ramsize = 0x00200000;		/* SP初期値 0x80200000 */
int _stacksize = 0x00010000;		/* スタックサイズ 0x10000 */

main()
{
   :
   :


							以上

