* 関数詳細	
	
ResetCallback	全てのコールバックの初期化

	形式	int ResetCallback(void) 

	引数	なし

	解説	全てのシステムコールバック環境を初期化する。
		全てのコールバック関数を 0 （未登録）に設定し、割り込みコ
		ンテクストのスタックを確保したのち、割り込みを受け付ける環
		境を整える。

	返り値	なし
	
	備考	ResetCallback() はプログラムが起動後、全ての処理に先立ち
		呼ばれなければならない。

		ResetCallback() によって初期化された環境は 
		StopCallback() が呼ばれるまで有効になる。
		ResetCallback() を StopCallback() をはさまずに続けて呼び
		出しても問題はないが、２回目以降の呼び出しは無視される。
	
StopCallback	全てのコールバックを停止

	形式	int StopCallback(void) 
	
	引数	なし

	解説	全てのシステムコールバックを停止する。
		
	返り値	なし
	
	備考	プログラムを終了したり、他のプロセスへ制御を移す前には
		必ず StopCallback() を呼び出して、全ての割り込みを無効
		にする必要がある。
	

RestartCallback	停止されたコールバックを再開する

	形式	int RestartCallback(void) 
	
	引数	なし

	解説	停止されたコールバックを最後に停止した直前の状態へ復旧
		する。
		ResetCallback() と異なり、コールバック関数およびコール
		バックスタックは初期化されない。
	
	返り値	なし
	
	備考	RestartCallback() を実行する前は必ず ResetCallback() 
		が実行されていなくてはならない。
		RestartCallback() によって初期化された環境は StopCallback()
		が呼ばれるまで有効になる。
		RestartCallback() を StopCallback() をはさまずに続けて呼び
		出しても問題はないが、２回目以降の呼び出しは無視される。
		

CheckCallback	プログラムがコールバック内で実行されているかを判定

	形式	int CheckCallback(void) 

	引数	なし

	解説	プログラムがコールバックコンテキストで実行されているか、
		通常のコンテクストで実行されているがを判定する。

	返り値	0	通常のコンテクスト
		1	コールバックコンテクスト

	
PadInit		コントローラの初期化

	形式	void PadInit(int mode) 

	引数	mode:		コントローラタイプ

	解説	現在接続されている全てのコントローラを初期化する。
		modeは コントローラのタイプを指定。

	返り値	なし
	
	備考	サポートされているタイプは 2 （標準コントローラ）のみ。
		mode は現在意味をもたない。

PadStop		コントローラの停止

	形式	void PadStop(void)

	解説	現在接続されている全てのコントローラを停止する
		
	返り値	なし
	
	備考	プロセスを終了する際にはかならずこれを呼び出してコントロ
		ーラドライバを停止させる必要がある。

PadRead		コントローラからデータを読む

	形式	u_long PadRead(int id)
	
	引数	id:		コントローラID

	解説	idで示されるコントローラからデータを読み込む。
		id はコントローラ番号。

	返り値	獲得されたコントローラの値
	
	備考	接続されているコントローラの個数をこえる id を指定すると
		id をこえず id に最も近いコントローラ id を持つコントロ
		ーラのデータを返す。
	
SetVideoMode	現在のビデオ信号方式を宣言する				

	形式	long SetVideoMode(long mode_)
									
	引数	mode:	ビデオ信号方式のモード			
			MODE_NTSC: NTSC 方式のビデオ信号方式	
			MODE_PAL : PAL 方式のビデオ信号方式	
									
	解説	mode で示されるビデオ信号方式をライブラリ側に宣言する。	
		関連するライブラリは宣言されたビデオ信号方式の環境に即	
		した動作をするようになる。				
									
	返り値	以前に設定されていたビデオ信号方式のモード		
									
	備考	全てのライブラリの関数より先だって呼ぶこと。		
									
GetVideoMode	現在のビデオ信号方式を得る				

	形式	long GetVideoMode(void)
									
	引数	なし							
									
	解説	SetVideoMode で宣言された現在のビデオ信号方式を返す。	
									
	返り値	ビデオ信号方式のモード					
			MODE_NTSC: NTSC 方式のビデオ信号方式	
			MODE_PAL : PAL 方式のビデオ信号方式	
									
	備考	SetVideoMode() を呼ばなかった場合、そのマシンの如何に	
		関わらず MODE_NTSC を返す。				

VSync		垂直同期を待つ

	形式	int VSync(int mode)

	引数	mode	0: 垂直同期が発生するまでブロックする
	
			1: 前回 VSync() が呼ばれた時点からの経過時間を１水平
			   同期間隔を単位として返す
	
			n: (n>1) 前回 VSync() が呼ばれた時点から数えて n 回の
			   垂直同期が発生するまでブロックする
			   
			-n:(n>0) プログラムが起動してからの絶対時間を垂直同期
			   間隔を単位として返す。
			
	解説	垂直同期を待つ。

	返り値	mode>=0	前回 VSync() が呼ばれた時点からの経過時間
			（水平帰線単位）
		mode<0	プログラムが起動してからの経過時間
			（垂直帰線単位）

VSyncCallback	垂直同期コールバック関数を設定

	形式	int VSyncCallback(void (*f)()) 
	
	引数	func	コールバック関数

	解説	垂直帰線区間の開始時に関数 funcが呼び出される。
		func に 0 を指定した場合は、コールバックは発生しない。

	返り値	なし
	
	備考	func 内では以降の描画終了割り込みはマスクされる。従って
		funcは必要な処理を終了したらすみやかにリターンする必要が
		ある。

* 関数一覧

	
ResetCallback	全てのコールバックの初期化
StopCallback	全てのコールバックを停止
RestartCallback	停止されたコールバックを再開する
CheckCallback	プログラムがコールバック内で実行されているかを判定
PadInit		コントローラの初期化
PadStop		コントローラの停止
PadRead		コントローラからデータを読む
SetVideoMode	現在のビデオ信号方式を宣言する				
GetVideoMode	現在のビデオ信号方式を得る				
VSync		垂直同期を待つ
VSyncCallback	垂直同期コールバック関数を設定
