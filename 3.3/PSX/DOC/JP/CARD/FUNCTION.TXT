$PSDocId: Document Version 1.0 for Runtime Library Version 3.3$
メモリカードライブラリ

関数詳細

------------------------------------------------------------------------------
InitCARD	メモリカードBIOSの初期化

        形式    void InitCARD( val )
                long val;

        引数    val     0：コントローラとの併用なし  1：併用

        解説    メモリカードBIOSを初期化し停止状態とする。以降StartCARD()で
                BIOSを稼働状態にすると、_cardで始まる低レベルインタフェースが
                直接使用可能となる。
                メモリカードファイルシステムはこれらのインタフェースを内部で
                使用するので、_bu_init()の前にこの関数を実行する必要がある。
                コントローラには影響を与えない。

        返り値  なし

	備考	関連項目：_bu_init()

------------------------------------------------------------------------------
StartCARD	メモリカードBIOSの起動

        形式    void StartCARD( void )

        引数    なし

        解説    InitCARD()で初期化したメモリカードBIOSを稼働状態に移行する。
                コントローラには影響を与えない。

        返り値  なし

	備考	関連項目：InitCARD()、StopCARD()、_bu_init()

------------------------------------------------------------------------------
StopCARD	メモリカードBIOSの停止

        形式    void StopCARD( void )

        引数    なし

        解説    メモリカードBIOSを停止状態（InitCARD()実行直後と同じ状態）に
                移行する。
                コントローラには影響を与えない。

        返り値  なし

	備考	関連項目：InitCARD()、StartCARD()、_bu_init()

------------------------------------------------------------------------------
_bu_init	メモリカードファイルシステムの初期化

        形式    void _bu_init( void )

        引数    なし

        解説    メモリカードファイルシステムを初期化する。
                ファイルシステムドライバは当パッチモジュール組み込み時にカーネ
                ルに登録するが、初期化ルーチンは自動実行しない。この関数により
                明示的にファイルシステムを初期化する必要がある。

        返り値  なし

	備考	関連項目：InitCARD()、StartCARD()、_StopCARD()

------------------------------------------------------------------------------
_card_info	カードの状態を取得

	形式	long _card_info( chan )
		long chan;

	引数	chan	ポート番号＊１６＋カード番号
				ポート番号:	Ａポート→０  Ｂポート→１
				カード番号:	通常０

        解説    chanで指定したメモリカードの接続をテストする。
                関数自体は非同期処理のため、直ちに終了する。同一のカード差し
                込み口への多重処理登録は行なえない。処理の完了はイベントで通
                知。

               ===========================================================
                原因ディスクリプタ／イベント種別        内容
               -----------------------------------------------------------
                SwCARD/EvSpIOE                          接続されている
                SwCARD/EvSpTIMOUT                       接続されていない
                SwCARD/EvSpNEW                          接続後書き込みなし
                SwCARD/EvSpERROR                        通信エラー発生
               -----------------------------------------------------------

	注意	_new_card()でEvSpNEWを抑制しないでください。
		デバッギングステーションと他のシステムで挙動が食い違います。

        返り値  処理登録に成功すると1を、以外は0を返します。

	備考	関連項目：_card_clear()、_new_card()

------------------------------------------------------------------------------
_card_clear	未確認フラグのクリア

        形式    long _card_clear( chan )
                long chan;

	引数	chan	ポート番号＊１６＋カード番号
				ポート番号:	Ａポート→０  Ｂポート→１
				カード番号:	通常０


        解説    ダミー書き込みをカードのシステム管理領域に行ない、カード中の
		「未確認フラグ」をクリアする。
                 関数自体は非同期処理のため、直ちに終了する。同一のカード差し
                込み口への多重処理登録は行なえない。処理の完了はイベントで通
                知する。

               ===========================================================
                原因ディスクリプタ／イベント種別        内容
               -----------------------------------------------------------
                HwCARD/EvSpIOE                          処理完了
                HwCARD/EvSpTIMOUT                       接続されていない
                HwCARD/EvSpERROR                        通信エラー発生
               -----------------------------------------------------------

        返り値  処理登録に成功すると1を、以外は0を返す。

	備考	関連項目：_card_info()

------------------------------------------------------------------------------
_card_load	論理フォーマットテスト

        形式    long _card_load( chan )
                long chan;

	引数	chan	ポート番号＊１６＋カード番号
				ポート番号:	Ａポート→０  Ｂポート→１
				カード番号:	通常０

        解説    入出力管理サービスによる非同期アクセスのためにファイルシステム
                にファイル管理情報を読み込む。O_NOWAITモードでメモリカード
                上のファイルをオープンする前に必ず実行する必要がある。カードが
                入れ替わらない限り反復して実行する必要はない。
                関数自体は非同期処理のため、直ちに終了する。同一のカード差し
                込み口への多重処理登録は行なえない。処理の完了はイベントで通
                知する。所要時間は７２VSYNC。
		O_NOWAITモードのopen()を行なう前に必ず１度実行する。

               ===========================================================
                原因ディスクリプタ／イベント種別        内容
               -----------------------------------------------------------
                SwCARD/EvSpIOE                          読み込み完了
                SwCARD/EvSpTIMOUT                       接続されていない
                SwCARD/EvSpNEW                          未初期化カード
                SwCARD/EvSpERROR                        通信エラー発生
               -----------------------------------------------------------

        返り値  処理登録に成功すると1を、以外は0を返す。

	備考	関連項目：format()、_card_info()

------------------------------------------------------------------------------
_card_auto	自動フォーマット機能の設定

	形式	long _card_auto( val )
		long val;

	引数	val	0:自動フォーマット禁止  1:許可

	解説	自動フォーマット機能の有無を設定する。

	返り値	なし

	備考	テスト用。

------------------------------------------------------------------------------
_new_card	未確認フラグテストの設定変更

        形式    void    _new_card( void )

        引数    なし

        解説    直後の_card_read()または_card_write()でのEvSpNEWイベントの発生
                をマスクする。
                同期処理関数だが直ちに終了する。

        返り値  なし

	備考	関連項目：_card_clear()、_card_read()、_card_write()

------------------------------------------------------------------------------
_card_status	メモリカードBIOSステータスの取得

        形式    long _card_status( drv )
                long drv;

        引数    drv     差し込み口番号  0：向かって左  1：向かって右

        解説    差し込み口毎のメモリカードBIOSステータスを取得する。
                同期処理関数だが直ちに終了する。

        返り値  メモリカードBIOSが稼働状態にあれば、次のいずれかの値を返す。


                       =================================================
                        値      状態
                       -------------------------------------------------
                        0x01    登録処理なし
                        0x02    READ処理登録あり
                        0x04    WRITE処理登録あり
                        0x08    接続テスト処理登録あり
                        0x11    登録処理なし（直前にタイムアウト発生）
                        0x21    登録処理なし（直前に通信エラー発生）
                       -------------------------------------------------

	備考	関連項目：_card_wait()、_card_chan()

------------------------------------------------------------------------------
_card_wait	メモリカードBIOS処理完了待ち

        形式    long _card_status( drv )
                long drv;

        引数    drv     差し込み口番号  0：向かって左  1：向かって右

        解説    drvで指定する差し込み口宛の登録処理がなくなるまで待つ。


        返り値  常に1を返す。

	備考	関連項目：_card_status()、_card_chan()

------------------------------------------------------------------------------
_card_chan	メモリカードBIOSイベントの取得

        形式    long _card_chan( void )

        引数    なし

        解説    直前にイベントを発生したメモリカードのデバイス番号を返す。
                オープンやテストの有無に関わらず、何らかのイベントが発生すると
                返り値が変更される。（通常は垂直帰線の中頃、カードがセットされ
                ていないチャネルでは次の垂直帰線でのBIOS起動後、にそれぞれイベ
		ントが発生。）

        返り値  16進2桁のデバイス番号

	備考	関連項目：_card_status()、_card_wait()

------------------------------------------------------------------------------
_card_write     メモリカードの1ブロックへの書き込み

        形式    long _card_write( chan, block, buf )

        引数    chan    ポート番号＊１６＋カード番号
                                ポート番号:     Ａポート→０  Ｂポート→１
                                カード番号:     通常０
                block   ターゲットブロック番号
                buf     128バイトのデータバッファへのポインタ

        解説    chanで指定したメモリカードのblock番ブロックにbufがポイントする
                128バイトデータを書き込む。
                関数自体は非同期処理のため、直ちに終了する。同一のカード差し
                込み口への多重処理登録は行なえない。処理の完了はイベントで通
                知。

		＊低レベルインタフェースです。テストなど特殊な用途にのみ使用
		  します。

               ===========================================================
                原因ディスクリプタ／イベント種別        内容
               -----------------------------------------------------------
                HwCARD/EvSpIOE                          処理完了
                HwCARD/EvSpTIMOUT                       カード未接続
                HwCARD/EvSpNEW                          新規カード検出
                HwCARD/EvSpPERROR                       通信エラー発生
                HwCARD/EvSpERROR                        書き込みエラー発生
                HwCARD/EvSpUNKOWN                       原因不明
               -----------------------------------------------------------

        返り値  処理登録に成功すると1を、以外は0を返す。

	備考	関連項目：_card_read()

------------------------------------------------------------------------------
_card_read      メモリカードの1ブロックの読み込み

        形式    long _card_read( chan, block, buf )

        引数    chan    ポート番号＊１６＋カード番号
                                ポート番号:     Ａポート→０  Ｂポート→１
                                カード番号:     通常０
                block   ターゲットブロック番号
                buf     128バイトのデータバッファへのポインタ

        解説    chanで指定したメモリカードのblock番ブロックの内容をbufがポイン
                トする128バイトバッファに読み込む。
                関数自体は非同期処理のため、直ちに終了する。同一のカード差し
                込み口への多重処理登録は行なえない。処理の完了はイベントで通
                知。

		＊低レベルインタフェースです。テストなど特殊な用途にのみ使用
		  します。

               ===========================================================
                原因ディスクリプタ／イベント種別        内容
               -----------------------------------------------------------
                HwCARD/EvSpIOE                          処理完了
                HwCARD/EvSpTIMOUT                       カード未接続
                HwCARD/EvSpNEW                          新規カード検出
                HwCARD/EvSpPERROR                       通信エラー発生
                HwCARD/EvSpUNKOWN                       原因不明
               -----------------------------------------------------------

        返り値  処理登録に成功すると1を、以外は0を返す。

	備考	関連項目：_card_write()

------------------------------------------------------------------------------

								以上


