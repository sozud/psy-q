$PSDocId: Document Version 1.0 for Runtime Library Version 3.3$

95/05/25 v1.2 yoshi


		プログラムの読み込み＆実行について


これまで、CDからプログラムを読み込んで実行させる方法としては、

   CD関数、又はLoad()を使ってEXEファイルを読み、Exec()する方法
   LoadExec()を使用する方法

の２通りがありました。(DTL-S2180:PSX\SAMPLE\EXEC\MENU参照）
この度、PSY-Qツールのバージョンアップにより、新たに

   オーバレイを用いる方法

が使用できるようになりました。
以下、各方法の特徴を挙げておきます。
また、それぞれの具体的な解説については

PSX\SAMPLE\MODULE\EXECMENU\EXEC.TXT
PSX\SAMPLE\MODULE\OVERMENU\OVER.TXT

を参照して下さい。


１）CD関数、又はLoad()を使ってEXEファイルを読み、Exec()する方法
  利点：子プログラムのみで独立して起動する事が可能なため、複数の子プログラムを
  	並行して開発する場合に便利である。
  欠点：親と子の両方にライブラリがリンクされているため、親から子、子から親へ
  	処理が移る際には割り込みを全て止める必要がある。
	また、メモリ効率も悪い。

    メモリ構成の例

      +---------------+ 親のスタックポインタ初期値
      |               |    下方向にスタックが消費される。
      |               |
      +---------------+ 子のスタックポインタ初期値
      |               |    下方向にスタックが消費される。
      |               |
      |               |
      |               |
      +---------------+
      |     ライブラリ|
      |       --------+
      |               |
      | 子(.EXE)      |
      +---------------+ 子のロードアドレス
      |     ライブラリ|
      |       --------+
      |               |
      | 親(.EXE)      |
      +---------------+ 親のロードアドレス
      | システム領域  |
      +---------------+


２）LoadExec()を使用する方法
  利点：子プログラムのみで独立して起動する事が可能なため、複数の子プログラムを
  	並行して開発する場合に便利である。
	親の上にオーバーロードする事ができ、その場合は親子共に2mbyteフルに
	使えるので開発が楽である。
  欠点：親と子の両方にライブラリがリンクされているため、親から子、子から親へ
  	処理が移る際には割り込みを全て止める必要がある。
	_96_init()してから実行しなければならないので、処理が遅い。

    メモリ構成の例
    （親の上に子をオーバーロードした場合）

      +---------------+ 親及び子のスタックポインタ初期値
      |               |
      |               |
      |               |
      |               |
      |               |
      |               |
      |               |
      +---------------+
      |     ライブラリ|
      |       --------+
      |               |
      | 親(.EXE)      |
      | 子(.EXE)      |
      +---------------+ 親及び子のロードアドレス
      | システム領域  | 
      +---------------+


３）オーバレイを用いる方法
　利点：子は関数単位で呼び出せる。（ロードはユーザ管理で行う）
  　　　親と子でライブラリを共有しているので、割り込みを止める必要がないため、
	ロード中に別の処理を実行する事も可能である。メモリ効率も良い。
　欠点：リンクファイルの作成、コンパイルオプションの設定等、make作業が多少
	繁雑になる。ライブラリは全て親側にリンクされるので、親のサイズが
	大きくなる。


    メモリ構成の例

      +---------------+ スタックポインタ初期値（親と子で共有）
      |               |
      |               |
      |               |
      |               |
      |               |
      |               |
      |               |
      +---------------+
      |               |
      | 子(.BIN)      |
      +---------------+ 子のロードアドレス
      |     ライブラリ|
      |       （共有）|
      |       --------+
      |               |
      |               |
      | 親(.EXE)      |
      +---------------+ 親のロードアドレス
      | システム領域  |
      +---------------+


								以上
