
95/10/01


	DBUGPSX PSY-Q デバッガ    ドキュメント（日本語版）



（１）このドキュメントについて

  このDEBUGJ.TXTには、最新のバージョンに関する変更／追加機能等の情報が
  書かれています。基本的な操作方法、オプション等の説明は、
  「DTL-D2130 Psy-Q プログラマーズガイド Ver2.0」をご覧下さい。


（２）起動時の注意

    日本語モードより起動する場合は、必ず /r オプションで行数指定を行って
    下さい。PCがハングアップする場合があります。

	（起動例）
	DOS> DBUGPSX /r50 /e main


（３）前バージョン(Ver.4.52)からの変更点

	1.フル画面表示のバグフィクス
   　　　「ctrl-Zでカレントウィンドウをフルサイズに ZOOM UP した後、その画面
	 中でマウスをクリックするとハングアップする」というバグを直した。

	2.ソースファイルのオートロード
	  デバッグ情報付きのSYMファイルであった場合、起動時にソースファイルを
	　自動的に呼び出すようになった。

	3.オーバレイサポート
	　オーバレイしているファイル(.BIN)に応じて、自動的にソースファイルを
	　切り替える機能が追加された。
	　ただし、psylink オプション /v でリンクされている必要がある。

	4.ファイルのパス指定機能追加
	  Fileウィンドウで alt-P を入力する事により、呼び出すファイルのパスが
	  指定できるようになった。

	5.BPトリガカウント機能追加
	  shift-F6 で、全てのBPトリガカウントをクリアできるようになった。

	6.VAR,WATCHウィンドウでalt-L,ctrl-Lが入力された場合、警告を出して
	  受け付けないようにした。
	　（これまでは、変数の表示がクリアされてしまっていた。)



（３）ハードウェアブレーク機能について

    Ver.4.30より、ハードウェアブレーク機能が使用できるようになっています。
    ある範囲のアドレスに対して read/write アクセスがあった時にブレークします。
    この機能を使用するには、DBUGPSX を起動する前に、あらかじめ NEWDEX.CPE が
    実行されていなければなりません。NEWDEX.CPEは、CPUのハードウェアブレーク
    機能を使用する為に必要なモジュールです。

	（起動例）
	DOS> run patchx
	DOS> run newdex
	DOS> dbugpsx /r50 /e main

	（使用法）
	Alt-B でダイアログが表示され、パラメータが要求されます。
	（NEWDEX.CPEが実行されていない場合は「Hardware Break requires newer 
	Psy-Q downloader」とエラーが出ます。）
	指定するパラメータの詳細を以下に挙げます。

	Read access:
	  指定アドレスをリードした時にブレークします。

	Write access:
	  指定アドレスにライトした時にブレークします。

	Assembly Syntax (use ASM):
	  指定された範囲のアドレスに対してブレークポイントをセットします。
	  デバッガは、直前にアクセスしたアドレス(Access address)と
	  Base address を比較し、一致していればブレークします。ただし、
	  その比較の際、Address mask で 0 のビットは無視されます。
	  この Address mask の値によって範囲の指定を行います。
	  式で表すと、以下のようになります。この式が真である場合に
	  ブレークします。
	     (Base address) == ((Access address) & (Address mask))

 	  （例）
	  Base address は16進入力、Address mask は16/10進入力。 
	  
	  Base address	80080000
	  Address mask	$fffffffc (or -4)
	  では、0x80080000-0x80080003 の範囲が指定されます。

	  Base address	80080000
	  Address mask	$fffffff0 (or -10)
	  では、0x80080000-0x8008000f の範囲が指定されます。


	C Syntax (use C):
	  指定のアドレスに対してブレークポイントをセットします。
	  シンボル指定もできるので、任意の関数、グローバル変数をセット
	  できます。
	  ある関数中のローカル変数を指定する事もできますが、その場合は、
	  既にその関数まで処理が移っている事と、-g オプションでコンパイル
	  されている事が条件です。



（４）その他の追加／変更点

  各ウィンドウについての機能説明を挙げます。

	無印：DTL-D2130の説明とほぼ同じ項目
	●  ：DTL-D2130より、詳しく解説している項目
	★  ：DTL-D2130より、新たに追加された項目
	◎　：今回のバージョンで、新たに追加された項目


＊＊＊　全ウィンドウ共通 KEY FUNCTION :　＊＊＊

  shift+矢印    カレントウィンドウを変更します。

  F1		カレントウィンドウを変更します。矢印キーで選択します。

  F2		ウィンドウの端を移動させます。(ウィンドウサイズ変更)

  F3		新しいウィンドウを作成します。(ウィンドウ分割)

  F4		ウィンドウを削除します。

  F7		トレースモードです。ステップ実行します。
    		ソース及びディスアセンブルウィンドウで有効です。

  F8		ステップオーバーモードです。ステップ実行しますが、
    		関数コールはステップオーバーされます。

  F9		現在のプログラム位置から実行します。

  F10		メニューを開きます。矢印キーで選択して下さい。

  ESC		ターゲットを停止させます。

  shift-ESC	割り込みをOFFにし、ターゲットを停止させます。

  shift-f1	ウィンドウ種類選択

  shift-f5	全てのブレークポイントをクリア

◎shift-f6	全てのブレークポイントカウントをクリア

  shift-f9	指定アドレスまで実行

  shift-f10	新しいコンフィグファイル読み込み

  alt-U		更新モードの ON/OFF を切り替えます。ONの場合、実行中定期的に
		ウィンドウの情報をを更新します。少しCPUに負荷がかかります。
		デフォルトでは起動時はONになっています。

  alt-I		更新間隔を設定します。1/18秒単位で設定できます。
		（18で1秒、9で0.5秒）

●alt-L		表示を指定したアドレスにロックします。
		（例：HEXウィンドウにて'sp'と指定すれば、常にカレントスタック
		の位置にロックされます。）

  ctrl-L	ロックを ON/OFF します。

★ctrl-S	全レジスタの値をバッファにセーブします。

★ctrl-R	バッファから全レジスタの値をロードします。

  alt-H		16進計算機です。

  alt-V		バージョン表示

  alt-X		終了（設定保存する）

★ /		更新モードがOFFの場合でも、強制的にウィンドウの情報を
		更新します。

★ *		強制的に全てのウィンドウの情報を更新し、表示し直します。

  ctrl-X	終了（設定保存しない）

★ctrl-F	指定した値でメモリを埋めます。

  ctrl-Z	カレントウィンドウを、一時的にフル画面表示します。
		もう一度押すと戻ります。

★alt-P		カレントウィンドウの内容を、LPT1に出力します。

  alt-NUM	仮想スクリーンに切り替えます。
		（NUM = 1-9、0 は 10）

★alt-B		ハードウェアブレーク機能（前述）



＊＊＊　HEX : メモリウィンドウ　＊＊＊

  alt-F		カーソル位置の内容から、ロングワードポインタ参照される先へ
		画面表示を移動します。

●<return>	カーソル位置の内容を、expressionで指定する内容に変更します。
		[Assembler expression]
		  16進数で指定します。他にもレジスタ、変数、関数等の各種
		  シンボルが指定できます。
		[C expression]
		  10進数で指定します。他にも変数等の各種シンボルが指定できます。
　0-9 A-F a-f	カーソル位置の内容を、直接変更します。

　矢印キー	カーソル移動

　pg-up pd-down	画面表示を１ページずつ移動します。

　alt-W		バイト／ワード／ロングワード表示切り替え

　+		カーソル位置の内容を増やします。

　-		カーソル位置の内容を減らします。

　alt-G		指定アドレスに移動します。

★alt-S		指定するパターンをサーチします。TEXT形式でも検索できます。

★alt-N		上記のサーチを再度実行します。



＊＊＊　DIS : ディスアセンブルウィンドウ　＊＊＊

★alt-S		指定の命令をサーチします。

★alt-N		上記のサーチを再度実行します。

★ctrl-D	ディスアセンブル結果をファイルに記録します。

　left, right	画面表示移動

　up, down	カーソル移動

　pg-up pd-down	画面表示を１ページずつ移動します。

　alt-G		指定アドレスに移動します。

　tab		カーソル位置を、プログラムカウンタ(PC)の位置に移動させます。

　shift-tab	カーソル位置のアドレスをPCの値にセットします。

　F5		カーソル位置をブレークポイント（以下BP）ON/OFF指定

　F6		カーソル位置まで実行します。

●ctrl-C	BPトリガカウント設定

		カーソルラインをブレークポイントに合わせ、Ctrl-Cで
		Enter BP trigger count : -
		とダイアログが出ます。ここでブレークポイントの回数を指定
		します。例えば 3 を指定すると、３回目にそこのブレークポイントを
		通過する時に初めてブレークします。

●alt-C		BPトリガ条件設定

		カーソルラインをブレークポイントに合わせ、Alt-Cで
		Enter BP trigger expression : -
		とダイアログが出ます。ここで、ブレークする条件を指定します。
		表記は、アセンブラ(ASMPSX)でサポートされる表記法に準じます。

		（例）
		t0=0		; t0 が 0 ならブレークします。
   		[t1].l&1	; t1が指し示すワード(long:4byte)が奇数なら
				  ブレークします。
		[myflag].b>5	; ラベル myflag のバイト(1byte)が 5 より
				  大きいならブレークします。



＊＊＊　REG : レジスタウィンドウ　＊＊＊

　left right
　up down	カーソル移動

　0-9 A-F a-f	レジスタ値を直接変更

　<return>	レジスタ値を指定の値に変更



＊＊＊　WATCH: WATCH ウィンドウ　＊＊＊

　up down	カーソル移動

★alt-G		グローバル変数一覧表示
		いちいちinsertで登録せずとも、alt-Gで総てのグローバル変数を
		一度に表示できます。

●insert	新しいウォッチ式追加

		expressionには、アドレス、変数、関数等の各種シンボルが指定
		できます。
		[Assembler expression]
		  expressionで指定された番地より、formatに基づいてダンプ表示
		  します。formatの意味は次の通りです。
		    バイト長  B   1byte
		              W	  2byte(word)
		              L   4byte(long-word)
		    形式      A   ASCII形式
		              D   10進形式
		              H   16進形式
		              I   instruction形式
		              U   符号なし10進形式
		  （例）
		  format BA : 1バイトずつASCII表示
 		  format LH : 4バイトずつ16進表示
		[C expression]
		  expressionの内容を表示します。
		  構造体の場合は、以下に述べる「+」キーにて、各メンバを
		  詳しく表示できます。

　delete	ウォッチ式削除

★tab		10進/16進/ASCII表示切り替え

★ +		構造体メンバ表示、配列メンバ表示
		構造体に合わせ + キーを押すと、各メンバの値を表示します。
		配列に合わせ + キーを押すと、まず最初の要素[0]の内容が
		表示されます。その後カーソルを[0]に合わせて、矢印キーの
		左右で、[1][2]...と、各要素の内容が順に見れます。

★ -		構造体、配列メンバ表示を閉じます。



＊＊＊　VAR : 変数ウィンドウ　＊＊＊

機能はWATCHウィンドウに準じます。
但し、insert,delete,alt-G 機能は使えません。



＊＊＊　FILE：ファイルウィンドウ　＊＊＊

　pg-up pg-down
　up down	カーソル移動

　<enter>	指定したファイルを表示

★alt-S		テキストサーチ

★alt-N		上記のサーチを再度実行します。

　tab		プログラムカウンタ(PC)に移動

　shift-tab	カーソル位置をPCにセット

　f7		カレントソースのステップ実行

　f8		カレントソースのステップオーバー実行

　F5		カーソル位置をブレークポイント（以下BP）ON/OFF指定

　F6		カーソル位置まで実行します。

　alt-G		指定アドレスに移動

　alt-L		指定行番号へ移動

◎alt-P		ファイルパス指定
		ファイルをサーチするパスを指定できます。
		カレント以外のディレクトリにあるファイルをこまめに呼び出したい
		場合などは、あらかじめパスを指定しておけば楽です。
		（例）C:\GAME\WORK1;C:\GAME\WORK2
 

＊＊＊　MSG : メッセージウィンドウ　＊＊＊

  ★IRQ割り込みについて
    
    IRQ割り込みを利用する事により、MSGウィンドウへの出力を高速にする事が
    できます。それには以下の設定が必要です。
   
      1) DTL-H2000のIRQジャンパを設定する。詳しくはH2000の取扱説明書参照。
         （出荷時はIRQなしに設定されています）

      2) DEXBIOS起動時にオプション /i を設定する
         （例：address 0x1340, IRQ 10 に設定している場合）
         DOS> DEXBIOS /a1340 /i10

    （ご注意）
    IRQ割り込みを使用した場合、短い時間に大量のメッセージを出力しようとすると、
    デバッガ内部のバッファに入り切らずに、表示が抜け落ちてしまう場合があり
    ます。そのような場合は、DEXBIOSの /i 設定をせずにご使用下さい（IRQなしの
    状態になります）。


								以上
